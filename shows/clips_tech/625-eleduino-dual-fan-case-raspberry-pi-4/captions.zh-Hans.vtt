WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.770 --> 00:00:06.690
这个星期，虽然我们要

00:00:04.380 --> 00:00:09.269
看着Raspberry Pi 4和

00:00:06.690 --> 00:00:12.920
特别是关于

00:00:09.269 --> 00:00:15.750
 Raspberry Pi 4的散热方面

00:00:12.920 --> 00:00:20.730
树莓在这里越来越热

00:00:15.750 --> 00:00:22.949
皮一直在跑所以是83 

00:00:20.730 --> 00:00:26.939
工作室里的学位正在处理

00:00:22.949 --> 00:00:29.099
天哪，我知道我不会把那东西

00:00:26.939 --> 00:00:31.050
我们的空气可能很好

00:00:29.099 --> 00:00:33.960
条件已被打破

00:00:31.050 --> 00:00:41.010
过去几周，因为这是一个

00:00:33.960 --> 00:00:43.620
 Raspberry Pi的热测试，但它

00:00:41.010 --> 00:00:46.440
在这个方面对我们来说很好

00:00:43.620 --> 00:00:50.460
实例是，Raspberry Pi 4是已知的

00:00:46.440 --> 00:00:54.030
成为一个热门的小工具，让我们

00:00:50.460 --> 00:00:57.090
只是说天气变热，什么时候变热

00:00:54.030 --> 00:00:59.550
每个谣言都会扼杀它吗

00:00:57.090 --> 00:01:01.829
本身是的，所以嘿，如果她看起来很漂亮

00:00:59.550 --> 00:01:03.719
很快就会变热

00:01:01.829 --> 00:01:10.049
降低油门并跑一点

00:01:03.719 --> 00:01:14.549
是的，慢一点，把它粘在冰箱里

00:01:10.049 --> 00:01:16.189
并插入电缆，它将运行1.5 

00:01:14.549 --> 00:01:23.970
千兆赫否不要那样做否

00:01:16.189 --> 00:01:25.229
凝结，正确的做法是

00:01:23.970 --> 00:01:27.869
添加散热器

00:01:25.229 --> 00:01:30.240
这就是每个人的哦，是的，添加一个

00:01:27.869 --> 00:01:32.159
散热器到您的Raspberry Pi 4 

00:01:30.240 --> 00:01:33.750
做正确的事我们没有

00:01:32.159 --> 00:01:37.079
做到了今晚我们正在看

00:01:33.750 --> 00:01:38.579
 Raspberry Pi 4 4 GB哦，这是一个

00:01:37.079 --> 00:01:39.750
好吧，我的天哪

00:01:38.579 --> 00:01:41.840
你们那边的绿色烟雾可以吗

00:01:39.750 --> 00:01:44.640
闻到

00:01:41.840 --> 00:01:47.970
你只是把鸡蛋弄碎，然后把鸡蛋炸

00:01:44.640 --> 00:01:50.310
我在Raspberry Pi 4上做了

00:01:47.970 --> 00:01:52.619
实际上把我的手放在那只箱子上

00:01:50.310 --> 00:01:55.200
演出前的那边，我

00:01:52.619 --> 00:01:56.939
感觉到热量散发出来

00:01:55.200 --> 00:01:59.579
会感觉有点温暖

00:01:56.939 --> 00:02:01.920
没有足够的热量使塑料熔化

00:01:59.579 --> 00:02:05.369
去了，但它正在变得有点

00:02:01.920 --> 00:02:08.039
有点温暖，所以我们想看看

00:02:05.369 --> 00:02:11.629
我们可以加热Raspberry Pi 

00:02:08.039 --> 00:02:14.780
 4只需运行

00:02:11.629 --> 00:02:18.560
压力测试以及该怎么办

00:02:14.780 --> 00:02:20.090
它会尽可能地运行CPU吗

00:02:18.560 --> 00:02:21.950
我们可能可以运行它，我们要

00:02:20.090 --> 00:02:25.129
基本上把这东西屈膝

00:02:21.950 --> 00:02:27.650
看看我们能不能弄热它

00:02:25.129 --> 00:02:30.590
看看我们能否使它节流

00:02:27.650 --> 00:02:31.849
之所以这样，是因为我们听说过

00:02:30.590 --> 00:02:34.069
如果你一直在寻找谣言

00:02:31.849 --> 00:02:36.019
在Raspberry Pi上大概

00:02:34.069 --> 00:02:39.049
桌面更换甚至

00:02:36.019 --> 00:02:40.909
作为桌面上的东西

00:02:39.049 --> 00:02:43.700
电脑，也许是机顶盒

00:02:40.909 --> 00:02:47.409
很棒，它有两个4k HDMI 

00:02:43.700 --> 00:02:49.849
输出，因此您可以连接电视

00:02:47.409 --> 00:02:51.859
从理论上讲，这就是我的意思

00:02:49.849 --> 00:02:53.989
这是一个强大的小野兽

00:02:51.859 --> 00:02:58.189
如果变热就会变热

00:02:53.989 --> 00:03:01.280
它会自行节流吗？ 

00:02:58.189 --> 00:03:03.950
加快速度，降低速度

00:03:01.280 --> 00:03:06.709
为了保持凉爽，我要跳

00:03:03.950 --> 00:03:08.720
真的真的很快

00:03:06.709 --> 00:03:10.400
我只是在现场工作

00:03:08.720 --> 00:03:13.879
我只想快速向您展示

00:03:10.400 --> 00:03:17.000
这种情况下的内部是裸露的

00:03:13.879 --> 00:03:19.190
 Raspberry Pi 4和我的意思是

00:03:17.000 --> 00:03:20.510
有没有散热器，它是

00:03:19.190 --> 00:03:22.459
运行它已经运行了大约

00:03:20.510 --> 00:03:24.199
在工作室D的一个小时，我们已经

00:03:22.459 --> 00:03:26.569
故意那样做，以便我们

00:03:24.199 --> 00:03:29.930
可以进行一些热测试并找出

00:03:26.569 --> 00:03:32.569
这东西会落到哪里

00:03:29.930 --> 00:03:35.629
温度和频率以及

00:03:32.569 --> 00:03:38.030
在这种情况下，频率是指

00:03:35.629 --> 00:03:40.280
处理器运行正常，速度很快

00:03:38.030 --> 00:03:43.909
因此Raspberry Pi的基本频率

00:03:40.280 --> 00:03:48.169
 4就像600,000就是600 

00:03:43.909 --> 00:03:51.530
兆赫兹，所以0.6兆赫兹

00:03:48.169 --> 00:03:53.239
按照当前的标准，所以我实际上

00:03:51.530 --> 00:03:57.290
在我的电脑屏幕上看到了

00:03:53.239 --> 00:04:00.139
 SSH in，我在NEMS Linux上有一个工具

00:03:57.290 --> 00:04:02.000
所以这个工具是开源的

00:04:00.139 --> 00:04:04.430
欢迎使用它随身携带

00:04:02.000 --> 00:04:06.409
想做但是它确实依赖于

00:04:04.430 --> 00:04:08.810
 NEMS提供的热数据

00:04:06.409 --> 00:04:11.709
 NEMS Linux操作的信息部分

00:04:08.810 --> 00:04:15.169
系统是一个监视系统

00:04:11.709 --> 00:04:17.209
树莓派PI和其他设备单一

00:04:15.169 --> 00:04:19.099
板电脑，它可以让您

00:04:17.209 --> 00:04:20.989
监视网络，您可以找到

00:04:19.099 --> 00:04:22.860
甚至下载并运行相同的文件

00:04:20.989 --> 00:04:26.909
设备和NEMS上的任务

00:04:22.860 --> 00:04:29.759
 NEMS linux的根文件夹中的XCOM是

00:04:26.909 --> 00:04:31.979
男性和男性内部一个名为NEMS的文件夹

00:04:29.759 --> 00:04:36.030
该文件夹是一个名为NEMS的程序

00:04:31.979 --> 00:04:39.150
压力nem压力使用linux压力

00:04:36.030 --> 00:04:41.849
命令，如我所说的带来

00:04:39.150 --> 00:04:44.159
它要跪下来的东西

00:04:41.849 --> 00:04:47.789
有多少个核心

00:04:44.159 --> 00:04:53.300
处理器，然后说我们要最大化

00:04:47.789 --> 00:04:56.460
所有这些核心是的，只是所有

00:04:53.300 --> 00:04:57.659
如此令人难以置信的处理量

00:04:56.460 --> 00:04:59.699
你不想在一个

00:04:57.659 --> 00:05:01.409
生产系统，我们正在

00:04:59.699 --> 00:05:03.900
坐在我们长凳上的系统

00:05:01.409 --> 00:05:06.659
特别是看热量和

00:05:03.900 --> 00:05:09.270
频率，因此nem压力会报告

00:05:06.659 --> 00:05:12.930
一点数据

00:05:09.270 --> 00:05:15.449
收集的频率

00:05:12.930 --> 00:05:18.900
处理器速度下降了吗

00:05:15.449 --> 00:05:20.879
计时，是否是什么

00:05:18.900 --> 00:05:22.259
温度是，所以我要跳过

00:05:20.879 --> 00:05:25.319
在这里，因为它将要发生

00:05:22.259 --> 00:05:28.349
五分钟运行，让我们放大并

00:05:25.319 --> 00:05:30.419
在该文件夹中，主斜杠路由斜杠

00:05:28.349 --> 00:05:35.969
克星斜线名称管理员，我只是

00:05:30.419 --> 00:05:38.009
像这样运行点名称并强调

00:05:35.969 --> 00:05:39.690
我们要让它运行，这是

00:05:38.009 --> 00:05:42.810
要花五分钟，所以

00:05:39.690 --> 00:05:44.789
已经激活他们的压力我该怎么办

00:05:42.810 --> 00:05:47.819
知道我实际上可以切换窗户

00:05:44.789 --> 00:05:50.039
在这里，我有另一个终端窗口， 

00:05:47.819 --> 00:05:51.960
我要输入H top，让我们来看看

00:05:50.039 --> 00:05:54.479
这是怎么回事，你看到

00:05:51.960 --> 00:05:59.669
处理器，它被最大化了，所以我们

00:05:54.479 --> 00:06:02.789
我们现在达到1-1的平均负载

00:05:59.669 --> 00:06:06.389
 10.38，现在平均负载为

00:06:02.789 --> 00:06:09.120
十二点四三爬

00:06:06.389 --> 00:06:11.629
十四点四，你会看到我们的四

00:06:09.120 --> 00:06:14.789
树莓派的四个核心

00:06:11.629 --> 00:06:18.120
 100％都用完了，我们正在带那个东西

00:06:14.789 --> 00:06:21.509
正确地屈膝，如果我执行任务

00:06:18.120 --> 00:06:24.210
回到我们的压力测试中

00:06:21.509 --> 00:06:26.550
因此，如果您没有

00:06:24.210 --> 00:06:29.069
第二个窗口打开，您只会看到

00:06:26.550 --> 00:06:31.349
它正在消失，是的，我

00:06:29.069 --> 00:06:33.779
只是简单地看到这个点

00:06:31.349 --> 00:06:35.490
点点点，但后来我得到报告

00:06:33.779 --> 00:06:36.449
杰夫说对了，我们要去

00:06:35.490 --> 00:06:38.460
看到该数据

00:06:36.449 --> 00:06:40.650
报告中的内容对我们非常重要

00:06:38.460 --> 00:06:43.259
正如我提到的，这是跟踪

00:06:40.650 --> 00:06:46.050
基本上每一次小小的迭代

00:06:43.259 --> 00:06:48.150
每秒都在跟踪诸如

00:06:46.050 --> 00:06:51.449
热数据的频率

00:06:48.150 --> 00:06:55.050
处理器规模扩大了吗

00:06:51.449 --> 00:06:57.629
温度下降了

00:06:55.050 --> 00:07:00.809
然后最后在最后

00:06:57.629 --> 00:07:03.029
平均是哦，它也得到了吗

00:07:00.809 --> 00:07:05.759
给你像个实时的哦

00:07:03.029 --> 00:07:07.499
花了很长时间才达到最大值，然后

00:07:05.759 --> 00:07:09.449
不知道不是因为

00:07:07.499 --> 00:07:11.960
平均只有五分钟

00:07:09.449 --> 00:07:15.419
对，所以这就是我所看到的

00:07:11.960 --> 00:07:16.469
最后是一般报告

00:07:15.419 --> 00:07:18.870
您将在一个

00:07:16.469 --> 00:07:21.779
片刻的时间，看着H顶

00:07:18.870 --> 00:07:25.080
再次在那里它仍然坐在100％ 

00:07:21.779 --> 00:07:27.330
我们为什么要这样做我想看看

00:07:25.080 --> 00:07:31.099
这是关键，我们都感兴趣

00:07:27.330 --> 00:07:33.569
在树莓派中是什么

00:07:31.099 --> 00:07:37.789
如果我们去的话，那会有所不同

00:07:33.569 --> 00:07:40.379
与股票案件权利对

00:07:37.789 --> 00:07:43.050
更高一点的东西为什么会

00:07:40.379 --> 00:07:45.060
我们想花30 40美元买一个

00:07:43.050 --> 00:07:47.219
覆盆子派的情况是

00:07:45.060 --> 00:07:49.229
我们要开始的问题

00:07:47.219 --> 00:07:50.629
可能在本周回答，因为

00:07:49.229 --> 00:07:53.550
替代方法是将其扔进冰箱

00:07:50.629 --> 00:07:56.039
那是一个非常昂贵的案例

00:07:53.550 --> 00:07:58.709
消耗大量电力，这是

00:07:56.039 --> 00:08:01.649
什么影响冰块，这是真的

00:07:58.709 --> 00:08:04.589
这也是真的电视晚餐是一回事

00:08:01.649 --> 00:08:09.389
目前这与我们无关

00:08:04.589 --> 00:08:11.219
我们在这里拥有的解决方案

00:08:09.389 --> 00:08:13.919
找出萨沙我们是否可以煮电视

00:08:11.219 --> 00:08:16.199
如果我们曾经与这个东西共进晚餐

00:08:13.919 --> 00:08:20.399
事情都说完了，所以测试

00:08:16.199 --> 00:08:21.899
是一次跑步，你知道这个你知道

00:08:20.399 --> 00:08:24.689
回到你知道的事实

00:08:21.899 --> 00:08:27.270
我们现在就像一个赛季结束了

00:08:24.689 --> 00:08:29.939
我们可以进行测试的事实已有12年

00:08:27.270 --> 00:08:31.889
等待五分钟

00:08:29.939 --> 00:08:33.180
编译一个节目，我们可以

00:08:31.889 --> 00:08:39.149
充满一点对话

00:08:33.180 --> 00:08:46.050
哦，是啊，谢谢杰夫

00:08:39.149 --> 00:08:48.060
在我们的脚本上，不好吧，好吧，到目前为止

00:08:46.050 --> 00:08:49.510
因为我只是在阅读我在这里看到的东西

00:08:48.060 --> 00:08:52.060
足够，但就这些测试而言

00:08:49.510 --> 00:08:53.560
首先做什么的人

00:08:52.060 --> 00:08:55.000
运行此测试，该如何进行

00:08:53.560 --> 00:08:58.089
它像为什么加热它

00:08:55.000 --> 00:08:59.079
签出Linux Stress命令，以便

00:08:58.089 --> 00:09:00.850
尼姆斯

00:08:59.079 --> 00:09:04.209
强调它是做什么的

00:09:00.850 --> 00:09:06.339
压力命令的几个实例

00:09:04.209 --> 00:09:08.709
最大化处理器及其

00:09:06.339 --> 00:09:10.660
创造了我不知道我认为是九

00:09:08.709 --> 00:09:13.630
它的实例以及每个实例

00:09:10.660 --> 00:09:15.880
实例推动了每个核心

00:09:13.630 --> 00:09:18.220
处理器，所以它真的可以工作

00:09:15.880 --> 00:09:20.709
真的很难，这只是CPU测试， 

00:09:18.220 --> 00:09:22.899
唯一的原因是看CPU是否获得

00:09:20.709 --> 00:09:24.639
很热，油门容易吗

00:09:22.899 --> 00:09:29.199
用压力测试不小心这样做

00:09:24.639 --> 00:09:30.870
喜欢偶然地喜欢多少个标签

00:09:29.199 --> 00:09:34.000
你有没有在谷歌浏览器中打开

00:09:30.870 --> 00:09:37.060
这是对的问题，是的，因为

00:09:34.000 --> 00:09:39.550
事情似乎似乎无限

00:09:37.060 --> 00:09:41.529
喜欢你会问的东西

00:09:39.550 --> 00:09:44.529
它要做很多，然后突然之间

00:09:41.529 --> 00:09:45.130
它会变热并且会减慢它的速度

00:09:44.529 --> 00:09:46.990
下

00:09:45.130 --> 00:09:49.949
腰带就像我不知道nem压力

00:09:46.990 --> 00:09:56.199
正在运行，所以我要再次运行

00:09:49.949 --> 00:09:58.990
看看这是怎么回事，这周我们

00:09:56.199 --> 00:10:02.079
其实有一个Aled，我们知道铝

00:09:58.990 --> 00:10:05.139
我要穿长袍的情况

00:10:02.079 --> 00:10:06.459
 Raspberry Pi适用于眼睑

00:10:05.139 --> 00:10:09.370
我们知道案例现在我们已经看过这些

00:10:06.459 --> 00:10:12.970
为Raspberry Pi Threes和我

00:10:09.370 --> 00:10:14.019
绝对喜欢铝的性质

00:10:12.970 --> 00:10:15.699
这些是因为它们是热量

00:10:14.019 --> 00:10:17.699
消散他们很好

00:10:15.699 --> 00:10:21.430
他们很吸引人

00:10:17.699 --> 00:10:25.630
美观，现在有了Raspberry 

00:10:21.430 --> 00:10:27.850
树莓派发生了什么事是树莓

00:10:25.630 --> 00:10:30.819
 Pi 3手机壳不再兼容

00:10:27.850 --> 00:10:33.130
正确，我们已经看到像

00:10:30.819 --> 00:10:35.860
多年来，Raspberry Pi一直保持着

00:10:33.130 --> 00:10:37.600
相当不错的一致性，所以您知道

00:10:35.860 --> 00:10:39.670
然后将Raspberry Pi 2升级到

00:10:37.600 --> 00:10:41.829
 Raspberry Pi 3可以重复使用

00:10:39.670 --> 00:10:44.620
案例，现在就做好升级

00:10:41.829 --> 00:10:47.440
用Raspberry Pi做不到的事

00:10:44.620 --> 00:10:50.139
任何猜测为什么这就像从

00:10:47.440 --> 00:10:54.459
不，但来自实际身体

00:10:50.139 --> 00:10:58.779
大小的观点是相同的

00:10:54.459 --> 00:10:59.319
是的，有点螺丝孔

00:10:58.779 --> 00:11:01.620
是的

00:10:59.319 --> 00:11:03.510
没有螺丝孔在同一位置

00:11:01.620 --> 00:11:06.540
那会是什么呢？ 

00:11:03.510 --> 00:11:10.230
所以没有转介，我们已经关闭

00:11:06.540 --> 00:11:12.630
不同的端口，是双HDMI 

00:11:10.230 --> 00:11:14.630
所以请记住Raspberry Pi，直到

00:11:12.630 --> 00:11:18.740
 Raspberry Pi 4只有一个

00:11:14.630 --> 00:11:22.140
全尺寸HDMI现在有一个双

00:11:18.740 --> 00:11:25.260
 HDMI micro，因此您必须拥有特殊的

00:11:22.140 --> 00:11:28.350
为了做到这一点，我的热测试

00:11:25.260 --> 00:11:31.050
已经完成好了，这是NEM 

00:11:28.350 --> 00:11:34.550
压力测试这就是我们所知道的

00:11:31.050 --> 00:11:40.140
 Raspberry Pi可以按原样运行

00:11:34.550 --> 00:11:43.200
只是在标准情况下可以正常工作

00:11:40.140 --> 00:11:45.270
尽我们最大的努力

00:11:43.200 --> 00:11:47.310
温度是六十九点六

00:11:45.270 --> 00:11:48.420
有人要写七度

00:11:47.310 --> 00:11:51.120
这下来，因为我们将不得不

00:11:48.420 --> 00:11:55.410
回到这六十九六十九

00:11:51.120 --> 00:11:57.990
六到七摄氏度

00:11:55.410 --> 00:12:00.960
最低温度，以便CPU开启

00:11:57.990 --> 00:12:02.940
树莓派三四坐

00:12:00.960 --> 00:12:05.160
在我们开始之前处于69度

00:12:02.940 --> 00:12:09.000
只是坐在那里无所事事

00:12:05.160 --> 00:12:11.940
好吧，然后继续进行到80 

00:12:09.000 --> 00:12:17.190
五点六九八度

00:12:11.940 --> 00:12:20.400
现在摄氏是有趣的

00:12:17.190 --> 00:12:23.880
怠速最慢的速度是五十一

00:12:20.400 --> 00:12:28.520
点五个千兆赫，所以当你看到

00:12:23.880 --> 00:12:32.279
十五百，那是什么

00:12:28.520 --> 00:12:34.170
 1,500,000实际上是1.5 GHz 

00:12:32.279 --> 00:12:37.770
 Raspberry Pi的最高速度

00:12:34.170 --> 00:12:39.600
没有超频的权利，然后

00:12:37.770 --> 00:12:41.640
最大速度是相同的

00:12:39.600 --> 00:12:43.800
木板很热，这很有趣

00:12:41.640 --> 00:12:45.570
即使达到八十五点

00:12:43.800 --> 00:12:47.459
六九八，因为我听说过

00:12:45.570 --> 00:12:50.490
八十度后它会油门

00:12:47.459 --> 00:12:52.860
它没有抛出它，不是吗

00:12:50.490 --> 00:12:57.720
没有节制频率

00:12:52.860 --> 00:12:59.730
是1.5 GHz的，你知道的是

00:12:57.720 --> 00:13:02.490
第一次运行此测试否

00:12:59.730 --> 00:13:04.529
运行几次只是为了看看这个

00:13:02.490 --> 00:13:06.270
这是没有的结果

00:13:04.529 --> 00:13:08.640
任何一种非常冷却的系统

00:13:06.270 --> 00:13:10.950
有趣，因为像我一样

00:13:08.640 --> 00:13:13.079
阅读评论和人们交谈

00:13:10.950 --> 00:13:14.790
关于天气变热的情况

00:13:13.079 --> 00:13:15.630
节流，如果达到80 

00:13:14.790 --> 00:13:17.759
度数

00:13:15.630 --> 00:13:20.100
摄氏温度会降低

00:13:17.759 --> 00:13:23.399
在持续的时间范围内

00:13:20.100 --> 00:13:24.990
这是五分钟，我确定

00:13:23.399 --> 00:13:26.310
踢了十分钟

00:13:24.990 --> 00:13:30.899
好吧，这太多了，我不能

00:13:26.310 --> 00:13:33.089
处理你们走了不，我只是喜欢

00:13:30.899 --> 00:13:37.139
有没有人看过节目

00:13:33.089 --> 00:13:39.149
在树莓派PI的固件中

00:13:37.139 --> 00:13:40.709
看看节流踢在哪里

00:13:39.149 --> 00:13:42.839
是的，我认为这很有趣

00:13:40.709 --> 00:13:45.569
现在我首先看到你知道

00:13:42.839 --> 00:13:48.209
启动，所以我有它空闲，所以公平

00:13:45.569 --> 00:13:50.100
这里的目标是做到这一点，以便

00:13:48.209 --> 00:13:52.259
两个任务将尽可能接近

00:13:50.100 --> 00:13:56.160
所以我已经闲了大约一个小时

00:13:52.259 --> 00:13:58.589
现在我第一次打开它时

00:13:56.160 --> 00:14:01.110
它坐在600兆赫的右边

00:13:58.589 --> 00:14:03.000
现在我们确实看到了，即使我第一次

00:14:01.110 --> 00:14:04.680
开始此测试，它以1.5的速度运行

00:14:03.000 --> 00:14:05.370
千兆赫兹，关于

00:14:04.680 --> 00:14:07.079
树莓派

00:14:05.370 --> 00:14:09.959
也许是因为NEMS正在做更多事情

00:14:07.079 --> 00:14:11.880
不仅仅是闲着的NamU还有Nagios 

00:14:09.959 --> 00:14:14.519
和其他所有运行，并且

00:14:11.880 --> 00:14:16.139
 MySQL服务器和Apache以及

00:14:14.519 --> 00:14:20.339
其他的一切，还有更多

00:14:16.139 --> 00:14:23.069
这样下去，但是从来没有

00:14:20.339 --> 00:14:26.009
缩小比例，我认为Jeff 

00:14:23.069 --> 00:14:28.709
整个意图，但有节制是

00:14:26.009 --> 00:14:31.949
当一些东西变热的时候

00:14:28.709 --> 00:14:33.120
很快地降低速度是的

00:14:31.949 --> 00:14:34.290
会在那个温度下看到

00:14:33.120 --> 00:14:38.459
增加，因为这是一个很大的

00:14:34.290 --> 00:14:40.860
温度会升高

00:14:38.459 --> 00:14:44.610
八十五点六九八度

00:14:40.860 --> 00:14:48.029
摄氏温度仍然没有超过

00:14:44.610 --> 00:14:50.430
五分钟的门槛

00:14:48.029 --> 00:14:55.560
如果那样坐就最终节流

00:14:50.430 --> 00:14:56.880
 30分钟有可能，但这是

00:14:55.560 --> 00:14:58.579
内核中正在发生的事情

00:14:56.880 --> 00:15:03.920
这是正在发生的事情

00:14:58.579 --> 00:15:03.920
积极地，我没有看到这里发生

00:15:05.630 --> 00:15:10.829
但是你会多久见一次

00:15:08.459 --> 00:15:12.870
使用您的PI至您所需要的位置

00:15:10.829 --> 00:15:14.430
持续最大化

00:15:12.870 --> 00:15:16.110
这就是我们为什么要推动这一点的原因

00:15:14.430 --> 00:15:18.180
跪下来，我们正在这样做

00:15:16.110 --> 00:15:20.279
专门看看它会节流

00:15:18.180 --> 00:15:22.980
是的，它真的会变得很热吗

00:15:20.279 --> 00:15:27.300
不是不是我没有变得超级热

00:15:22.980 --> 00:15:28.970
见过Odroid Xu的身高比85高

00:15:27.300 --> 00:15:31.430
右度和

00:15:28.970 --> 00:15:33.470
快乐地染色，没有

00:15:31.430 --> 00:15:35.000
问题，这是一个有趣的情况

00:15:33.470 --> 00:15:37.209
因为没有散热片

00:15:35.000 --> 00:15:40.399
我们坐在大约85度

00:15:37.209 --> 00:15:43.240
现在也快速浏览一下

00:15:40.399 --> 00:15:47.269
我们的平均气温是78 

00:15:43.240 --> 00:15:50.170
点六七哦，请原谅我六三

00:15:47.269 --> 00:15:53.089
七个三，你们看到了

00:15:50.170 --> 00:15:55.459
七十八点六三七

00:15:53.089 --> 00:15:58.089
低三度

00:15:55.459 --> 00:16:00.889
降低重载温度并

00:15:58.089 --> 00:16:03.500
当然平均频率仍然是

00:16:00.889 --> 00:16:05.810
一分五兆赫兹就呆在那里

00:16:03.500 --> 00:16:08.540
并保持正确的权利，所以现在我

00:16:05.810 --> 00:16:11.720
将停止Raspberry Pi四教练

00:16:08.540 --> 00:16:13.819
是要关闭它，我已经失去连接

00:16:11.720 --> 00:16:15.620
到Raspberry Pi 4，我要

00:16:13.819 --> 00:16:18.620
跳过这里，我们会得到一个

00:16:15.620 --> 00:16:20.720
看看这个埃拉，我们知道情况了吗

00:16:18.620 --> 00:16:22.790
我走过我们这里的人们

00:16:20.720 --> 00:16:25.430
要断开Raspberry Pi的四个连接

00:16:22.790 --> 00:16:29.180
从外围设备，我们已经关闭了

00:16:25.430 --> 00:16:30.829
停止使用，让我们开始

00:16:29.180 --> 00:16:31.310
如果我能感觉到热量散发出去

00:16:30.829 --> 00:16:35.689
那

00:16:31.310 --> 00:16:40.069
我的意思是85度哦，是的，哦，感觉

00:16:35.689 --> 00:16:41.809
抽烟你想感觉是的

00:16:40.069 --> 00:16:44.360
就像是展示让自己动手

00:16:41.809 --> 00:16:46.009
在这里，所以有趣的事情不要

00:16:44.360 --> 00:16:48.250
触摸处理器，但其他任何方法

00:16:46.009 --> 00:16:50.930
公平的游戏

00:16:48.250 --> 00:16:52.819
是的，这是非常温暖的乡亲哦，是的

00:16:50.930 --> 00:16:54.500
 Raspberry有什么有趣的地方

00:16:52.819 --> 00:16:57.399
 four四是发生散热

00:16:54.500 --> 00:17:00.920
在整个主板上，所以PCB 

00:16:57.399 --> 00:17:03.050
散发热量，以便散发热量

00:17:00.920 --> 00:17:04.520
在整个主板上，我们不是

00:17:03.050 --> 00:17:07.010
像树莓派一样拥有它

00:17:04.520 --> 00:17:09.650
三个非常关注的地方

00:17:07.010 --> 00:17:11.870
 CPU正确，因此该板可用于

00:17:09.650 --> 00:17:13.970
以某种方式试图

00:17:11.870 --> 00:17:15.559
从CPU散热并进入

00:17:13.970 --> 00:17:19.549
主板，我能感觉到很多

00:17:15.559 --> 00:17:21.470
所以在这些外设中

00:17:19.549 --> 00:17:23.870
我没有热敏扫描仪

00:17:21.470 --> 00:17:25.640
为了告诉你我可以告诉你

00:17:23.870 --> 00:17:27.829
就是这种情况，我会告诉你

00:17:25.640 --> 00:17:30.440
以及我们正在努力获得

00:17:27.829 --> 00:17:33.260
这样的设备现在是LED我们

00:17:30.440 --> 00:17:35.720
知道Raspberry Pi的铝制外壳

00:17:33.260 --> 00:17:37.820
 4正如我提到的，我们已经研究了

00:17:35.720 --> 00:17:39.830
 LED，我们知道过去我曾经去过的案例

00:17:37.820 --> 00:17:44.210
他们非常非常满意

00:17:39.830 --> 00:17:46.040
这是一个非常好的铝制外壳

00:17:44.210 --> 00:17:49.790
看起来并不那么有趣

00:17:46.040 --> 00:17:51.650
嘿，让我们更进一步

00:17:49.790 --> 00:17:54.230
盒子里还有一点

00:17:51.650 --> 00:17:57.620
我们去那里，所以这就是这些

00:17:54.230 --> 00:18:00.400
像它底部的防滑垫

00:17:57.620 --> 00:18:03.320
和螺丝刀，让我们打开它

00:18:00.400 --> 00:18:05.510
你会发现眼皮我们没有

00:18:03.320 --> 00:18:09.500
对于Raspberry Pi， 

00:18:05.510 --> 00:18:11.480
这里需要注意的几件事是

00:18:09.500 --> 00:18:13.190
它是可壁挂的吗

00:18:11.480 --> 00:18:15.670
这些壁挂支架是的，所以你可以

00:18:13.190 --> 00:18:18.380
其实把这个东西挂在墙上

00:18:15.670 --> 00:18:20.870
还有一个触摸传感器

00:18:18.380 --> 00:18:22.910
允许您控制风扇，但

00:18:20.870 --> 00:18:26.870
风扇也受热控制

00:18:22.910 --> 00:18:30.830
所以当Raspberry Pi 4变热时

00:18:26.870 --> 00:18:33.770
会增加那些人的速度

00:18:30.830 --> 00:18:36.830
对，这两个粉丝很聪明

00:18:33.770 --> 00:18:40.190
控制风扇，让我们进入这里

00:18:36.830 --> 00:18:42.110
看看它看起来像什么

00:18:40.190 --> 00:18:45.800
螺丝实际上在这里

00:18:42.110 --> 00:18:46.880
盒子，他们在那里，我们有它

00:18:45.800 --> 00:18:49.190
所以你可以看到这不只是

00:18:46.880 --> 00:18:52.429
这些不只是动力强劲的风扇

00:18:49.190 --> 00:18:55.400
通过GPIO，这些风扇进入

00:18:52.429 --> 00:18:57.309
控制器电路，这将

00:18:55.400 --> 00:19:00.280
连接到Raspberry Pi键盘

00:18:57.309 --> 00:19:02.780
 GPIO，但更多

00:19:00.280 --> 00:19:05.660
复杂而不是直接像

00:19:02.780 --> 00:19:07.670
力量从那消失，我们走了

00:19:05.660 --> 00:19:11.630
 Raspberry Pi 4将会进去

00:19:07.670 --> 00:19:13.850
尚未卸下SD卡， 

00:19:11.630 --> 00:19:18.559
看起来会很好

00:19:13.850 --> 00:19:21.410
贴身适合看那是的

00:19:18.559 --> 00:19:23.540
我喜欢这些的铝质

00:19:21.410 --> 00:19:26.210
以及因为我们知道

00:19:23.540 --> 00:19:28.520
铝做什么加热带走它

00:19:26.210 --> 00:19:31.130
它会散布并散布

00:19:28.520 --> 00:19:33.470
出来没有那么容易

00:19:31.130 --> 00:19:35.330
安装非常容易，甚至不需要

00:19:33.470 --> 00:19:38.210
需要那里的指示

00:19:35.330 --> 00:19:44.240
在这里，如果我需要他们，我有他们，我会

00:19:38.210 --> 00:19:46.490
在演出后向杰夫展示那些

00:19:44.240 --> 00:19:48.050
你没事吧，有一个

00:19:46.490 --> 00:19:50.330
我需要的说明中的东西

00:19:48.050 --> 00:19:51.140
知道我该如何连接该电路

00:19:50.330 --> 00:19:53.929
板

00:19:51.140 --> 00:19:57.260
 Jeff或Sasha也许您可以访问

00:19:53.929 --> 00:19:59.390
我可以访问的信息

00:19:57.260 --> 00:20:01.580
感觉你先关闭它

00:19:59.390 --> 00:20:04.250
将所有连线都连接起来就像哦，那是

00:20:01.580 --> 00:20:06.380
这样就可以了，我可以看到

00:20:04.250 --> 00:20:10.160
有一点塑料薄膜

00:20:06.380 --> 00:20:12.260
在这个上，所以我要删除它，如果你

00:20:10.160 --> 00:20:14.390
有了新的电子设备，您

00:20:12.260 --> 00:20:18.049
想知道为什么它看起来很划伤

00:20:14.390 --> 00:20:20.720
可能是塑料薄膜，所以我们做了

00:20:18.049 --> 00:20:22.700
好吧，你把样子

00:20:20.720 --> 00:20:23.540
完全组装而不会堵塞

00:20:22.700 --> 00:20:25.940
在里面你去

00:20:23.540 --> 00:20:29.210
做得很好，这里是GPIO，因为

00:20:25.940 --> 00:20:31.850
记住相机输出的GPIO 

00:20:29.210 --> 00:20:33.700
 SD卡一切正常

00:20:31.850 --> 00:20:37.220
在这里，但我可以看到相机

00:20:33.700 --> 00:20:39.110
正确的连接器以及什么颜色

00:20:37.220 --> 00:20:42.260
我现在该如何连接这个红色

00:20:39.110 --> 00:20:44.740
用红色表示固定四个和四个

00:20:42.260 --> 00:20:50.020
所以这是我在Raspberry Pi 4上的GPIO 

00:20:44.740 --> 00:20:52.730
所以我们有引脚1 2 3 4所以引脚4和

00:20:50.020 --> 00:20:57.169
蓝色或黑色，所以就这些

00:20:52.730 --> 00:21:00.710
可以将蓝色或黑色连接到

00:20:57.169 --> 00:21:03.380
正确的第6针，这样

00:21:00.710 --> 00:21:06.350
应该是所有的一切，所以我

00:21:03.380 --> 00:21:11.929
喜欢这个看看这有多光滑

00:21:06.350 --> 00:21:15.410
我觉得是这样，所以我喜欢艾丽德

00:21:11.929 --> 00:21:19.130
我们知道已经创建了一个外形

00:21:15.410 --> 00:21:22.610
实际上是用树莓派包装的

00:21:19.130 --> 00:21:24.590
是的，这是非常低调的意思

00:21:22.610 --> 00:21:27.410
我的意思是USB端口仍然存在

00:21:24.590 --> 00:21:29.929
伸出钥匙上方，是吗

00:21:27.410 --> 00:21:31.940
大家看到那个样子，所以她是一个

00:21:29.929 --> 00:21:33.620
电缆有点小

00:21:31.940 --> 00:21:40.429
另外三根电缆和不同颜色

00:21:33.620 --> 00:21:42.799
是的，你可以把它推到我身上吗

00:21:40.429 --> 00:21:44.510
不知道也许你可以，如果我

00:21:42.799 --> 00:21:46.190
也许当我多注意的时候

00:21:44.510 --> 00:21:47.540
放在一起思考

00:21:46.190 --> 00:21:48.470
当你把它放在一起的时候

00:21:47.540 --> 00:21:50.150
可以使它多一点

00:21:48.470 --> 00:21:52.730
精简，但是的，你是对的

00:21:50.150 --> 00:21:55.520
电缆确实伸出时

00:21:52.730 --> 00:21:58.119
插入GPIO，就像

00:21:55.520 --> 00:22:00.729
一个像男人

00:21:58.119 --> 00:22:03.129
这可能是设计缺陷

00:22:00.729 --> 00:22:04.479
可以说不是真正的缺陷，但他们

00:22:03.129 --> 00:22:07.959
本来可以做的是

00:22:04.479 --> 00:22:10.149
基线多一点，是的

00:22:07.959 --> 00:22:11.649
像公寓一样，但是如果那是唯一的问题

00:22:10.149 --> 00:22:13.239
像加油耶

00:22:11.649 --> 00:22:16.089
如果电缆相同则非常有帮助

00:22:13.239 --> 00:22:19.959
颜色真的是桌子吗

00:22:16.089 --> 00:22:21.309
像您可以控制的触摸板那样的帮助

00:22:19.959 --> 00:22:24.249
栅栏，所以这只是一个问题

00:22:21.309 --> 00:22:27.159
这几乎就像一个滑块，不，不是

00:22:24.249 --> 00:22:30.339
就像触摸灯一样

00:22:27.159 --> 00:22:33.029
看到哦，触摸那里吧，好吧，所以

00:22:30.339 --> 00:22:35.919
我要重新插入以太网

00:22:33.029 --> 00:22:38.859
在那里，所以连接了以太网

00:22:35.919 --> 00:22:41.949
看起来很性感的达森对不起大家

00:22:38.859 --> 00:22:45.369
但这就是睡眠哦，那是一个等待

00:22:41.949 --> 00:22:47.229
看起来不错是不是我不是说我是

00:22:45.369 --> 00:22:49.869
极客穿越，但看起来

00:22:47.229 --> 00:22:52.689
真的很好，是的， 

00:22:49.869 --> 00:22:53.949
有两个HDMI micro输出

00:22:52.689 --> 00:22:56.559
我说的是

00:22:53.949 --> 00:23:00.099
再加上您还有AV输出，但是

00:22:56.559 --> 00:23:02.769
 HDMI micro有点痛苦的人

00:23:00.099 --> 00:23:04.299
谁曾经使用过HDMI micro 

00:23:02.769 --> 00:23:06.039
使用适配器，您可能会

00:23:04.299 --> 00:23:08.499
很难找到一个适配器

00:23:06.039 --> 00:23:10.869
与此并排坐着

00:23:08.499 --> 00:23:14.289
我建议您找到一条电缆

00:23:10.869 --> 00:23:16.179
一端有HDMI micro且完整的

00:23:14.289 --> 00:23:18.879
我要在另一端连接HDMI 

00:23:16.179 --> 00:23:22.059
立刻插入USB C 

00:23:18.879 --> 00:23:23.709
给这些风扇通电，看起来

00:23:22.059 --> 00:23:26.559
如果我碰到你，现在就走吧

00:23:23.709 --> 00:23:29.529
看看杰夫是怎么回事，那是

00:23:26.559 --> 00:23:32.679
现在，只需轻按一下即可

00:23:29.529 --> 00:23:35.829
就像那里有很多震动

00:23:32.679 --> 00:23:37.959
没有任何振动

00:23:35.829 --> 00:23:41.229
没有声音我要坚持下去

00:23:37.959 --> 00:23:45.009
我的麦克风你们可以看到

00:23:41.229 --> 00:23:51.099
头顶好，所以有

00:23:45.009 --> 00:23:52.329
当你触摸它时，我会

00:23:51.099 --> 00:23:54.279
向下滑动并转到场景

00:23:52.329 --> 00:23:55.269
如果您想将我们带到

00:23:54.279 --> 00:23:57.189
那里开阔了

00:23:55.269 --> 00:24:00.789
现在，当您触摸按钮

00:23:57.189 --> 00:24:02.499
激活粉丝，是的，他们喜欢

00:24:00.789 --> 00:24:03.759
他们将永久留在或将

00:24:02.499 --> 00:24:05.679
电脑希望他们会

00:24:03.759 --> 00:24:08.439
是的，它已经通过了电路

00:24:05.679 --> 00:24:10.479
如果变热就去旋转它

00:24:08.439 --> 00:24:10.850
如果天气转凉，将其旋转下来，然后

00:24:10.479 --> 00:24:12.530
这将

00:24:10.850 --> 00:24:14.330
自动调整并担心

00:24:12.530 --> 00:24:16.850
就像哦，我打开了，我忘了打开

00:24:14.330 --> 00:24:18.680
它不是那样的，哦，不，不， 

00:24:16.850 --> 00:24:20.630
默认情况下，Raspberry Pi会尽快

00:24:18.680 --> 00:24:25.370
已通电，因此如果电源关闭

00:24:20.630 --> 00:24:28.460
而且您没有UPS或PI 

00:24:25.370 --> 00:24:30.980
航海家从低空连接到您的

00:24:28.460 --> 00:24:33.470
 Raspberry Pi然后它将自动

00:24:30.980 --> 00:24:36.110
重新打开风扇，然后说些什么

00:24:33.470 --> 00:24:39.080
我们应该运行相同的测试，是的， 

00:24:36.110 --> 00:24:41.630
看看热量如何影响

00:24:39.080 --> 00:24:46.780
 Raspberry Pi将其放入其中

00:24:41.630 --> 00:24:48.830
 LED上的手臂没有风扇

00:24:46.780 --> 00:24:51.920
假设你认为这会起作用

00:24:48.830 --> 00:24:54.710
这会变凉哦我

00:24:51.920 --> 00:24:57.010
真的很想知道

00:24:54.710 --> 00:25:14.450
我们周围的盒子棒会马上回来

00:24:57.010 --> 00:25:14.450
 [音乐] 

00:25:16.390 --> 00:25:21.560
休息之前，我们看了看

00:25:19.040 --> 00:25:23.720
 Raspberry Pi 4我们通过EM运行

00:25:21.560 --> 00:25:26.120
压力测试，我们把它带到了

00:25:23.720 --> 00:25:27.950
我们的膝盖真的很热

00:25:26.120 --> 00:25:31.580
指向即使您触摸它也知道的地方

00:25:27.950 --> 00:25:34.670
甚至可以感觉到USB端口

00:25:31.580 --> 00:25:38.990
以太网插孔真的很热

00:25:34.670 --> 00:25:41.380
是的，现在我们放了一个我们知道情况的LED 

00:25:38.990 --> 00:25:45.440
这是一个有两个铝盒

00:25:41.380 --> 00:25:48.110
 Raspberry Pi 4上的智能风扇

00:25:45.440 --> 00:25:50.420
有了这个，你知道问题是

00:25:48.110 --> 00:25:52.460
你知道我们在扭曲你的结果吗

00:25:50.420 --> 00:25:54.530
知道我们放了三分钟

00:25:52.460 --> 00:25:56.960
当我们安装它的时候

00:25:54.530 --> 00:25:59.750
有所作为，我不认为

00:25:56.960 --> 00:26:02.840
我真的是说像微

00:25:59.750 --> 00:26:04.760
金额，但事实是，该系统

00:26:02.840 --> 00:26:07.400
很快会再次加热

00:26:04.760 --> 00:26:09.050
当我们通过EM压力测试达到目标时

00:26:07.400 --> 00:26:11.480
看看是否

00:26:09.050 --> 00:26:13.100
温度达到八十五

00:26:11.480 --> 00:26:15.500
点六九八度

00:26:13.100 --> 00:26:17.210
在我真的很好奇之前

00:26:15.500 --> 00:26:20.480
我们测试的起始温度

00:26:17.210 --> 00:26:22.790
没有散​​热器，没有什么是

00:26:20.480 --> 00:26:24.290
六十九点六至七至六十

00:26:22.790 --> 00:26:26.330
九点六二

00:26:24.290 --> 00:26:31.790
回到nems linux上我实际上可以

00:26:26.330 --> 00:26:34.700
输入NEMS信息温度四十五

00:26:31.790 --> 00:26:36.500
点二七好四十五点

00:26:34.700 --> 00:26:39.580
现在是两个七

00:26:36.500 --> 00:26:41.540
是它正在运行，是的，所以

00:26:39.580 --> 00:26:43.400
你不需要写那个吗

00:26:41.540 --> 00:26:44.960
下来，因为那个人不属于

00:26:43.400 --> 00:26:46.940
我们的名字强调房子公平，所以

00:26:44.960 --> 00:26:48.770
遇险测试尚未开始，但我们

00:26:46.940 --> 00:26:50.150
知道我们凉了二十度

00:26:48.770 --> 00:26:53.240
很大的事情

00:26:50.150 --> 00:26:54.740
是的，忘了FIR的固件更新

00:26:53.240 --> 00:26:57.940
那应该像三滴

00:26:54.740 --> 00:27:03.770
是的，那又是什么

00:26:57.940 --> 00:27:05.750
我们只说MEMS信息频率和

00:27:03.770 --> 00:27:06.830
看到我们在六百赫兹右边

00:27:05.750 --> 00:27:08.180
现在是您六点开始的地方

00:27:06.830 --> 00:27:09.440
百兆请原谅我

00:27:08.180 --> 00:27:11.450
你开始但是飞新

00:27:09.440 --> 00:27:13.160
另一个是600赫兹，但是

00:27:11.450 --> 00:27:15.530
我们开始测试的时间已经

00:27:13.160 --> 00:27:17.960
以一比五运行，是的，它使

00:27:15.530 --> 00:27:19.580
这些数字的差异

00:27:17.960 --> 00:27:21.650
我们进行压力测试

00:27:19.580 --> 00:27:25.730
立即加速，我们将看到

00:27:21.650 --> 00:27:29.570
那又一次，我可以看到，如果我们看

00:27:25.730 --> 00:27:31.850
在我们在下一个窗口中的另一个位置上

00:27:29.570 --> 00:27:32.680
我们看到当前的平均负载为零

00:27:31.850 --> 00:27:35.720
一三点

00:27:32.680 --> 00:27:38.420
是的，我们可以开始测试吗？ 

00:27:35.720 --> 00:27:41.300
在带有LED的Raspberry Pi四上

00:27:38.420 --> 00:27:45.140
没有情况下我会跑书呆子

00:27:41.300 --> 00:27:47.660
压力，这里我们进行压力测试

00:27:45.140 --> 00:27:49.940
已经开始让我们跳回这里， 

00:27:47.660 --> 00:27:52.490
我们看到我们坐在100％CPU上

00:27:49.940 --> 00:27:54.470
现在使用，只是因为我们想做

00:27:52.490 --> 00:27:58.880
很快，Jeff NEMS 

00:27:54.470 --> 00:28:03.530
信息温度五十五点九

00:27:58.880 --> 00:28:06.560
九一个已经可以了，平均还可以

00:28:03.530 --> 00:28:08.570
思科56岁，我可以

00:28:06.560 --> 00:28:10.820
实际输入手表，我可以看到

00:28:08.570 --> 00:28:15.710
温度变化了五十七点

00:28:10.820 --> 00:28:17.510
四五看是否随着

00:28:15.710 --> 00:28:19.820
压力测试进行到58点

00:28:17.510 --> 00:28:25.220
这是一个你知道它正在波动

00:28:19.820 --> 00:28:27.320
下来一点，看到59点

00:28:25.220 --> 00:28:29.570
四，所以我们现在要达到更高的数字

00:28:27.320 --> 00:28:31.670
我也可以实时检查频率

00:28:29.570 --> 00:28:32.920
时间，记得我的压力测试是

00:28:31.670 --> 00:28:35.950
发生在另一个

00:28:32.920 --> 00:28:38.650
好吧，所以我在使用两种不同的方法

00:28:35.950 --> 00:28:41.530
窗户在这里，所以我可以输入频率和

00:28:38.650 --> 00:28:43.930
看我坐在那里，所以我在1.5 

00:28:41.530 --> 00:28:45.310
千兆赫兹，所以马上就出现了

00:28:43.930 --> 00:28:48.040
它说好吧，那里有很多东西

00:28:45.310 --> 00:28:50.020
让我们启动CPU，因为

00:28:48.040 --> 00:28:52.030
树莓派的PI很聪明，说的很好

00:28:50.020 --> 00:28:54.250
我们不需要所有的处理器功能

00:28:52.030 --> 00:28:55.690
所以我们要降低到600 

00:28:54.250 --> 00:28:58.660
兆赫，但只要您开始

00:28:55.690 --> 00:29:00.880
压力测试当然是我们的基础

00:28:58.660 --> 00:29:02.560
速度将是1.5 GHz 

00:29:00.880 --> 00:29:04.360
因为那就是速度

00:29:02.560 --> 00:29:07.180
到现在，我们遇到的问题之一

00:29:04.360 --> 00:29:08.560
当你是瑞安的时候从Ameritrade进来

00:29:07.180 --> 00:29:12.310
运行Mayer机器人时

00:29:08.560 --> 00:29:15.490
第一项测试是NIMS正在检查

00:29:12.310 --> 00:29:19.960
所有SOC课程的速度不是

00:29:15.490 --> 00:29:22.330
不是，只是不是，不是这样。 

00:29:19.960 --> 00:29:24.310
他问有四个核心

00:29:22.330 --> 00:29:26.980
我们在检查热量和

00:29:24.310 --> 00:29:31.080
这四个中每一个的速度

00:29:26.980 --> 00:29:33.880
准确回答这个问题的核心

00:29:31.080 --> 00:29:37.870
唯一的方法就是看

00:29:33.880 --> 00:29:42.340
在源代码上，虽然可以，所以nanoetcö 

00:29:37.870 --> 00:29:48.100
用户斜线本地斜线nem斜线NEMS 

00:29:42.340 --> 00:29:52.780
脚本斜杠信息点h用户本地共享

00:29:48.100 --> 00:29:57.340
我错过了分享频率， 

00:29:52.780 --> 00:29:58.380
这是从CPU零开始的，所以可以

00:29:57.340 --> 00:30:01.690
那不一样

00:29:58.380 --> 00:30:03.820
让我们问一下速度，那就是

00:30:01.690 --> 00:30:05.320
频率还可以，那就是

00:30:03.820 --> 00:30:07.260
正是我要告诉你的

00:30:05.320 --> 00:30:10.000
该测试仍在这里进行， 

00:30:07.260 --> 00:30:13.690
让我们回到这个，所以我们只是

00:30:10.000 --> 00:30:18.370
看CPU 0是第一个核心

00:30:13.690 --> 00:30:21.460
哦，请原谅我

00:30:18.370 --> 00:30:26.920
坐在60左右，大约600兆赫

00:30:21.460 --> 00:30:32.910
现在有趣的是让我们进入CPU 1 

00:30:26.920 --> 00:30:36.520
 1.5好会伤害CPU 260600兆赫

00:30:32.910 --> 00:30:39.880
 CPU 3，因此您可以看到平均值

00:30:36.520 --> 00:30:40.830
使这使我们与众不同

00:30:39.880 --> 00:30:46.740
影响

00:30:40.830 --> 00:30:49.010
 1 2 3以便0 1 2 0 1 2 3是您的4 

00:30:46.740 --> 00:30:52.530
处理器的核心，所以我们有

00:30:49.010 --> 00:30:55.290
他们三人600岁

00:30:52.530 --> 00:30:57.180
那一刻对，因为我们在

00:30:55.290 --> 00:30:59.550
测试结束，所以测试是

00:30:57.180 --> 00:31:01.530
逐渐消失，所以三个核心

00:30:59.550 --> 00:31:03.600
时脉回落至600兆赫

00:31:01.530 --> 00:31:05.880
核心之一仍在运行

00:31:03.600 --> 00:31:08.220
 1.5 GHz的频率，但我想您会

00:31:05.880 --> 00:31:12.120
发现是在那些情况下

00:31:08.220 --> 00:31:16.500
被高估，所以我们最低

00:31:12.120 --> 00:31:20.370
温度是四十三点三

00:31:16.500 --> 00:31:23.130
到摄氏9度

00:31:20.370 --> 00:31:25.410
与没有树莓派的树莓派相比

00:31:23.130 --> 00:31:27.630
阿拉德，我们没有杰夫，所以我们

00:31:25.410 --> 00:31:30.150
没有电梯，我们在

00:31:27.630 --> 00:31:33.570
十六九点六到七

00:31:30.150 --> 00:31:35.790
现在开始基地是的一个因素

00:31:33.570 --> 00:31:36.570
它正在运行的可变性

00:31:35.790 --> 00:31:39.240
一小时

00:31:36.570 --> 00:31:41.100
没有这种情况，但公平地说， 

00:31:39.240 --> 00:31:43.500
我们只关了五分钟

00:31:41.100 --> 00:31:44.880
完全正确，所以我的意思是

00:31:43.500 --> 00:31:47.070
可能会有一些变化，但有点

00:31:44.880 --> 00:31:48.810
从粉丝开始

00:31:47.070 --> 00:31:50.790
运行，铝罐已经

00:31:48.810 --> 00:31:53.520
一定要冷却下来，这样就开始了

00:31:50.790 --> 00:31:57.500
低一点的基础还算公平，但看起来

00:31:53.520 --> 00:32:00.720
在那个男人那里比它少26度

00:31:57.500 --> 00:32:03.540
没有覆盆子pi的基础

00:32:00.720 --> 00:32:06.330
那个情况好吧，看着最高

00:32:03.540 --> 00:32:09.720
温度，我们坐得很好，打中

00:32:06.330 --> 00:32:13.470
六十一点三四八度

00:32:09.720 --> 00:32:15.840
摄氏六十一是最高

00:32:13.470 --> 00:32:20.010
覆盆子补丁的温度是

00:32:15.840 --> 00:32:23.460
小于没有的开始温度

00:32:20.010 --> 00:32:29.400
在那之前值得的案例

00:32:23.460 --> 00:32:31.050
我们很惊讶，这很酷

00:32:29.400 --> 00:32:35.160
我们到这里还最慢

00:32:31.050 --> 00:32:38.190
速度，如果您将是1.5 GHz 

00:32:35.160 --> 00:32:43.140
最大速度也为1.5 GHz 

00:32:38.190 --> 00:32:44.730
从来没有低于1.5 GHz 

00:32:43.140 --> 00:32:46.620
你们想碰这个好吧，因为

00:32:44.730 --> 00:32:48.930
我们只是通过一个主要的

00:32:46.620 --> 00:32:50.640
压力测试就像我们对pi所做的一样

00:32:48.930 --> 00:32:52.000
才应该显着

00:32:50.640 --> 00:32:53.410
是的，是的

00:32:52.000 --> 00:32:55.570
您是否想要明显不同

00:32:53.410 --> 00:32:56.710
觉得这个家伙是我的感觉

00:32:55.570 --> 00:33:01.060
因为我们之前就感受到了

00:32:56.710 --> 00:33:04.720
他们来了，我离开了，是的，但是

00:33:01.060 --> 00:33:06.130
你看不到那个，你知道

00:33:04.720 --> 00:33:07.060
有点像拉钱包

00:33:06.130 --> 00:33:08.860
从你的后兜里掏出

00:33:07.060 --> 00:33:13.320
是的，那里什么都没有

00:33:08.860 --> 00:33:15.490
什么都没有热，那就像凉

00:33:13.320 --> 00:33:19.510
有趣的是你如何喜欢

00:33:15.490 --> 00:33:22.000
所以Arduino的外壳是铝的

00:33:19.510 --> 00:33:23.830
是否有双风扇

00:33:22.000 --> 00:33:25.630
随着时间的流逝会旋转的智能

00:33:23.830 --> 00:33:27.700
也许这就是为什么我们看到

00:33:25.630 --> 00:33:30.190
从正常状态下降到77，然后全部

00:33:27.700 --> 00:33:35.320
突然的光束48怎么会发生

00:33:30.190 --> 00:33:36.790
粉丝说，让我们做吧，让我们

00:33:35.320 --> 00:33:39.880
如果有办法，使这种事情发生

00:33:36.790 --> 00:33:42.910
记录风扇旋转情况，让我们完成所有工作

00:33:39.880 --> 00:33:44.620
这些事情，让我们做所有这些

00:33:42.910 --> 00:33:49.330
东西，因为那会很有趣

00:33:44.620 --> 00:33:52.540
就像刚去但是画图但是

00:33:49.330 --> 00:33:54.310
你知道汽车引擎的样子

00:33:52.540 --> 00:33:55.450
你看起来你看不到运动

00:33:54.310 --> 00:33:58.150
速度如此之快，但与众不同

00:33:55.450 --> 00:34:00.100
在您知道的2,000 rpm和3,000 rpm之间

00:33:58.150 --> 00:34:00.580
 rpms仍然有很大的不同

00:34:00.100 --> 00:34:03.610
看起来一样

00:34:00.580 --> 00:34:05.980
是的，没有声音，没有感觉不到

00:34:03.610 --> 00:34:07.420
振动或类似的东西

00:34:05.980 --> 00:34:09.580
当然，电路板本身是固态的

00:34:07.420 --> 00:34:12.580
所以LED灯没有价值吗

00:34:09.580 --> 00:34:13.929
钱是不错，我什至没有

00:34:12.580 --> 00:34:15.850
不想说我想让你说

00:34:13.929 --> 00:34:21.370
它想了一秒钟是

00:34:15.850 --> 00:34:23.980
值得它是是接受接受哦

00:34:21.370 --> 00:34:25.690
等待这些人没有

00:34:23.980 --> 00:34:27.070
最后的问题和功能

00:34:25.690 --> 00:34:29.470
我很热，但并没有改变

00:34:27.070 --> 00:34:30.790
功能mmm有趣的一点，但是

00:34:29.470 --> 00:34:31.360
保持凉爽，否则你会延长

00:34:30.790 --> 00:34:35.679
生活

00:34:31.360 --> 00:34:37.000
确定那是另一回事

00:34:35.679 --> 00:34:39.280
我们没有测试我们谈论过

00:34:37.000 --> 00:34:41.500
第一次测试也许是在这里

00:34:39.280 --> 00:34:43.060
这是你一个持续的时间框架

00:34:41.500 --> 00:34:45.190
知道五分钟左右

00:34:43.060 --> 00:34:50.080
我们要运行这个东西NEMS压力

00:34:45.190 --> 00:34:52.240
在任何mm服务器上都可用，只需编辑

00:34:50.080 --> 00:34:57.140
这使它的处理过程很多

00:34:52.240 --> 00:35:00.470
你会强调编辑

00:34:57.140 --> 00:35:06.080
第一件事你想跑多久

00:35:00.470 --> 00:35:07.940
杰夫永远不知道我喜欢15岁

00:35:06.080 --> 00:35:10.820
好的，这就是您需要更改的所有内容

00:35:07.940 --> 00:35:12.560
这就是你需要改变的一切

00:35:10.820 --> 00:35:15.970
认真的大卫，我要写下来

00:35:12.560 --> 00:35:25.850
我将使用该点斜杠名称

00:35:15.970 --> 00:35:27.980
强调运行测试以获取Linux 

00:35:25.850 --> 00:35:30.800
来自Nimes Linux通讯是的，如果您想

00:35:27.980 --> 00:35:32.840
在我自己的板上进行测试

00:35:30.800 --> 00:35:34.850
我跟杰夫在一起，我没有

00:35:32.840 --> 00:35:36.680
看到董事会的任何不利之处是我的意思

00:35:34.850 --> 00:35:38.150
确实花了你一些额外的钱，但你

00:35:36.680 --> 00:35:40.040
你会延长寿命

00:35:38.150 --> 00:35:41.330
 Raspberry Pi的功能以及当您

00:35:40.040 --> 00:35:42.620
运行类似MS Linux的程序

00:35:41.330 --> 00:35:44.510
服务器，如果您想将其用作

00:35:42.620 --> 00:35:45.500
机顶盒，如果您想使用它

00:35:44.510 --> 00:35:48.860
 Plex Pi 

00:35:45.500 --> 00:35:51.890
例如，即使是复古的PI游戏

00:35:48.860 --> 00:35:53.150
系统是的，它可以运行的冷却器

00:35:51.890 --> 00:35:55.100
更好地执行，因为

00:35:53.150 --> 00:35:55.670
是的，还有其他外围设备

00:35:55.100 --> 00:35:58.010
变热

00:35:55.670 --> 00:35:59.690
考虑一下USB，就像它有USB 3 

00:35:58.010 --> 00:36:01.010
而且你会有硬盘

00:35:59.690 --> 00:36:03.230
连接到它，因为它是10倍

00:36:01.010 --> 00:36:05.360
比USB 2更快，所以您可以

00:36:03.230 --> 00:36:07.160
很好地连接驱动器，您

00:36:05.360 --> 00:36:08.900
想要最好的性能，但是

00:36:07.160 --> 00:36:10.880
不只是要使用的CPU 

00:36:08.900 --> 00:36:12.620
受热影响，但也像杰夫

00:36:10.880 --> 00:36:16.640
提到董事会的寿命

00:36:12.620 --> 00:36:19.370
本身会活多久

00:36:16.640 --> 00:36:23.260
看起来不错，如果你要成为一个

00:36:19.370 --> 00:36:25.280
负责任的PI所有者积极降温

00:36:23.260 --> 00:36:28.370
那里是树莓

00:36:25.280 --> 00:36:50.130
具有LED的Pi 4表示正常

00:36:28.370 --> 00:36:50.130
 [音乐] 

