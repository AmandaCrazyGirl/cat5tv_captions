do we kind of think of PHP as always
being coupled with lamp stacks with
Apache it's a it's a web language right
like isn't that what PHP is it's
strictly for making websites exactly
oddly enough about an hour before I came
here I was showing Luke websites that I
had made in the past and showing him the
difference between ones that I had done
with PHP and ones that were not with PHP
like HTML straight HTML straight HTML
and he was nice wow there's a really big
difference I'm like yeah so kid can I do
that a pleco buddy there's so many cool
options you know music could I build a
website with scratch not quite not quite
however what Luke is going to achieve by
using scratch is learning syntax that's
right and syntax is really really
important and what's neat about PHP
versus HTML so hTML is a static coding
language for the web or I shouldn't call
it a coding language because I know I'm
gonna get some hate it's a markup
language it is text right and it allows
you to include images and everything
that's the output that you see in your
browser PHP on the other hand is what's
called a server-side programming
language so when you create something in
PHP if you're clever with it you can do
all kinds of stuff because it's a
program running that then outputs HTML
or XML or JSON or whatever you want it
to output but typically it's going to be
HTML so you've created a program that
runs under PHP the environment and the
language and outputs the mark-up of say
HTML so it creates the output to your
browser but it is in so many essences a
programming language and did you know
that you can use it like a programming
language like a bash shell script
imagine being able Jeff to to program
something that can connect to a MySQL
database using the same techniques that
you're used to for building your
websites that can
parce arrays and objects and output text
and load things and explode variables
into arrays and be able to do all kinds
of things from the command line right so
now you've got something that you can
create cron tasks with that you can
connect to a MySQL database without
having to figure out how to do it
because you already know PHP from all
your web work that's right so why not
use that language within the command
line as well on linux you can crontab it
you can do anything else I have never
thought about doing that that is an
interesting approach let's let's take a
look at my command line and we're just
we're not gonna get into advanced PHP
here today folks that's not what this is
about what we're looking at is thinking
of PHP is not just Apache back-end this
is not all it's capable of we're gonna
look at it instead as a programming
language that you can use within bash
within your Linux environment so I'm
just simply going to I'm gonna just jump
right over here and I'm just gonna I'm
in my home folder home Robbie I'm gonna
make dur my app whatever it happens to
be and I'm going to create a file now
that is going to be called what do we
want to call this Jeff my app dot PHP
right let's just say so this is just a a
text file if you will anyone who's
familiar with PHP a little bit knows
that that's kind of how you open and
close a PHP file and if I want to enter
some PHP syntax I can say hello world
right hello world right I mean it all
starts there so I've written out that
file and what I need to have is a simple
tool called are you ready for this PHP
right well technically PHP CLI but now
I've already got it installed but you
can type apt install and I need to be
super user so sudo apt install PHP
that's all you need to run and it will
install everything that you need and now
if I run PHP my app dot PHP I see hello
world
nifty right so now that's pretty cool I
mean that's cool I want to add watch
this PHP AOL which is PHP end of line
which means that now when I run it in my
terminal it's gonna add carriage return
afterwards
oh nice so that it's not wrapping into
my my username like that so that's kind
of cool
so of course PHP being a programming
language I can do all kinds of stuff
like I was saying but this is now lets
me run it within the terminal and it's
not really that exciting yet because I'm
still relying on the fact that I need to
go PHP home Robbie my app my app dot PHP
right and it will run okay so I'm gonna
show you the next step this is where PHP
becomes what we will call a terminal
based programming language and that is
to specify the environment within the
file you've seen bash files so if I'm
creating a shell script this is I'm
gonna call this my script dot SH and
what do I start it with crunchbang bin
bash that's the environment that I'm
creating
so that bash or whatever environment I'm
running it within knows that this code
is meant to be run within the bash
environment okay so similarily can I do
that with bin PHP well sure I can
because guess what look and bin look at
all of the options that are in there LS
bin is there a PHP no there's not
so what do we do if we can't do slash
bin slash PHP well watch this Nano my
app dot PHP let's go crunch bang user
bin env for environment
PHP right that file out so now there is
a file called user bin env there it is
right let's do an LS lah
hope I forgot a space there there it is
user bin env so now I've added that as
my environment to the top of this PHP
file and added PHP so I'm saying run
this environment PHP right okay now I
still can't go dot slash my app dot PHP
it's gonna say permission denied well I
haven't created it as an executive well
yet so I'm gonna go chmod plus x my app
dot PHP so now hmm I no longer have to
go PHP my app dot PHP no I can go dot
slash my app dot PHP and it runs as an
application right okay now watch this
I'm gonna move that my app dot PHP to
hello I'm gonna actually name the script
hello okay
so now watch this home Robbie my app
hello that's the script run it hello
world hello world that's exactly what
I've specified for it to do within PHP
and it's running it within the
environment of PHP so now PHP has become
a command line environment for me to
code in I can connect to my MySQL oh
just like I would for my website I can
access XML feeds using simple XML I can
parse them I can output JSON I can
import JSON and convert it to an array I
can do any of the things that I can
normally do with PHP as a web
programming environment now as a command
line environment that's funny I've never
thought about using PHP in the command
line so this is like a whole new world
of options it's very interesting and as
soon as you start wanting
to create things like let's say you want
to create a web hook that allows you to
post by cron job to your discord server
right and we do this I have cron jobs
that check our database MySQL with PHP a
PHP script using the environment
variable that checks our database for
new videos and then post them to our
discord server and when that works
really well it posts those videos
directly to our discord server because
the cron job runs as a script in the
term of basically it's running headless
but on a server and it just runs like
any other bash script huh but in the PHP
language interesting yeah so I mean
think about all the things that you
could do with that there is really no
limit to using your imagination to
create scripts that you can use within
the terminal now what really opens you
have this be that it's that the PHP is
running in the background or can you
flip back and forth it so that it's
running and then you're doing other
things that you have to leave it solely
as the the primary function within your
you know say you run within a script
itself yeah if I follow exactly what
you're asking Jeff and you can correct
me if I'm wrong are you asking if I was
to swap back and forth between bash and
PHP is that kind of what you're going
for well no like you say you're doing
this on a Raspberry Pi yes you know
you're running in the command line if
you're running some you know PHP
functionalities you know would this be
the sole function for that device or can
it be something that's kind of running
as a job in the background I see so this
is just a single script Jeff okay so
just like every shell script just like
every script where it starts with script
crunchbang bin bash every script that
looks like that and now has some bash
things going on okay right that's a bash
script right so you can run that then
you can run your PHP it can run
as programs that you run manually it can
run as cron jobs that happen on a
schedule for those who aren't familiar
with the term cron job that's a Linux
term that refers to a scheduled task so
what you're used to in Windows is like
scheduled tasks a cron job is something
that is a scheduled execution of a
program
whether it's bash or PHP or whatever as
long as it's a script that you're
crontab can can see right so no you can
run as many things as you want Jeff this
can be just something that's running on
your web server so you you could combine
this with your lamp stack and have it
automatically put it could connect out
to the Twitter feed download your
current tweets save them to your MySQL
database and then your website can
access the database rather than having
to go out over the web using the API so
then you can reduce you could reduce
your API calls make it check make it
check and save once per hour instead of
once every time someone visits your
website right how great is that and it
because it happens as a cron job in the
background of your server it never
happens during the user session they're
only seeing it from your database just
one example of how this could be used
right all right so it's a local access
for them so that is how to use PHP as a
programming language essentially in your
Linux command line all you have to do is
just add the environment variable and
you're good to go and just make sure
that you have PHP installed as well
again you can do that using apt-get or
apt and just install PHP enjoy that let
us know what you come up with and all
the cool ways that you're able to
improve things happen in the backend of
your computer of your server so
nice
