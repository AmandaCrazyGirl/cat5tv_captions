WEBVTT
Kind: captions
Language: cs

00:00:02.179 --> 00:00:09.389
 za posledních pár týdnů jsem a já 

00:00:05.549 --> 00:00:12.750
 tým mluvil o tom, co 

00:00:09.389 --> 00:00:17.580
 budeme volat můj zadek váš zadek můj 

00:00:12.750 --> 00:00:18.990
 zadek, ale Kat pět dot TV / - je tam, kde jsem 

00:00:17.580 --> 00:00:20.760
 vloží všechny odkazy na produkty 

00:00:18.990 --> 00:00:23.460
 že se na to podíváme 

00:00:20.760 --> 00:00:26.220
 diskuse byla obklopena 

00:00:23.460 --> 00:00:29.550
 rozhodnutí v pořádku jdeme s USB 3.0 

00:00:26.220 --> 00:00:30.900
 abychom mohli také získat port eSATA 

00:00:29.550 --> 00:00:32.520
 což nám dá šest 

00:00:30.900 --> 00:00:38.250
 gigabitů za sekundu nebo jdeme rovně 

00:00:32.520 --> 00:00:41.399
 na USB 3.1 Rev - což teoreticky může 

00:00:38.250 --> 00:00:44.219
 nám může dát až 10 gigabitů za sekundu 

00:00:41.399 --> 00:00:45.570
 ale jedna námitka o tom je 

00:00:44.219 --> 00:00:47.850
 že zařízení, kterým budeme 

00:00:45.570 --> 00:00:50.700
 připojení na - což je zvláštní roid xu4 

00:00:47.850 --> 00:00:54.090
 jednodeskový počítač je schopen pouze 

00:00:50.700 --> 00:00:56.760
 USB 3.0 s vámi ASP, tak to bude 

00:00:54.090 --> 00:00:58.680
 pět gigabitů za sekundu, což je hodně 

00:00:56.760 --> 00:01:00.570
 čísla, která mají být vyhozena, ano, je to 

00:00:58.680 --> 00:01:02.969
 spousta čísel pro staré robbie 

00:01:00.570 --> 00:01:05.700
 pamatujte si v této plešivé hlavě to je, ale je to 

00:01:02.969 --> 00:01:08.189
 všechno mi dává smysl, bylo rozhodnutí 

00:01:05.700 --> 00:01:10.619
 přinutil se jít na budoucnost a jít 

00:01:08.189 --> 00:01:15.570
 s USB 3.1 Rev - takže budeme 

00:01:10.619 --> 00:01:18.390
 přístup do naší jednotky Nass v pět 

00:01:15.570 --> 00:01:21.360
 gigabitů za sekundu z internetu 

00:01:18.390 --> 00:01:24.420
 Odroid xu4, ale mějte na paměti naše 

00:01:21.360 --> 00:01:26.159
 připojení k našemu Nassu bude 

00:01:24.420 --> 00:01:27.900
 založené na gigabitovém Ethernetu 

00:01:26.159 --> 00:01:31.680
 protože port Ethernet na této desce 

00:01:27.900 --> 00:01:35.210
 je tisíc megabitů za sekundu nebo 

00:01:31.680 --> 00:01:37.409
 cokoli, i když se mi to líbí 

00:01:35.210 --> 00:01:39.780
 komunikovat s disky v pět 

00:01:37.409 --> 00:01:41.939
 Gigabits sekundu komunikace pak 

00:01:39.780 --> 00:01:45.229
 na xu4 bude jen jeden 

00:01:41.939 --> 00:01:47.820
 gigabit za sekundu, takže teoretický 

00:01:45.229 --> 00:01:52.200
 výsledkem toho je, že komunikace 

00:01:47.820 --> 00:01:54.930
 mezi mozky našeho Nassu je stále 

00:01:52.200 --> 00:01:58.049
 bude pětkrát rychlejší než naše 

00:01:54.930 --> 00:02:02.420
 skutečná propustnost k tomu - a od 

00:01:58.049 --> 00:02:08.369
 ta pěkná jednotka sama o sobě, takže jsem to dostal 

00:02:02.420 --> 00:02:11.310
 toto zařízení na cat5 dot TV / 

00:02:08.369 --> 00:02:13.020
 můj Nass a pojďme se na to rychle podívat 

00:02:11.310 --> 00:02:15.600
 teď jsem dal disky jsem dal dva 

00:02:13.020 --> 00:02:18.750
 jednotky sem zjevně nejsou příliš stabilní 

00:02:15.600 --> 00:02:21.000
 Budu na tom pracovat za vteřinu 

00:02:18.750 --> 00:02:23.910
 ten chlap právě vypadl, to je v pořádku 

00:02:21.000 --> 00:02:25.920
 dobře, takže mám dvě 4 terabyte jednotky 

00:02:23.910 --> 00:02:27.360
 které se jednoduše připojily k internetu 

00:02:25.920 --> 00:02:28.410
 zadní backplane, protože jsem byl laskavý 

00:02:27.360 --> 00:02:31.290
 hraní s tím těsně předtím 

00:02:28.410 --> 00:02:34.200
 show, jak to fungovalo a já 

00:02:31.290 --> 00:02:35.670
 ani jsem to opravdu nezapnul 

00:02:34.200 --> 00:02:37.860
 chtěl vidět, že bych je mohl připojit 

00:02:35.670 --> 00:02:41.490
 pojede a uvidí, jak se připojují, takže já 

00:02:37.860 --> 00:02:45.510
 mám dvě 4 terabajtové jednotky od mých starých 

00:02:41.490 --> 00:02:48.060
 záložní jednotka a myšlenka za tím je 

00:02:45.510 --> 00:02:51.390
 Budu moci používat toto zařízení 

00:02:48.060 --> 00:02:54.060
 jako v podstatě jen více jednotek 

00:02:51.390 --> 00:02:57.330
 připojen k mému počítači, takže je to 

00:02:54.060 --> 00:02:59.580
 zadek zahrnuje zadek uzávěr je to 

00:02:57.330 --> 00:03:01.050
 pevný disk je velký 

00:02:59.580 --> 00:03:02.490
 rozdíl, když nakupujete 

00:03:01.050 --> 00:03:05.910
 pro tyto věci to tedy ponechte 

00:03:02.490 --> 00:03:09.120
 co jsme se rozhodli pro to, co jsem se rozhodl 

00:03:05.910 --> 00:03:12.300
 pro není jednotka prdel, to není to, co 

00:03:09.120 --> 00:03:15.360
 chceme, abychom dostali zařízení, které mi dá 

00:03:12.300 --> 00:03:19.980
 přístup k těmto jednotkám jako externí pevný disk 

00:03:15.360 --> 00:03:22.590
 jednotky, takže má čtyři zadní letadla SATA 

00:03:19.980 --> 00:03:26.880
 backplane bude trvat až čtyři SATA 

00:03:22.590 --> 00:03:30.810
 disky as tím se uvidím 

00:03:26.880 --> 00:03:33.330
 čtyři nové pevné disky, jako bych já 

00:03:30.810 --> 00:03:36.030
 zapojen do externího pevného disku USB 

00:03:33.330 --> 00:03:39.239
 můj počítač, to je teorie za tím 

00:03:36.030 --> 00:03:41.940
 takže se tu neděje žádný nájezd 

00:03:39.239 --> 00:03:44.880
 není zrcadlení, nic 

00:03:41.940 --> 00:03:48.390
 jsou k mě připojeny pouze čtyři disky 

00:03:44.880 --> 00:03:50.970
 Linux stroj xu4, takže pak pomocí 

00:03:48.390 --> 00:03:53.400
 úžasný software dodávaný s Linuxem 

00:03:50.970 --> 00:03:55.590
 Budu schopen, protože Linux je 

00:03:53.400 --> 00:03:57.540
 stejně jako operační systém serveru, budeme 

00:03:55.590 --> 00:04:00.390
 učit se tento týden a my jsme se poučili 

00:03:57.540 --> 00:04:03.180
 top500, jako je Linux, je tam, kde je 

00:04:00.390 --> 00:04:05.549
 na serverech, protože proto budou 

00:04:03.180 --> 00:04:08.730
 se ukáže jako u jednotlivých SATA 

00:04:05.549 --> 00:04:10.200
 externí pevné disky mohu dělat cokoli 

00:04:08.730 --> 00:04:13.320
 chci s nimi, takže budeme hrát 

00:04:10.200 --> 00:04:15.239
 kolem se zrcadlením vytvářejícím pole 

00:04:13.320 --> 00:04:17.250
 budeme prověřovat všechny 

00:04:15.239 --> 00:04:19.410
 různé věci, které můžeme udělat, ale tohle 

00:04:17.250 --> 00:04:20.310
 zařízení zabere až čtyři jednotky, takže my 

00:04:19.410 --> 00:04:23.400
 může rozhodnout 

00:04:20.310 --> 00:04:25.020
 jak chceme segmentovat data 

00:04:23.400 --> 00:04:26.040
 ty čtyři jednotky, které jsem právě dostal 

00:04:25.020 --> 00:04:29.040
 jednotky pro demonstraci 

00:04:26.040 --> 00:04:33.270
 dnes to tak vypadá 

00:04:29.040 --> 00:04:37.050
 tam to máme a je to prostě a 

00:04:33.270 --> 00:04:40.230
 velmi základní zadní rovina SATA, která mi dává 

00:04:37.050 --> 00:04:42.389
 přístup k těmto jednotkám, pokud 

00:04:40.230 --> 00:04:44.310
 montáž jde tam opravdu není 

00:04:42.389 --> 00:04:46.350
 žádné zásobníky na pohon nebo něco podobného 

00:04:44.310 --> 00:04:48.330
 že jsou tito malí plastikáři 

00:04:46.350 --> 00:04:50.070
 které půjdou na přední stranu 

00:04:48.330 --> 00:04:52.350
 disk, který jí jen trochu dá 

00:04:50.070 --> 00:04:55.669
 větší tlak tlačit do zad 

00:04:52.350 --> 00:05:00.060
 letadlo, takže to prostě jde dovnitř 

00:04:55.669 --> 00:05:02.280
 jednotka číslo jedna, a to stiskne správně 

00:05:00.060 --> 00:05:04.320
 do zadní roviny jednotky číslo dvě 

00:05:02.280 --> 00:05:09.120
 oba čtyři terabajty jen proto, že tyto 

00:05:04.320 --> 00:05:11.960
 jsou póly z mé staré zálohy viz zde 

00:05:09.120 --> 00:05:15.750
 můžete to vidět lépe než já a 

00:05:11.960 --> 00:05:17.729
 tam jdeme přímo tam a pak 

00:05:15.750 --> 00:05:26.340
 tenhle chlap tady jde 

00:05:17.729 --> 00:05:30.180
 nahoře a připevněte se, takže si myslím, že ano 

00:05:26.340 --> 00:05:31.770
 téměř to, že to klipy v každém případě a 

00:05:30.180 --> 00:05:32.070
 pak zavřete dveře a jste v pořádku 

00:05:31.770 --> 00:05:33.600
 jít 

00:05:32.070 --> 00:05:36.150
 měli bychom to vystřelit a prostě tak trochu 

00:05:33.600 --> 00:05:38.280
 podívejte se, jak se to u nás objeví 

00:05:36.150 --> 00:05:41.669
 počítač mám tady můj laptop a 

00:05:38.280 --> 00:05:45.229
 co udělám, je rychle pojďme 

00:05:41.669 --> 00:05:48.570
 přiblížit nejprve a udělat LS lomítko 

00:05:45.229 --> 00:05:50.220
 dev slash SD star jen chci vidět 

00:05:48.570 --> 00:05:54.150
 co je tam, takže mám jen jeden tvrdý 

00:05:50.220 --> 00:05:57.120
 disk v mém notebooku a to je moje SD a 

00:05:54.150 --> 00:05:58.650
 pojďme také vychovat, já se oddálím 

00:05:57.120 --> 00:06:01.860
 Trochu tady a budu vychovat 

00:05:58.650 --> 00:06:03.660
 G Část II D jen proto, abychom mohli získat a 

00:06:01.860 --> 00:06:06.389
 podívej se, jak to bude vypadat 

00:06:03.660 --> 00:06:09.210
 pokud jde o pevné disky, takže tam je můj 

00:06:06.389 --> 00:06:12.690
 SD a to je jediný pevný disk 

00:06:09.210 --> 00:06:14.930
 k dispozici v mém počítači, aby jej napájel 

00:06:12.690 --> 00:06:20.250
 tady je jen tlačítko napájení a 

00:06:14.930 --> 00:06:26.010
 co mám, je, že mám USB 3.1 a USB C 

00:06:20.250 --> 00:06:28.289
 na USB standard kabel pro připojení 

00:06:26.010 --> 00:06:29.729
 můj notebook a to je stejná součást 

00:06:28.289 --> 00:06:31.820
 mě stejný kabel budu používat 

00:06:29.729 --> 00:06:34.370
 spoj to do mého 

00:06:31.820 --> 00:06:36.680
 do mého ex - zatím jste právě slyšel a 

00:06:34.370 --> 00:06:38.000
 ding na mém notebooku, takže se podívejme, co je 

00:06:36.680 --> 00:06:40.850
 co se tam děje 

00:06:38.000 --> 00:06:44.090
 takže v části G co vidíme, uvidím 

00:06:40.850 --> 00:06:47.930
 jdi sem G část II D aktualizační zařízení zde 

00:06:44.090 --> 00:06:51.010
 teď musím 3,6 4 terabyte jednotky jsou 

00:06:47.930 --> 00:06:52.790
 co ukazuje oba nepřidělené místo 

00:06:51.010 --> 00:06:55.340
 to jsou dobré zprávy 

00:06:52.790 --> 00:06:57.470
 v pořádku sem přiblížíme a 

00:06:55.340 --> 00:07:03.740
 trochu a pojďme běžet stejně 

00:06:57.470 --> 00:07:08.480
 příkaz a nyní vidíme, že máme DB SD c 

00:07:03.740 --> 00:07:11.780
 SD d a SD e nyní si představuji, že jsme 

00:07:08.480 --> 00:07:14.900
 vidět DD a SD e tak pochopit 

00:07:11.780 --> 00:07:18.380
 jsou alokace jednotek co nejdále 

00:07:14.900 --> 00:07:20.810
 Linux segmentuje zařízení, takže máme 

00:07:18.380 --> 00:07:24.320
 SD a jako můj skutečný interní pevný disk 

00:07:20.810 --> 00:07:27.040
 můj laptop SD B je pravděpodobně první 

00:07:24.320 --> 00:07:29.660
 slot v tomto i, pokud jsou sekvenční 

00:07:27.040 --> 00:07:31.730
 SDC by byl druhý SD d by byl 

00:07:29.660 --> 00:07:33.860
 třetí a SD e by byly čtvrté 

00:07:31.730 --> 00:07:36.470
 pokud mám pravdu, najdeme to 

00:07:33.860 --> 00:07:39.880
 jsme schopni dobře, myslím, že to můžeme potvrdit 

00:07:36.470 --> 00:07:42.850
 to opět tím, že půjde do G část ed 

00:07:39.880 --> 00:07:45.710
 to je rychlý způsob, jak to potvrdit 

00:07:42.850 --> 00:07:47.530
 dobře, pokud jsem znal své heslo a zadal 

00:07:45.710 --> 00:07:51.650
 to správně 

00:07:47.530 --> 00:07:55.910
 ano s DB a SDC, takže s DB bude 

00:07:51.650 --> 00:07:58.250
 můj první disk v SDC podvozku 

00:07:55.910 --> 00:08:00.080
 bude můj druhý, tak co jsem já 

00:07:58.250 --> 00:08:03.650
 udělám dobře první ze všeho, co chci 

00:08:00.080 --> 00:08:07.790
 zformátujte tyto XF prdel, takže budu potřebovat 

00:08:03.650 --> 00:08:13.030
 pár nástrojů, takže sudo su a přihlaste se jako 

00:08:07.790 --> 00:08:15.290
 super uživatel a já jdu apt aktualizace 

00:08:13.030 --> 00:08:18.170
 přesuňte to trochu za vás 

00:08:15.290 --> 00:08:21.820
 lidé doma chci je přijmout 

00:08:18.170 --> 00:08:21.820
 změní se, proč ano, ano 

00:08:24.460 --> 00:08:35.080
 v pořádku nainstalovat XFS Praha jo 

00:08:32.650 --> 00:08:37.450
 podívej se na to, že už to mám v pořádku 

00:08:35.080 --> 00:08:39.880
 za jaký souborový systém byste uvažovali 

00:08:37.450 --> 00:08:44.020
 Nass si můžete myslet, že ext4 můžete 

00:08:39.880 --> 00:08:47.680
 dokonce si pomyslete, že teď možná máslo FS 

00:08:44.020 --> 00:08:49.630
 že jsem pár věcí 

00:08:47.680 --> 00:08:52.990
 , když budu vytvářet toto 

00:08:49.630 --> 00:08:55.450
 pole především X FS je moderní soubor 

00:08:52.990 --> 00:08:58.390
 systém, který má prakticky neomezený 

00:08:55.450 --> 00:09:02.100
 počet souborů, které mohu mít na svém 

00:08:58.390 --> 00:09:03.250
 Nass tak na mém systému souborů, takže je to 

00:09:02.100 --> 00:09:06.520
 neuvěřitelný 

00:09:03.250 --> 00:09:09.640
 jako by to bylo ^ nemůžeme ani počítat 

00:09:06.520 --> 00:09:11.920
 tak vysoká, že umožňuje obrovské množství a 

00:09:09.640 --> 00:09:14.650
 jako disky s velkou kapacitou a je to 

00:09:11.920 --> 00:09:17.890
 moderní souborový systém žurnálování nyní ale 

00:09:14.650 --> 00:09:20.680
 náš FS je to skvělý souborový systém, který miluji 

00:09:17.890 --> 00:09:24.880
 máslo FS však stále cítím 

00:09:20.680 --> 00:09:28.990
 někteří se obávají 

00:09:24.880 --> 00:09:31.210
 máslo FS s neočekávanou ztrátou energie a 

00:09:28.990 --> 00:09:33.670
 někdy se to může stát 

00:09:31.210 --> 00:09:37.120
 výpadky proudu zde v našem místním 

00:09:33.670 --> 00:09:39.990
 komunita, kde byla moc 

00:09:37.120 --> 00:09:42.820
 tak dlouho, že se UPS konečně vzdá 

00:09:39.990 --> 00:09:45.850
 a pokud k tomu dojde, nechci mít 

00:09:42.820 --> 00:09:48.040
 problémy se ztrátou dat nebo paritou, takže X FS je 

00:09:45.850 --> 00:09:53.440
 dokáže udržovat svůj souborový systém mnohem 

00:09:48.040 --> 00:09:56.230
 vhodněji proto, že máslo FS má 

00:09:53.440 --> 00:09:59.170
 problém, kde může skutečně ztratit paritu 

00:09:56.230 --> 00:10:00.640
 data, pokud napájení zhasne, tak to je 

00:09:59.170 --> 00:10:02.860
 něco, čemu se chci vyhnout 

00:10:00.640 --> 00:10:06.010
 myarray ale cuz, kdybych někdy nějaké ztratil 

00:10:02.860 --> 00:10:08.260
 paritní data v mém poli, pokud jde o jednotku 

00:10:06.010 --> 00:10:10.030
 selhal, pak bych měl problémy 

00:10:08.260 --> 00:10:11.650
 přestavět moje data a mohl jsem 

00:10:10.030 --> 00:10:14.050
 potenciálně mají nějaké ztráty dat 

00:10:11.650 --> 00:10:18.460
 přesně tomu se chci vyhnout 

00:10:14.050 --> 00:10:20.110
 nyní, když mám nainstalovaný x FS Praha 

00:10:18.460 --> 00:10:23.290
 což mi umožňuje vyrobit FS teď, pojďme 

00:10:20.110 --> 00:10:25.300
 rozdělte si disk a všimněte si, že jsem 

00:10:23.290 --> 00:10:27.700
 dělat to v terminálu lidi chci 

00:10:25.300 --> 00:10:30.760
 udělat to v terminálu tak, abyste vy 

00:10:27.700 --> 00:10:32.740
 vidíme, jak se to ve skutečnosti stalo 

00:10:30.760 --> 00:10:34.780
 použijte GUI, ale chci, abys byl 

00:10:32.740 --> 00:10:37.060
 a to po terminálu 

00:10:34.780 --> 00:10:37.810
 víme, že to bude dev / s DB 

00:10:37.060 --> 00:10:40.660
 to je moje 

00:10:37.810 --> 00:10:44.380
 první v pořádku, takže pokud udělám PI, uvidím 

00:10:40.660 --> 00:10:47.529
 že to je pro jednotku terabyte viz 

00:10:44.380 --> 00:10:49.540
 jsou to tři bodové sedm terabajtů a 

00:10:47.529 --> 00:10:53.100
 pak je to jako čtyřbodový bla bla 

00:10:49.540 --> 00:10:56.950
 bajtů je to jako zaokrouhlený na 102 čtyři 

00:10:53.100 --> 00:10:58.990
 takže vytvoříme nový oddíl 

00:10:56.950 --> 00:11:03.010
 Nyní, pokud potřebujete pomoc, stačí tlačit em a 

00:10:58.990 --> 00:11:05.470
 zadejte, protože M znamená to, co pomůže ano 

00:11:03.010 --> 00:11:06.520
 to dává hodně smysl, ale vidíte 

00:11:05.470 --> 00:11:09.100
 samozřejmě první příkaz, kterým jsme 

00:11:06.520 --> 00:11:11.529
 bude potřeba n pro nový oddíl 

00:11:09.100 --> 00:11:13.150
 stiskněte n a zadejte číslo oddílu Jsem 

00:11:11.529 --> 00:11:15.610
 stačí trefit vstoupit a pak první 

00:11:13.150 --> 00:11:16.930
 zadejte sektor a poté zadejte poslední sektor 

00:11:15.610 --> 00:11:18.550
 protože chci použít celou jednotku 

00:11:16.930 --> 00:11:20.050
 chcete odstranit podpis a 

00:11:18.550 --> 00:11:23.110
 co mě to žádá, hej, tato jednotka 

00:11:20.050 --> 00:11:25.980
 již obsahuje souborový systém a je 

00:11:23.110 --> 00:11:29.290
 šifrovaný Lucův podpis 

00:11:25.980 --> 00:11:31.930
 Pravděpodobně vytvořeno pomocí Lukovy skládky jako vy 

00:11:29.290 --> 00:11:33.370
 jsou si již vědomi, protože to je můj starý 

00:11:31.930 --> 00:11:35.710
 záložní vzpomenout jsem to zmínil, ale já 

00:11:33.370 --> 00:11:38.230
 vím, že teď mám novou zálohu 

00:11:35.710 --> 00:11:39.820
 tento je nadbytečný a není potřeba a 

00:11:38.230 --> 00:11:42.339
 zbytečné do bodu, kde to může být 

00:11:39.820 --> 00:11:43.930
 zničil a nic takového neztratím 

00:11:42.339 --> 00:11:46.000
 chci ten podpis odstranit 

00:11:43.930 --> 00:11:49.000
 dobře, jdeme, takže to budu psát 

00:11:46.000 --> 00:11:53.440
 s W a hotovo, pokud ano 

00:11:49.000 --> 00:11:55.780
 disk F - L slash dev slash s DB I 

00:11:53.440 --> 00:11:58.300
 měl bych vidět, že teď mám s DB jeden 

00:11:55.780 --> 00:12:01.120
 což je můj první oddíl na s 

00:11:58.300 --> 00:12:04.780
 první jízda v mém podvozku a je to 

00:12:01.120 --> 00:12:06.339
 plný 3,7 terabajt a je nastaven na 

00:12:04.780 --> 00:12:07.839
 Systém souborů Linux nyní nemohu připojit 

00:12:06.339 --> 00:12:12.370
 přesto protože neexistuje žádný soubor 

00:12:07.839 --> 00:12:14.410
 systém tak, aby FS tak mkfs dot x FS 

00:12:12.370 --> 00:12:17.860
 protože jsme vybrali souborový systém x FS 

00:12:14.410 --> 00:12:20.560
 mohl také udělat X t4 správně, ale budeme 

00:12:17.860 --> 00:12:22.930
 udělat x FS a já jdu dev s DB jeden 

00:12:20.560 --> 00:12:27.070
 Nyní je jedna z věcí opravdu 

00:12:22.930 --> 00:12:29.650
 hezké o x FS je rychlost, při které je 

00:12:27.070 --> 00:12:33.130
 formátuje jednotku, jedná se o 4 terabajty 

00:12:29.650 --> 00:12:35.080
 řídit a řekl bych, že je to pravděpodobně 

00:12:33.130 --> 00:12:38.290
 tuto jednotku bude možné naformátovat 

00:12:35.080 --> 00:12:40.600
 jako za desetinu času 

00:12:38.290 --> 00:12:45.279
 bude trvat 4 ext4 nebo něco podobného 

00:12:40.600 --> 00:12:47.500
 zatím mám jednu jednotku, která je 

00:12:45.279 --> 00:12:50.380
 formátování x FS Rozdělil jsem to 

00:12:47.500 --> 00:12:51.010
 má plný 4 terabajtový oddíl 

00:12:50.380 --> 00:12:53.170
 říci 

00:12:51.010 --> 00:12:55.330
 sedm terabajtů a já to formátuji 

00:12:53.170 --> 00:12:59.350
 s XFS pomocí terminálu Linux tak 

00:12:55.330 --> 00:13:00.340
 to může být moje a část toho, proč chci 

00:12:59.350 --> 00:13:03.550
 ukázat vám to v terminálu je 

00:13:00.340 --> 00:13:05.860
 protože by to mohl být můj X Xu 

00:13:03.550 --> 00:13:10.480
 Mohl bych být SSH cín a to by mohlo být 

00:13:05.860 --> 00:13:11.740
 připojeno k externímu USB, které je 

00:13:10.480 --> 00:13:15.160
 již formátování pro 

00:13:11.740 --> 00:13:17.770
 terabajty, kterým můžete věřit 

00:13:15.160 --> 00:13:19.810
 teď bych to vlastně mohl připojit, takže kdybych 

00:13:17.770 --> 00:13:24.190
 vytvořil přípojný bod, takže pojďme / mnt 

00:13:19.810 --> 00:13:26.080
 udělejme bod připojení, udělejme der v MNT 

00:13:24.190 --> 00:13:29.350
 Budu tomu říkat, jen tomu říkám 

00:13:26.080 --> 00:13:31.090
 DB jeden jen pro zábavu, protože je to snadné 

00:13:29.350 --> 00:13:33.690
 pochopit, co to znamená 

00:13:31.090 --> 00:13:35.920
 a myslím, že když jsem se učil Linux jako 

00:13:33.690 --> 00:13:38.290
 uživatel začínajícího Linuxu 

00:13:35.920 --> 00:13:40.900
 Myslím, že body pro připojení byly něco takového 

00:13:38.290 --> 00:13:42.670
 opravdu mě zmátlo, a pokud ano 

00:13:40.900 --> 00:13:44.380
 nikdy nepracoval s body připojení dříve v roce 

00:13:42.670 --> 00:13:47.530
 terminálu nebo si nejste jisti, jak to 

00:13:44.380 --> 00:13:49.510
 práce neváhejte klást otázky, ale 

00:13:47.530 --> 00:13:51.460
 Budu se snažit to vysvětlit 

00:13:49.510 --> 00:13:53.590
 Linux funguje hodně jinak než řekněme 

00:13:51.460 --> 00:13:55.030
 Windows Windows používá, jako když připojíte 

00:13:53.590 --> 00:13:57.070
 v jednotce je to jako vaše jednotka C 

00:13:55.030 --> 00:14:00.130
 je to vaše jednotka D, je to vaše jednotka II a 

00:13:57.070 --> 00:14:02.080
 takže nyní Linux můžete připojit deset 

00:14:00.130 --> 00:14:04.000
 jednotky a žádný z nich nemá jednotku 

00:14:02.080 --> 00:14:06.040
 dopis mohou být jako jeden z nich 

00:14:04.000 --> 00:14:07.900
 může být vaše bota a jedna z nich 

00:14:06.040 --> 00:14:09.850
 může být vaše cesta a jedním z nich může být 

00:14:07.900 --> 00:14:11.110
 vaše domovské složky jedna z nich může být 

00:14:09.850 --> 00:14:14.320
 vaši zálohu a všichni jsou připojeni 

00:14:11.110 --> 00:14:15.820
 skrze strukturu systému souborů, takže 

00:14:14.320 --> 00:14:20.080
 v tomto případě to uvedu 

00:14:15.820 --> 00:14:21.400
 řídit na / mnt lomítko stb-1, protože jsem 

00:14:20.080 --> 00:14:25.900
 vytvořil bod připojení 

00:14:21.400 --> 00:14:28.120
 v tom okamžiku také složka, ale kde 

00:14:25.900 --> 00:14:30.150
 kde to může být matoucí, když já 

00:14:28.120 --> 00:14:33.370
 Nejprve jsem se to začal učit já 

00:14:30.150 --> 00:14:34.870
 Chtěl bych teď jít do DB jeden 

00:14:33.370 --> 00:14:36.610
 Tuto složku jsem vytvořil a možná ji vložím 

00:14:34.870 --> 00:14:38.800
 tam nějaké soubory, ale pak bych to neudělal 

00:14:36.610 --> 00:14:41.350
 dokonce si uvědomit, že jednotka není 

00:14:38.800 --> 00:14:45.330
 aktuálně připojeny tak, aby všechny soubory, které jsem 

00:14:41.350 --> 00:14:48.070
 tam jsou ve skutečnosti děje na mé SD a 

00:14:45.330 --> 00:14:50.710
 zapište vestavěný pevný disk na můj 

00:14:48.070 --> 00:14:53.770
 laptop, protože jsem se ještě nepřipojil 

00:14:50.710 --> 00:14:56.110
 tuto jednotku k tomuto bodu připojení, takže 

00:14:53.770 --> 00:14:58.300
 tak, že to udělám a tam 

00:14:56.110 --> 00:15:00.460
 jsou způsoby, jak to trvale udělat, ale 

00:14:58.300 --> 00:15:04.329
 dočasně to jen vyzkoušejte 

00:15:00.460 --> 00:15:05.799
 Půjdu připojit slash dev slash SDP 

00:15:04.329 --> 00:15:07.749
 jeden, protože víme, že to je naše 

00:15:05.799 --> 00:15:10.480
 první oddíl na jednotce, kterou jsme 

00:15:07.749 --> 00:15:13.899
 naformátoval XFS a pak se připojím 

00:15:10.480 --> 00:15:16.679
 to na / mnt lomítko SD b1 

00:15:13.899 --> 00:15:21.399
 takže to, co říkám, je připojení 

00:15:16.679 --> 00:15:26.079
 oddíl SD b jeden v dev k tomuto připojení 

00:15:21.399 --> 00:15:29.439
 bod AKA složka SD b jeden zásah zadat nyní 

00:15:26.079 --> 00:15:32.110
 pokud půjdu do SD b1, vypadá to přesně 

00:15:29.439 --> 00:15:36.489
 to samé ale cokoli, co tady dělám, je 

00:15:32.110 --> 00:15:39.879
 ve skutečnosti jde o externí tvrdý 

00:15:36.489 --> 00:15:41.889
 disk, takže pokud se vrátím o jednu složku a 

00:15:39.879 --> 00:15:46.059
 Odpojím to, co je příkazem 

00:15:41.889 --> 00:15:49.149
 ve skutečnosti nyní připojíte SD b1, pokud půjdu 

00:15:46.059 --> 00:15:49.509
 zpět do stb-1 a podívat se na LS, je to 

00:15:49.149 --> 00:15:51.819
 prázdný 

00:15:49.509 --> 00:15:54.309
 dobře, kam šly moje soubory, protože správně 

00:15:51.819 --> 00:15:57.369
 teď se vlastně dívám na SD, protože 

00:15:54.309 --> 00:16:02.889
 to není připojeno vrátit znovu a psát 

00:15:57.369 --> 00:16:04.839
 můj horský příkaz se vrací, nyní jsem v 

00:16:02.889 --> 00:16:09.129
 skutečnost při pohledu na externí pevný disk 

00:16:04.839 --> 00:16:13.149
 takže testovací soubor, který jsem vytvořil, je zapnutý 

00:16:09.129 --> 00:16:15.220
 první jízdu v této ošklivé vidím 

00:16:13.149 --> 00:16:19.259
 v našem podvozku jsou externí podvozky 

00:16:15.220 --> 00:16:22.199
 tam, a pokud to není připojeno, já 

00:16:19.259 --> 00:16:24.279
 nebudou mít přístup k těmto souborům 

00:16:22.199 --> 00:16:25.929
 je tu ještě jedna věc, kterou mohu udělat 

00:16:24.279 --> 00:16:29.799
 což je velmi užitečné, protože co 

00:16:25.929 --> 00:16:33.279
 může se stát, odpojme to SD b1 tak 

00:16:29.799 --> 00:16:35.410
 teď to není připojeno v pořádku SD být jeden, pokud já 

00:16:33.279 --> 00:16:38.319
 Podívej se teď, co se může stát, je, že se chystám 

00:16:35.410 --> 00:16:41.230
 dotykový test - ok, takže nyní existuje soubor 

00:16:38.319 --> 00:16:42.819
 volal test2 teď, když se vrátím a já bych 

00:16:41.230 --> 00:16:44.220
 spustit můj příkaz příkaz hodinky sledovat, co může 

00:16:42.819 --> 00:16:46.869
 přihodit se 

00:16:44.220 --> 00:16:52.600
 všimnete si dobře, takže test dva je tam 

00:16:46.869 --> 00:16:55.329
 právě teď jít do SD b1 a udělat LS a 

00:16:52.600 --> 00:16:59.049
 je to dobře, pokud to sakra udělal 

00:16:55.329 --> 00:17:03.220
 jít Ztratil jsem svůj spis, ne já 

00:16:59.049 --> 00:17:05.260
 protože test 2 byl na SDA, protože to bylo 

00:17:03.220 --> 00:17:07.329
 Nebyl namontován, takže jsem zmatený 

00:17:05.260 --> 00:17:10.809
 tady jsem byl, když jsem byl jen a 

00:17:07.329 --> 00:17:13.689
 Rookie Linux uživatel, protože pokud nebyl 

00:17:10.809 --> 00:17:15.429
 nebo když jsem zapomněl připojit disk 

00:17:13.689 --> 00:17:17.350
 nebo kdybych to nepřipojil správně nebo já 

00:17:15.429 --> 00:17:21.160
 dát to nasedl jsem na špatné místo 

00:17:17.350 --> 00:17:22.390
 Položil jsem soubory na připojovací bod nerozebraný 

00:17:21.160 --> 00:17:24.460
 takže na mém exteriéru neskončí 

00:17:22.390 --> 00:17:27.190
 řídit tak proč na tom záleží 

00:17:24.460 --> 00:17:30.640
 co kdybych spustil zálohu co kdybych byl 

00:17:27.190 --> 00:17:34.420
 zálohování mého sd disk do mého ex Tim je 

00:17:30.640 --> 00:17:37.270
 db1, ale nebylo to připojeno 

00:17:34.420 --> 00:17:41.020
 ve skutečnosti kopíruji soubory z mého sd 

00:17:37.270 --> 00:17:42.820
 a na můj SD stejný pevný disk, takže 

00:17:41.020 --> 00:17:45.040
 že pevný disk havaruje moje záloha je 

00:17:42.820 --> 00:17:49.000
 k ničemu absolutně k ničemu 

00:17:45.040 --> 00:17:52.810
 tak jak to mohu napravit, když odpojím 

00:17:49.000 --> 00:17:55.530
 disk, takže připojíte SD b1 protože 

00:17:52.810 --> 00:17:59.590
 Jsem ve složce mount a vrať se tam 

00:17:55.530 --> 00:18:05.230
 Budu odebrat test2 a teď se vrátit 

00:17:59.590 --> 00:18:09.400
 a nyní sledujte tento chatovací CH attr plus 

00:18:05.230 --> 00:18:13.360
 Já to znamená, že je neměnný, aby to bylo 

00:18:09.400 --> 00:18:17.710
 aby to nebylo možné zapsat a potom 

00:18:13.360 --> 00:18:20.980
 SD b1 v pořádku, takže pokud půjdu do stb-1 a 

00:18:17.710 --> 00:18:23.500
 Pokusím se znovu dotknout testu 2, který říká, že ne 

00:18:20.980 --> 00:18:25.480
 takový soubor nebo adresář, co to je dobře já 

00:18:23.500 --> 00:18:29.200
 vědět, že v tomto adresáři je soubor 

00:18:25.480 --> 00:18:30.880
 proč se nemůžu dotknout mého souboru? 

00:18:29.200 --> 00:18:33.430
 hromada v mém adresáři zatím jsem ne 

00:18:30.880 --> 00:18:36.790
 připojil můj disk, takže je důležité 

00:18:33.430 --> 00:18:40.030
 udělej to, protože teď nemohu psát 

00:18:36.790 --> 00:18:41.920
 cokoli k bodu připojení, takže teď 

00:18:40.030 --> 00:18:45.460
 bude fungovat pouze moje záloha bude 

00:18:41.920 --> 00:18:47.890
 fungovat, pokud je připojený, pokud je jednotka v 

00:18:45.460 --> 00:18:49.600
 fakt nasedl, takže pojďme zpátky sem 

00:18:47.890 --> 00:18:52.870
 že je to neměnné, nemohu nic dělat 

00:18:49.600 --> 00:18:55.240
 tady nemůžu vytvořit adresář zde 

00:18:52.870 --> 00:18:57.220
 řekne operace nedovolí to jít nahoru 

00:18:55.240 --> 00:18:59.200
 a nyní pojďme spustit náš mount 

00:18:57.220 --> 00:19:00.960
 příkaz znovu, takže tlačím ovládání R 

00:18:59.200 --> 00:19:04.270
 abych se mohl vrátit do mé historie a 

00:19:00.960 --> 00:19:06.040
 Teď, když si všimnu, že je to v pořádku 

00:19:04.270 --> 00:19:08.530
 Vrátím se do stb-1 

00:19:06.040 --> 00:19:12.640
 a teď uvidím můj testovací soubor 

00:19:08.530 --> 00:19:16.330
 zkusme se dotknout testu a dotknout se nemůžu 

00:19:12.640 --> 00:19:18.790
 napište a vyzkoušejte dva 

00:19:16.330 --> 00:19:21.820
 teď si všimnete, že to fungovalo, protože 

00:19:18.790 --> 00:19:24.730
 je namontován v pořádku, takže je to ve skutečnosti 

00:19:21.820 --> 00:19:27.160
 stb-1 nyní externí pevný disk 

00:19:24.730 --> 00:19:29.710
 a pokud si nejste jisti, zda je připojen 

00:19:27.160 --> 00:19:30.700
 sledujte tento držák, který mi dává seznam 

00:19:29.710 --> 00:19:32.790
 všechny jednotky, které jsou dobře namontovány 

00:19:30.700 --> 00:19:37.000
 to je celá hromada cruft tak mount 

00:19:32.790 --> 00:19:39.220
 pipe grep SD je ten, který mi právě dává 

00:19:37.000 --> 00:19:42.960
 jeden řádek, který ukazuje stb-1, takže toto 

00:19:39.220 --> 00:19:44.170
 ukazuje, že dev stb-1 je připojen 

00:19:42.960 --> 00:19:46.450
 / mnt 

00:19:44.170 --> 00:19:49.510
 slash SDP jeden dobře, co se stane, když já 

00:19:46.450 --> 00:19:52.600
 odpojit a spustit přesně to samé 

00:19:49.510 --> 00:19:55.330
 příkaz žádný výstup, protože to není 

00:19:52.600 --> 00:19:58.390
 momentálně namontované, takže vím, že musím 

00:19:55.330 --> 00:20:02.050
 připojit to udělat znovu 

00:19:58.390 --> 00:20:04.720
 tam jdeme nyní spustit tento příkaz, tak co 

00:20:02.050 --> 00:20:06.460
 dělá to jeho hora, která dává 

00:20:04.720 --> 00:20:09.040
 mě výstup všech připojených věcí 

00:20:06.460 --> 00:20:10.870
 správně, ale pak jsem hádal, což je 

00:20:09.040 --> 00:20:14.050
 v podstatě jde o ekvivalent Linuxu 

00:20:10.870 --> 00:20:15.640
 hledat, že výstup pro tuto SD je 1 a 

00:20:14.050 --> 00:20:17.380
 stiskněte Enter a to by mohlo být cokoli 

00:20:15.640 --> 00:20:18.880
 mohl hledat dev a to mi dá 

00:20:17.380 --> 00:20:20.890
 vše, co obsahuje slovo dev 

00:20:18.880 --> 00:20:23.440
 no ne já to nepotřebuju jen chci 

00:20:20.890 --> 00:20:24.910
 SDP jeden a to mi dává a je to 

00:20:23.440 --> 00:20:26.440
 trochu zaplněný, když to mám rád 

00:20:24.910 --> 00:20:29.770
 to ale tam jdeš, abys viděl 

00:20:26.440 --> 00:20:33.340
 že mám dev s DB jeden na MN t / stb-1 

00:20:29.770 --> 00:20:35.830
 a typ je XFS, to je můj soubor 

00:20:33.340 --> 00:20:39.480
 systém a je připraven jít, takže mám svůj 

00:20:35.830 --> 00:20:41.650
 první jízda připravena jít do mého Nassu 

00:20:39.480 --> 00:20:44.620
 druhá jednotka bude přesně 

00:20:41.650 --> 00:20:46.420
 stejné, kromě toho, že víme, že je to můj SDC 

00:20:44.620 --> 00:20:49.840
 projdete stejnými kroky v pořádku 

00:20:46.420 --> 00:20:54.190
 vytvořit to nyní, protože to není 

00:20:49.840 --> 00:20:56.500
 Raid jednotka mohu dát do 4 terabyte jednotek 

00:20:54.190 --> 00:20:58.740
 Mám své 2 4 terabajtové jednotky 

00:20:56.500 --> 00:21:02.320
 dal navíc 1 terabajt 

00:20:58.740 --> 00:21:05.560
 a můžu dát 500 koncert, abych mohl použít 

00:21:02.320 --> 00:21:10.780
 mix pohonů a bude to každý 

00:21:05.560 --> 00:21:15.070
 se ukáže jako TB SDC s de D 

00:21:10.780 --> 00:21:17.620
 a E a a pak budete mít 

00:21:15.070 --> 00:21:20.290
 přístup ke každému z nich nyní s nájezdem 

00:21:17.620 --> 00:21:21.730
 samozřejmě, pokud jste museli na čtyři terabajty 

00:21:20.290 --> 00:21:22.870
 dobře byste je mohli nastavit jako nálet 1 

00:21:21.730 --> 00:21:24.910
 ale pak, pokud jste měli jeden terabajt 

00:21:22.870 --> 00:21:26.710
 dost a 500 gigabajtů, které jsi nemohl 

00:21:24.910 --> 00:21:29.350
 opravdu je spojit a používat 

00:21:26.710 --> 00:21:31.630
 jim, co budeme dělat dál 

00:21:29.350 --> 00:21:34.360
 Průběh této série je, že se chystáme 

00:21:31.630 --> 00:21:37.989
 ukázat, jak můžeme skutečně použít 

00:21:34.360 --> 00:21:40.929
 tato jednotka nebo jednotka podobná této 

00:21:37.989 --> 00:21:44.679
 za účelem vytvoření polí pomocí Linuxu 

00:21:40.929 --> 00:21:46.570
 nástroje, které mi umožní promíchat 

00:21:44.679 --> 00:21:48.879
 jednotky, aby bylo možné vytvořit redundanci 

00:21:46.570 --> 00:21:51.009
 budeme vytvářet všechny druhy 

00:21:48.879 --> 00:21:53.470
 opravdu skvělé věci, takže můžete 

00:21:51.009 --> 00:21:55.269
 pochopit základní souborový systém 

00:21:53.470 --> 00:21:57.039
 idiosynkrasie a myslím, že i dnes večer 

00:21:55.269 --> 00:21:58.600
 možná jste se naučili pár věcí 

00:21:57.039 --> 00:22:00.519
 prosím komentář níže dejte mi vědět co 

00:21:58.600 --> 00:22:03.129
 naučili jste se tady a pokud něco 

00:22:00.519 --> 00:22:06.700
 je obzvláště zajímavé, že jsem 

00:22:03.129 --> 00:22:07.690
 promluvil dnes večer a skrz 

00:22:06.700 --> 00:22:09.279
 v průběhu série budeme 

00:22:07.690 --> 00:22:12.970
 učit se všem podobným věcem 

00:22:09.279 --> 00:22:15.489
 malé drobnosti za jako 

00:22:12.970 --> 00:22:19.509
 uživatelské rozhraní, na které jsme zvyklí 

00:22:15.489 --> 00:22:21.849
 nainstalovat jako rozhraní na náš Nass 

00:22:19.509 --> 00:22:23.139
 a vše, co jsme kdy viděli, je web 

00:22:21.849 --> 00:22:24.489
 rozhraní dobře budeme pracovat 

00:22:23.139 --> 00:22:26.830
 pod kapotou, abychom pochopili jak 

00:22:24.489 --> 00:22:29.139
 všechno to funguje a naše data jsou v bezpečí 

00:22:26.830 --> 00:22:32.019
 takže to je docela v pohodě, hej, musíme 

00:22:29.139 --> 00:22:34.769
 udělejte opravdu rychlou přestávku, budu mít pravdu 

00:22:32.019 --> 00:22:34.769
 zadní hůl kolem 

00:22:34.960 --> 00:22:42.739
 [Hudba] 

00:22:48.370 --> 00:22:51.500
 [Hudba] 

00:22:52.499 --> 00:22:58.419
 Vítejte zpět, to je kategorie pět 

00:22:54.820 --> 00:22:59.619
 Technologie TV nyní naše vysílání je živé 

00:22:58.419 --> 00:23:01.149
 i když to sledujete 

00:22:59.619 --> 00:23:04.330
 požadujeme, abychom měli nějaké otázky 

00:23:01.149 --> 00:23:06.759
 v naší discord chat první otázku 

00:23:04.330 --> 00:23:08.919
 pochází z Marshova muže a ptá se, jak je moje 

00:23:06.759 --> 00:23:10.389
 laptop, který předvádím na připojení 

00:23:08.919 --> 00:23:11.589
 to NASA teď jsem to zmínil na 

00:23:10.389 --> 00:23:14.229
 horní část pořadu, ale možná nemáte 

00:23:11.589 --> 00:23:16.119
 chytil to chytil a já jen budu 

00:23:14.229 --> 00:23:17.320
 vypněte to, protože jsem odpojil 

00:23:16.119 --> 00:23:18.639
 s příkazem you mount, takže jsem 

00:23:17.320 --> 00:23:20.229
 jen přidržím toto tlačítko napájení 

00:23:18.639 --> 00:23:21.579
 vypněte tyto disky, abych mohl bezpečně 

00:23:20.229 --> 00:23:23.619
 přesunout to tam to jde 

00:23:21.579 --> 00:23:24.940
 pamatujte na to, že se jedná o spřádací jednotky 

00:23:23.619 --> 00:23:26.109
 tohle nechceš pohnout 

00:23:24.940 --> 00:23:27.969
 točí se, protože můžete 

00:23:26.109 --> 00:23:30.070
 ve skutečnosti způsobují poškození fyzické 

00:23:27.969 --> 00:23:32.139
 talíře jednotky jsou jehly 

00:23:30.070 --> 00:23:33.969
 v podstatě jim budeme říkat myslet 

00:23:32.139 --> 00:23:37.299
 starý záznam, přesně jako gramofon 

00:23:33.969 --> 00:23:39.249
 LPS máš hlavy, které se vznášejí na a 

00:23:37.299 --> 00:23:41.919
 velmi malý polštář vzduchu nad horní částí 

00:23:39.249 --> 00:23:44.739
 velmi citlivé magnetické talíře, takže pokud 

00:23:41.919 --> 00:23:48.579
 přesunout to, zatímco je na nich zapnutý 

00:23:44.739 --> 00:23:52.509
 talíře se pohybují při 7 200 otáčkách 

00:23:48.579 --> 00:23:54.389
 za minutu a tak pokud ji přesunu v takovém 

00:23:52.509 --> 00:23:57.940
 tak, že se hlava dotkne talíře 

00:23:54.389 --> 00:24:00.279
 poškrábání dat ztráta možná pevný disk 

00:23:57.940 --> 00:24:03.129
 selhání, takže to vždy vypnu 

00:24:00.279 --> 00:24:07.179
 než to pohnu, jak to propojuji 

00:24:03.129 --> 00:24:10.179
 Tohle jen odpojuji napájení 

00:24:07.179 --> 00:24:14.559
 je zadní část jednotky a vše, co mám 

00:24:10.179 --> 00:24:18.549
 je kabel USBC v pořádku, tak to je to 

00:24:14.559 --> 00:24:22.089
 je na tomto konci nyní na konci notebooku jsem 

00:24:18.549 --> 00:24:24.369
 jen odpojím, že tady je toto 

00:24:22.089 --> 00:24:27.999
 druhý konec stejného kabelu, takže mám 

00:24:24.369 --> 00:24:30.789
 USB C a já mám USB a tak to umožňuje 

00:24:27.999 --> 00:24:35.859
 mě připojit k notebooku nebo jiné 

00:24:30.789 --> 00:24:37.989
 Zařízení USB 3.0, takže to je můj Odroid xu4 

00:24:35.859 --> 00:24:41.259
 to je to, čeho doufáme 

00:24:37.989 --> 00:24:43.359
 v průběhu tohoto projektu 

00:24:41.259 --> 00:24:44.529
 je to vlastně napájet z jednoho 

00:24:43.359 --> 00:24:46.749
 palubní počítač důvod, proč jsem 

00:24:44.529 --> 00:24:47.800
 zvolený xu4 je proto, že podporuje 

00:24:46.749 --> 00:24:50.320
 ty asp 

00:24:47.800 --> 00:24:52.360
 to je USB připojený protokol o scuzzy 

00:24:50.320 --> 00:24:55.840
 což znamená, že se to bude moci dostat 

00:24:52.360 --> 00:24:59.200
 přenos dat pět gigabitů za sekundu 

00:24:55.840 --> 00:25:01.240
 na rozdíl od standardního USB je to 

00:24:59.200 --> 00:25:03.970
 bude to mnohem rychlejší, na co se díváš 

00:25:01.240 --> 00:25:05.830
 spravedlivé procento více, takže to je jak 

00:25:03.970 --> 00:25:07.180
 Byl jsem připojen, nebylo to ssh 

00:25:05.830 --> 00:25:10.390
 spojení nebo něco podobného 

00:25:07.180 --> 00:25:13.840
 bylo přímé USB připojení přesně jako 

00:25:10.390 --> 00:25:16.060
 bude to s naším Odroidem xu z nějakého důvodu 

00:25:13.840 --> 00:25:17.620
 Nedívám se na to a Odroid xu 

00:25:16.060 --> 00:25:20.380
 na dnes večer a vlastně to dělám 

00:25:17.620 --> 00:25:23.250
 používání mého notebooku je přísně v zájmu 

00:25:20.380 --> 00:25:26.500
 demonstrace je to řada 

00:25:23.250 --> 00:25:29.410
 demonstrací a projektů, které jsou 

00:25:26.500 --> 00:25:33.160
 tak to povede k našemu zadku 

00:25:29.410 --> 00:25:36.820
 kočka pět tečka TV / - je tam, kde je to všechno 

00:25:33.160 --> 00:25:39.550
 se sejdeme, ale Xu 4 je 

00:25:36.820 --> 00:25:41.620
 bude jedním z kroků v EU 

00:25:39.550 --> 00:25:42.760
 proces vytváření této jednotky, ale já 

00:25:41.620 --> 00:25:45.220
 chtěl ti ukázat ten druh 

00:25:42.760 --> 00:25:46.720
 základem jsme, že budeme 

00:25:45.220 --> 00:25:49.600
 nastavení věci a já chci, abys 

00:25:46.720 --> 00:25:51.400
 Naučte se, jak některé z těchto málo 

00:25:49.600 --> 00:25:52.660
 Linuxové příkazy fungují v terminálu jako 

00:25:51.400 --> 00:25:54.520
 dobře, protože všechno bude hotovo 

00:25:52.660 --> 00:25:58.510
 v terminálu další dotazy 

00:25:54.520 --> 00:26:01.570
 us bp9 jste velmi vítáni foo 

00:25:58.510 --> 00:26:03.940
 nazvat to - právě teď v tom 

00:26:01.570 --> 00:26:08.440
 v tomto případě to je okamžitě 

00:26:03.940 --> 00:26:10.600
 přímé připojené úložiště myšlenkou je, že 

00:26:08.440 --> 00:26:14.710
 vezmeme to - jednotku a 

00:26:10.600 --> 00:26:17.800
 proměnit ji v pseudo nas nebo zálohu 

00:26:14.710 --> 00:26:20.290
 systém používající Xu 4, takže Xu 4 je 

00:26:17.800 --> 00:26:21.820
 stane se mozkem tohoto a 

00:26:20.290 --> 00:26:24.430
 pak k tomu budu mít přístup 

00:26:21.820 --> 00:26:25.930
 jako síťové úložiště, takže nejsem 

00:26:24.430 --> 00:26:27.820
 Budu to muset zapojit do mého notebooku 

00:26:25.930 --> 00:26:31.240
 vím, že k tomu budu mít přístup 

00:26:27.820 --> 00:26:33.010
 přes Wi-Fi přes Ethernet a další 

00:26:31.240 --> 00:26:34.870
 různé věci, které mi chyběly 

00:26:33.010 --> 00:26:37.170
 otázky teď sleduji chatovací místnost 

00:26:34.870 --> 00:26:40.150
 na mém telefonu, a tak je obrazovka 

00:26:37.170 --> 00:26:42.400
 poměrně malé a pokud ano 

00:26:40.150 --> 00:26:44.560
 mají sklon létat po obrazovce, takže pokud 

00:26:42.400 --> 00:26:46.240
 existují další otázky týkající se 

00:26:44.560 --> 00:26:50.020
 projekt nebo to, co zde učím 

00:26:46.240 --> 00:26:53.500
 dnes večer jsem dokořán skvěle vidět 

00:26:50.020 --> 00:26:56.590
 všichni tady a vážíme si toho, že jste 

00:26:53.500 --> 00:27:02.170
 tady si myslím, že to bylo opravdu 

00:26:56.590 --> 00:27:04.240
 hlavní otázka jsem bp9 jo dobře, takže vy 

00:27:02.170 --> 00:27:06.670
 teď si to, přemýšlel, jak jsem byl schopen 

00:27:04.240 --> 00:27:08.740
 připojte přímo k jednotce NASS 

00:27:06.670 --> 00:27:10.810
 protože to není prdel a přesně jako 

00:27:08.740 --> 00:27:12.880
 foo říká, že je přímo připojen 

00:27:10.810 --> 00:27:15.580
 úložiště v tomto případě to je vše 

00:27:12.880 --> 00:27:17.140
 ačkoliv se to změní 

00:27:15.580 --> 00:27:19.810
 nejste obeznámeni s X, které jste pro Oh 

00:27:17.140 --> 00:27:21.760
 Droid X vám za to je mikropočítač, takže 

00:27:19.810 --> 00:27:23.770
 myslet na Raspberry Pi je to velmi velmi 

00:27:21.760 --> 00:27:26.710
 malý počítač se vejde do mé kapsy vpravo 

00:27:23.770 --> 00:27:29.410
 tady bych si přál, abych to měl se sebou, ale tam jsem 

00:27:26.710 --> 00:27:31.870
 vlastně pokud mě můžete omluvit 

00:27:29.410 --> 00:27:35.320
 okamžik mohu chytit jeden mám jen spravedlivý 

00:27:31.870 --> 00:27:39.010
 ze setu tady jdeme, takže to je 

00:27:35.320 --> 00:27:40.390
 žádný droid Xu pro Q a Q znamená 

00:27:39.010 --> 00:27:43.750
 ticho, protože má toto masivní 

00:27:40.390 --> 00:27:46.720
 chladič, takže to je deska, která je 

00:27:43.750 --> 00:27:49.000
 když budeme napájet naši nass jednotku 

00:27:46.720 --> 00:27:51.580
 to se stane oselem to bude 

00:27:49.000 --> 00:27:54.310
 počítač mozek, který se chystá 

00:27:51.580 --> 00:27:57.400
 moc, je to Debian Linux Debian 10 

00:27:54.310 --> 00:27:59.560
 tady na micro SD právě teď je to 

00:27:57.400 --> 00:28:01.660
 bude na emmc a pak budeme 

00:27:59.560 --> 00:28:04.960
 být nastavení nějaké formy montáže v 

00:28:01.660 --> 00:28:07.840
 aby to tak skryl 

00:28:04.960 --> 00:28:09.340
 bude to součástí samotné jednotky 

00:28:07.840 --> 00:28:12.490
 a něco, co můžeme jen vložit 

00:28:09.340 --> 00:28:14.110
 pokoj ve víš, jestli máš 

00:28:12.490 --> 00:28:15.640
 skříň nebo něco, co můžete nastavit 

00:28:14.110 --> 00:28:18.400
 to a spustit ethernetový kabel 

00:28:15.640 --> 00:28:20.290
 k tomu má Gigabit Ethernet to 

00:28:18.400 --> 00:28:21.730
 dá vám plný přístup ke všem 

00:28:20.290 --> 00:28:23.560
 soubory a vytvořte si zálohy a 

00:28:21.730 --> 00:28:27.610
 za všechno ostatní v pořádku děkuji 

00:28:23.560 --> 00:28:29.230
 otázky, které všichni vítám já 

00:28:27.610 --> 00:28:33.130
 vítám vaše dotazy, které můžete poslat e-mailem 

00:28:29.230 --> 00:28:35.820
 žít v kategorii pěti teček, pokud jste 

00:28:33.130 --> 00:28:35.820
 už mám 

