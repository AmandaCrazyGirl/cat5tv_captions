WEBVTT
Kind: captions
Language: da

00:00:02.179 --> 00:00:09.389
 i løbet af de sidste par uger har jeg og 

00:00:05.549 --> 00:00:12.750
 hold har talt om vores hvad 

00:00:09.389 --> 00:00:17.580
 vi kalder mine røv din røv mine 

00:00:12.750 --> 00:00:18.990
 røv, men Kat fem-punkts tv / - er hvor jeg er 

00:00:17.580 --> 00:00:20.760
 vil lægge alle linkene til produkterne 

00:00:18.990 --> 00:00:23.460
 at vi skal se på 

00:00:20.760 --> 00:00:26.220
 diskussionen har været omkring 

00:00:23.460 --> 00:00:29.550
 beslutning okay okay går vi med USB 3.0 

00:00:26.220 --> 00:00:30.900
 så vi også kan få eSATA-porten 

00:00:29.550 --> 00:00:32.520
 hvilket vil give os op til seks 

00:00:30.900 --> 00:00:38.250
 gigabits pr. sekund, eller går vi lige 

00:00:32.520 --> 00:00:41.399
 til USB 3.1 Rev - hvilket teoretisk kan 

00:00:38.250 --> 00:00:44.219
 kan give os op til 10 gigabits pr. sekund 

00:00:41.399 --> 00:00:45.570
 men det ene advarsel om det er 

00:00:44.219 --> 00:00:47.850
 at den enhed, som vi bliver 

00:00:45.570 --> 00:00:50.700
 forbinder ved - hvilket er en ulige roid xu4 

00:00:47.850 --> 00:00:54.090
 enkeltpladecomputer er kun i stand til 

00:00:50.700 --> 00:00:56.760
 USB 3.0 med dig ASP så det bliver det 

00:00:54.090 --> 00:00:58.680
 fem gigabits i sekundet, det er meget 

00:00:56.760 --> 00:01:00.570
 numre, der skal smides ud, ja det er en 

00:00:58.680 --> 00:01:02.969
 mange numre for gammel Robbie til 

00:01:00.570 --> 00:01:05.700
 husk i denne skaldedehoved det er men det 

00:01:02.969 --> 00:01:08.189
 alt giver mening for mig, at beslutningen var 

00:01:05.700 --> 00:01:10.619
 skabt til at gå fremtids klar og gå 

00:01:08.189 --> 00:01:15.570
 med USB 3.1 Rev - så bliver vi det 

00:01:10.619 --> 00:01:18.390
 har adgang til vores Nass-enhed kl 

00:01:15.570 --> 00:01:21.360
 gigabits pr. sekund fra fra 

00:01:18.390 --> 00:01:24.420
 Odroid xu4, men husk vores 

00:01:21.360 --> 00:01:26.159
 tilslutning til vores Nass bliver 

00:01:24.420 --> 00:01:27.900
 baseret på Gigabit Ethernet under alle omstændigheder 

00:01:26.159 --> 00:01:31.680
 fordi Ethernet-porten på det bord 

00:01:27.900 --> 00:01:35.210
 er tusindvis af megabits per sekund eller 

00:01:31.680 --> 00:01:37.409
 uanset hvad, selvom jeg kan lide 

00:01:35.210 --> 00:01:39.780
 kommunikere med drevene kl 

00:01:37.409 --> 00:01:41.939
 gigabits et sekund kommunikationen derefter 

00:01:39.780 --> 00:01:45.229
 til xu4 bliver kun en 

00:01:41.939 --> 00:01:47.820
 gigabit et sekund så det teoretiske 

00:01:45.229 --> 00:01:52.200
 resultatet af det er, at kommunikationen 

00:01:47.820 --> 00:01:54.930
 mellem hjernen i vores Nass er stadig 

00:01:52.200 --> 00:01:58.049
 bliver fem gange så hurtig som vores 

00:01:54.930 --> 00:02:02.420
 faktisk gennemstrømning til det - og fra 

00:01:58.049 --> 00:02:08.369
 selve den dejlige enhed, så jeg har den her 

00:02:02.420 --> 00:02:11.310
 denne enhed på cat5 dot TV / 

00:02:08.369 --> 00:02:13.020
 min Nass og lad os se hurtigt på det 

00:02:11.310 --> 00:02:15.600
 nu har jeg lagt de drev, jeg har sat to 

00:02:13.020 --> 00:02:18.750
 kører ind her åbenlyst ikke meget stabilt 

00:02:15.600 --> 00:02:21.000
 II vil arbejde på det på bare et sekund 

00:02:18.750 --> 00:02:23.910
 denne fyr faldt lige ud, det er okay 

00:02:21.000 --> 00:02:25.920
 okay, så jeg har to 4 terabyte drev 

00:02:23.910 --> 00:02:27.360
 der bare er tilsluttet til 

00:02:25.920 --> 00:02:28.410
 tilbage bagfly, fordi jeg var bare venlig 

00:02:27.360 --> 00:02:31.290
 af at lege med dette lige før 

00:02:28.410 --> 00:02:34.200
 showet for at se, hvordan det fungerede, og jeg 

00:02:31.290 --> 00:02:35.670
 tændte ikke engang det bare jeg bare 

00:02:34.200 --> 00:02:37.860
 ville se, at jeg kunne tilslutte disse 

00:02:35.670 --> 00:02:41.490
 kører ind og se, hvordan de opretter forbindelse, så jeg 

00:02:37.860 --> 00:02:45.510
 har to 4 terabyte drev fra min gamle 

00:02:41.490 --> 00:02:48.060
 backup enhed, og ideen bag dette er 

00:02:45.510 --> 00:02:51.390
 Jeg vil være i stand til at bruge denne enhed 

00:02:48.060 --> 00:02:54.060
 som dybest set bare flere drev 

00:02:51.390 --> 00:02:57.330
 tilsluttet min computer, så dette er en 

00:02:54.060 --> 00:02:59.580
 røv inkluderer en røv kabinet dette er en 

00:02:57.330 --> 00:03:01.050
 harddisk kabinet der er en stor 

00:02:59.580 --> 00:03:02.490
 forskel, når du handler rundt 

00:03:01.050 --> 00:03:05.910
 for denne slags ting, så hold dette 

00:03:02.490 --> 00:03:09.120
 husk hvad vi valgte hvad jeg valgte 

00:03:05.910 --> 00:03:12.300
 for er ikke en røv enhed, det er ikke hvad 

00:03:09.120 --> 00:03:15.360
 vi vil have en enhed, der giver mig 

00:03:12.300 --> 00:03:19.980
 adgang til disse drev som eksternt hårdt 

00:03:15.360 --> 00:03:22.590
 drev, så dette har fire SATA-bagfly 

00:03:19.980 --> 00:03:26.880
 bagplanen tager op til fire SATA 

00:03:22.590 --> 00:03:30.810
 drev, og med det vil jeg se 

00:03:26.880 --> 00:03:33.330
 fire nye harddiske, ligesom som jeg 

00:03:30.810 --> 00:03:36.030
 tilsluttet en ekstern USB-harddisk tændt 

00:03:33.330 --> 00:03:39.239
 min computer, det er teorien bag det 

00:03:36.030 --> 00:03:41.940
 så der sker ikke noget raid her 

00:03:39.239 --> 00:03:44.880
 der er ingen spejling der er intet 

00:03:41.940 --> 00:03:48.390
 det er kun fire drev, der er forbundet til min 

00:03:44.880 --> 00:03:50.970
 Linux maskine xu4 så derefter bruge 

00:03:48.390 --> 00:03:53.400
 fantastisk software, der leveres med Linux 

00:03:50.970 --> 00:03:55.590
 Det kan jeg være, fordi Linux er det 

00:03:53.400 --> 00:03:57.540
 ligesom server OS højre, vi skal 

00:03:55.590 --> 00:04:00.390
 lære denne uge, og vi har lært af 

00:03:57.540 --> 00:04:03.180
 top500 der ligesom Linux er hvor den er 

00:04:00.390 --> 00:04:05.549
 på for servere, så fordi de kommer 

00:04:03.180 --> 00:04:08.730
 vises som for individuelle SATA 

00:04:05.549 --> 00:04:10.200
 eksterne harddiske Jeg kan gøre hvad jeg end 

00:04:08.730 --> 00:04:13.320
 vil have dem, så vi skal lege 

00:04:10.200 --> 00:04:15.239
 omkring med spejling, der skaber arrays 

00:04:13.320 --> 00:04:17.250
 vi tjekker alle de ting 

00:04:15.239 --> 00:04:19.410
 forskellige ting, som vi kan gøre, men dette 

00:04:17.250 --> 00:04:20.310
 enheden vil tage op til fire Drive, så vi 

00:04:19.410 --> 00:04:23.400
 kan beslutte 

00:04:20.310 --> 00:04:25.020
 hvordan vi vil segmentere dataene på tværs 

00:04:23.400 --> 00:04:26.040
 disse fire drev har jeg lige to 

00:04:25.020 --> 00:04:29.040
 kører for demonstrationens skyld 

00:04:26.040 --> 00:04:33.270
 i dag, og sådan ser det ud 

00:04:29.040 --> 00:04:37.050
 der har vi det, og det er bare et 

00:04:33.270 --> 00:04:40.230
 meget grundlæggende SATA bagfly, der giver mig 

00:04:37.050 --> 00:04:42.389
 adgang til disse drev så langt som til 

00:04:40.230 --> 00:04:44.310
 montering går der er virkelig ingen der er 

00:04:42.389 --> 00:04:46.350
 ingen kørebakker eller lignende 

00:04:44.310 --> 00:04:48.330
 at der er disse små plastik fyre 

00:04:46.350 --> 00:04:50.070
 der vil gå foran på 

00:04:48.330 --> 00:04:52.350
 drev, som bare giver det lidt 

00:04:50.070 --> 00:04:55.669
 mere pres for at skubbe den ind i ryggen 

00:04:52.350 --> 00:05:00.060
 fly så disse bare går ind sådan 

00:04:55.669 --> 00:05:02.280
 drev nummer et, og det klemmer til højre 

00:05:00.060 --> 00:05:04.320
 ind i det bagerste plan drev nummer to 

00:05:02.280 --> 00:05:09.120
 begge fire terabyte bare fordi disse 

00:05:04.320 --> 00:05:11.960
 er poler fra min gamle sikkerhedskopi se her 

00:05:09.120 --> 00:05:15.750
 du kan se det bedre, end jeg kan og 

00:05:11.960 --> 00:05:17.729
 der går vi lige ind og derefter 

00:05:15.750 --> 00:05:26.340
 denne fyr her skal bare gå lige videre 

00:05:17.729 --> 00:05:30.180
 øverst og klip ind, så jeg tror, ​​jeg har gjort det 

00:05:26.340 --> 00:05:31.770
 næsten fik, at det klippes på alle måder og 

00:05:30.180 --> 00:05:32.070
 så lukker du døren, og du er god 

00:05:31.770 --> 00:05:33.600
 at gå 

00:05:32.070 --> 00:05:36.150
 så skulle vi affyre det og bare slags 

00:05:33.600 --> 00:05:38.280
 se, hvordan dette vil dukke op på vores 

00:05:36.150 --> 00:05:41.669
 computer Jeg har min bærbare computer her og 

00:05:38.280 --> 00:05:45.229
 hvad jeg skal gøre er, lad os hurtigt lad os gøre 

00:05:41.669 --> 00:05:48.570
 zoom først ind og lav et LS-skråstreg 

00:05:45.229 --> 00:05:50.220
 dev slash SD star Jeg vil bare se 

00:05:48.570 --> 00:05:54.150
 hvad der er, så jeg har kun en hård 

00:05:50.220 --> 00:05:57.120
 kør i min bærbare computer, og det er min SD a 

00:05:54.150 --> 00:05:58.650
 lad os også hæve, jeg skal zoome ud 

00:05:57.120 --> 00:06:01.860
 her lidt, og jeg vil rejse 

00:05:58.650 --> 00:06:03.660
 G Del II D bare så vi kan få en 

00:06:01.860 --> 00:06:06.389
 se på, hvordan dette vil se ud 

00:06:03.660 --> 00:06:09.210
 så vidt harddiske går, så der er min 

00:06:06.389 --> 00:06:12.690
 SD a, og det er den eneste harddisk 

00:06:09.210 --> 00:06:14.930
 tilgængelig på min computer, så det kan tændes 

00:06:12.690 --> 00:06:20.250
 der er bare en tænd / sluk-knap her og 

00:06:14.930 --> 00:06:26.010
 hvad jeg har er jeg har USB 3.1 en USB C 

00:06:20.250 --> 00:06:28.289
 til en USB-standard et kabel, der skal tilsluttes 

00:06:26.010 --> 00:06:29.729
 min bærbare computer, og det er den samme del af 

00:06:28.289 --> 00:06:31.820
 mig det samme kabel, jeg skal bruge til 

00:06:29.729 --> 00:06:34.370
 forbinde det til min 

00:06:31.820 --> 00:06:36.680
 i min eks - dig for nu har jeg lige hørt a 

00:06:34.370 --> 00:06:38.000
 ding på min bærbare computer, så lad os se hvad der er 

00:06:36.680 --> 00:06:40.850
 hvad sker der her 

00:06:38.000 --> 00:06:44.090
 så i G del ed hvad ser vi jeg skal 

00:06:40.850 --> 00:06:47.930
 gå G del II D opdater enheder herover 

00:06:44.090 --> 00:06:51.010
 nu er jeg nødt til 3,6 4 terabyte drev er 

00:06:47.930 --> 00:06:52.790
 hvad det viser både uallokeret plads 

00:06:51.010 --> 00:06:55.340
 det er gode nyheder 

00:06:52.790 --> 00:06:57.470
 okay, lad os zoome ind a 

00:06:55.340 --> 00:07:03.740
 lidt og lad os køre det samme 

00:06:57.470 --> 00:07:08.480
 kommando, og nu ser vi, at vi har DB SD c 

00:07:03.740 --> 00:07:11.780
 SD d og SD e nu kan jeg forestille mig, at vi er 

00:07:08.480 --> 00:07:14.900
 at se s DD og SD e så forstå disse 

00:07:11.780 --> 00:07:18.380
 er drevfordelinger så langt som hvordan 

00:07:14.900 --> 00:07:20.810
 Linux segmenterer enhederne, så vi har det 

00:07:18.380 --> 00:07:24.320
 SD a som min faktiske interne harddisk på 

00:07:20.810 --> 00:07:27.040
 min bærbare SD B er formodentlig den første 

00:07:24.320 --> 00:07:29.660
 slot i dette i, hvis de er sekventielle 

00:07:27.040 --> 00:07:31.730
 SDC ville være den anden SD d ville være 

00:07:29.660 --> 00:07:33.860
 den tredje og SD e ville være den fjerde 

00:07:31.730 --> 00:07:36.470
 hvis jeg har ret, så finder vi det 

00:07:33.860 --> 00:07:39.880
 vi kan godt, jeg mener, vi kan bekræfte 

00:07:36.470 --> 00:07:42.850
 det igen ved at gå ind i G del ed 

00:07:39.880 --> 00:07:45.710
 det er en hurtig måde at bekræfte det under alle omstændigheder 

00:07:42.850 --> 00:07:47.530
 godt hvis jeg kendte mit kodeord og indtastede 

00:07:45.710 --> 00:07:51.650
 det korrekt 

00:07:47.530 --> 00:07:55.910
 ja s DB og SDC så s DB bliver det 

00:07:51.650 --> 00:07:58.250
 mit første drev i SDC'ets chassis 

00:07:55.910 --> 00:08:00.080
 bliver min anden, så hvad er jeg 

00:07:58.250 --> 00:08:03.650
 kommer først og fremmest godt til det 

00:08:00.080 --> 00:08:07.790
 formater disse XF røv så jeg får brug for en 

00:08:03.650 --> 00:08:13.030
 par værktøjer så sudo su og log ind som 

00:08:07.790 --> 00:08:15.290
 superbruger, og jeg kommer til at gå opdateret 

00:08:13.030 --> 00:08:18.170
 flyt dette lidt over for dig 

00:08:15.290 --> 00:08:21.820
 folk derhjemme vil jeg acceptere disse 

00:08:18.170 --> 00:08:21.820
 ændrer hvorfor ja ja det gør jeg 

00:08:24.460 --> 00:08:35.080
 okay at installere XFS Prags ja 

00:08:32.650 --> 00:08:37.450
 se på, at jeg allerede har det okay 

00:08:35.080 --> 00:08:39.880
 hvilket filsystem vil du overveje til 

00:08:37.450 --> 00:08:44.020
 din Nass tænker du måske ext4 du måske 

00:08:39.880 --> 00:08:47.680
 tænk endda som måske smør FS nu 

00:08:44.020 --> 00:08:49.630
 der er et par ting, som jeg 

00:08:47.680 --> 00:08:52.990
 vil overveje, når jeg opretter dette 

00:08:49.630 --> 00:08:55.450
 array først og fremmest X FS er en moderne fil 

00:08:52.990 --> 00:08:58.390
 system, der har et praktisk taget ubegrænset 

00:08:55.450 --> 00:09:02.100
 antal filer, som jeg kan have på min 

00:08:58.390 --> 00:09:03.250
 Nass så på mit filsystem så det er 

00:09:02.100 --> 00:09:06.520
 utrolig 

00:09:03.250 --> 00:09:09.640
 ligesom det er som ^ vi kan ikke engang tælle 

00:09:06.520 --> 00:09:11.920
 så højt det tillader massivt beløb og 

00:09:09.640 --> 00:09:14.650
 som massive kapacitetsdrev, og det er en 

00:09:11.920 --> 00:09:17.890
 moderne journalføring filsystem nu men 

00:09:14.650 --> 00:09:20.680
 vores FS, det er et fantastisk filsystem, jeg elsker 

00:09:17.890 --> 00:09:24.880
 smør FS men jeg har stadig lyst til 

00:09:20.680 --> 00:09:28.990
 der er nogle bekymringer nogle er bekymrede for 

00:09:24.880 --> 00:09:31.210
 smør FS med uventet strømtab og 

00:09:28.990 --> 00:09:33.670
 nogle gange kan det ske, vi har haft 

00:09:31.210 --> 00:09:37.120
 strømafbrydelser her i vores lokale 

00:09:33.670 --> 00:09:39.990
 samfund hvor strømmen har været ude 

00:09:37.120 --> 00:09:42.820
 så længe, ​​at UPS omsider giver op 

00:09:39.990 --> 00:09:45.850
 og hvis det sker, vil jeg ikke have det 

00:09:42.820 --> 00:09:48.040
 problemer med datatab eller paritet, så X FS er 

00:09:45.850 --> 00:09:53.440
 i stand til at vedligeholde sit filsystem meget 

00:09:48.040 --> 00:09:56.230
 mere tilstrækkeligt, fordi smør FS har en 

00:09:53.440 --> 00:09:59.170
 spørgsmål, hvor det faktisk kan miste paritet 

00:09:56.230 --> 00:10:00.640
 data, hvis strømmen går ud, så det er det 

00:09:59.170 --> 00:10:02.860
 noget, som jeg vil undgå i 

00:10:00.640 --> 00:10:06.010
 myarray men cuz hvis jeg nogensinde har mistet noget 

00:10:02.860 --> 00:10:08.260
 paritetsdata i min matrix, så hvis et drev 

00:10:06.010 --> 00:10:10.030
 mislykkedes, så ville jeg have problemer 

00:10:08.260 --> 00:10:11.650
 genopbygning af mine data, og det kunne jeg 

00:10:10.030 --> 00:10:14.050
 potentielt har noget datatab så 

00:10:11.650 --> 00:10:18.460
 det er præcis, hvad jeg vil undgå, så 

00:10:14.050 --> 00:10:20.110
 nu hvor jeg har x FS Prag installeret 

00:10:18.460 --> 00:10:23.290
 hvilket giver mig nu FS 

00:10:20.110 --> 00:10:25.300
 partitionere vores drev så og bemærk, at jeg er 

00:10:23.290 --> 00:10:27.700
 gør dette i de terminalfolk jeg ønsker 

00:10:25.300 --> 00:10:30.760
 at gøre dette i terminalen, så du 

00:10:27.700 --> 00:10:32.740
 kan se, hvordan det faktisk er gjort, vi kunne 

00:10:30.760 --> 00:10:34.780
 Brug GUI men du jeg vil have dig til at være 

00:10:32.740 --> 00:10:37.060
 i stand til at gøre dette i terminalen så efter 

00:10:34.780 --> 00:10:37.810
 vi ved, at det bliver dev / s DB 

00:10:37.060 --> 00:10:40.660
 det er min 

00:10:37.810 --> 00:10:44.380
 første okay, så hvis jeg gør en PI kan se 

00:10:40.660 --> 00:10:47.529
 at dette er til terabyte drev se 

00:10:44.380 --> 00:10:49.540
 de er tre point syv terabyte og 

00:10:47.529 --> 00:10:53.100
 så er det som fire punkts bla bla 

00:10:49.540 --> 00:10:56.950
 bytes det hele ligner afrundet til 102 fire 

00:10:53.100 --> 00:10:58.990
 så vi opretter en ny partition 

00:10:56.950 --> 00:11:03.010
 nu, hvis du har brug for hjælp, bare skub dem og 

00:10:58.990 --> 00:11:05.470
 indtast, fordi M står for hvilken hjælp ja 

00:11:03.010 --> 00:11:06.520
 det giver meget mening, men du kan se det 

00:11:05.470 --> 00:11:09.100
 selvfølgelig den første kommando, vi er 

00:11:06.520 --> 00:11:11.529
 at behøve er n for en ny partition 

00:11:09.100 --> 00:11:13.150
 så tryk på n indtast partitionsnummer jeg 

00:11:11.529 --> 00:11:15.610
 skal bare komme ind og derefter først 

00:11:13.150 --> 00:11:16.930
 indtast sektor og derefter sidst indtast sektor 

00:11:15.610 --> 00:11:18.550
 fordi jeg vil bruge hele drevet 

00:11:16.930 --> 00:11:20.050
 du vil fjerne signaturen og 

00:11:18.550 --> 00:11:23.110
 hvad der spørger mig hej dette drev 

00:11:20.050 --> 00:11:25.980
 har allerede et filsystem på det, og det er det 

00:11:23.110 --> 00:11:29.290
 en krypteret crypto Luc's signatur 

00:11:25.980 --> 00:11:31.930
 sandsynligvis oprettet med Luke's dump som dig 

00:11:29.290 --> 00:11:33.370
 er allerede klar over, for det er min gamle 

00:11:31.930 --> 00:11:35.710
 backup husk jeg nævnte det men jeg 

00:11:33.370 --> 00:11:38.230
 ved, at jeg nu har fået en ny sikkerhedskopi 

00:11:35.710 --> 00:11:39.820
 denne er overflødig og ikke nødvendig og 

00:11:38.230 --> 00:11:42.339
 overflødig til det punkt, hvor det kan være 

00:11:39.820 --> 00:11:43.930
 ødelagt, og jeg mister ikke noget så 

00:11:42.339 --> 00:11:46.000
 vil jeg fjerne den signatur, ja 

00:11:43.930 --> 00:11:49.000
 okay der går vi, så jeg skal skrive det 

00:11:46.000 --> 00:11:53.440
 ude med W, og jeg er færdig nu, hvis jeg gør det 

00:11:49.000 --> 00:11:55.780
 en F disk - L slash dev slash s DB I 

00:11:53.440 --> 00:11:58.300
 skulle se, at jeg nu har DB en 

00:11:55.780 --> 00:12:01.120
 som er min første partition på s DB the 

00:11:58.300 --> 00:12:04.780
 første kørsel i mit chassis, og det er en 

00:12:01.120 --> 00:12:06.339
 fuld 3,7 terabyte, og det er indstillet til en 

00:12:04.780 --> 00:12:07.839
 Linux-filsystem nu kan jeg ikke montere det 

00:12:06.339 --> 00:12:12.370
 endnu fordi der ikke er nogen fil 

00:12:07.839 --> 00:12:14.410
 system så gør FS så mkfs dot x FS 

00:12:12.370 --> 00:12:17.860
 fordi vi valgte x FS-filsystemet dig 

00:12:14.410 --> 00:12:20.560
 kunne også gøre X t4 rigtigt, men vi skal 

00:12:17.860 --> 00:12:22.930
 gør x FS, og jeg skal gå til DB en 

00:12:20.560 --> 00:12:27.070
 nu er en af ​​tingene virkelig virkelig 

00:12:22.930 --> 00:12:29.650
 nice om x FS er den hastighed, hvormed det 

00:12:27.070 --> 00:12:33.130
 formaterer drevet, dette er en 4 terabyte 

00:12:29.650 --> 00:12:35.080
 drev, og jeg vil sige det er sandsynligvis 

00:12:33.130 --> 00:12:38.290
 vil være i stand til at formatere dette drev 

00:12:35.080 --> 00:12:40.600
 ligesom i en tiendedel af den tid 

00:12:38.290 --> 00:12:45.279
 ville tage 4 ext4 eller noget lignende 

00:12:40.600 --> 00:12:47.500
 indtil videre har jeg et drev, der er 

00:12:45.279 --> 00:12:50.380
 formatering x FS Jeg har partitioneret det det 

00:12:47.500 --> 00:12:51.010
 har en fuld 4 terabyte partition vi 

00:12:50.380 --> 00:12:53.170
 sige 

00:12:51.010 --> 00:12:55.330
 syv terabyte, og jeg formaterer det 

00:12:53.170 --> 00:12:59.350
 med XFS ved hjælp af Linux-terminalen så 

00:12:55.330 --> 00:13:00.340
 dette kan være min og en del af, hvorfor jeg vil have 

00:12:59.350 --> 00:13:03.550
 for at vise dig at dette i terminalen er 

00:13:00.340 --> 00:13:05.860
 fordi dette kunne være min X Xu, som 

00:13:03.550 --> 00:13:10.480
 Jeg kunne være SSH-tin til, og det kunne være 

00:13:05.860 --> 00:13:11.740
 tilsluttet den eksterne USB, der er 

00:13:10.480 --> 00:13:15.160
 allerede færdig formateret for 

00:13:11.740 --> 00:13:17.770
 terabytes kan du tro, at det er gjort 

00:13:15.160 --> 00:13:19.810
 nu kunne jeg faktisk montere det, så hvis jeg 

00:13:17.770 --> 00:13:24.190
 oprettet et monteringspunkt så lad os gå / mnt 

00:13:19.810 --> 00:13:26.080
 lad os lave et monteringspunkt gør der i MNT 

00:13:24.190 --> 00:13:29.350
 Jeg kalder dette, jeg skal bare kalde det 

00:13:26.080 --> 00:13:31.090
 DB en bare for sjov, fordi det er let at gøre 

00:13:29.350 --> 00:13:33.690
 forstå hvad det betyder 

00:13:31.090 --> 00:13:35.920
 og jeg tror, ​​da jeg lærte Linux som 

00:13:33.690 --> 00:13:38.290
 en nybegynder Linux-bruger 

00:13:35.920 --> 00:13:40.900
 Jeg tror, ​​at monteringspunkter var noget der 

00:13:38.290 --> 00:13:42.670
 virkelig forvirret mig, og så hvis du har det 

00:13:40.900 --> 00:13:44.380
 arbejdede aldrig med monteringspunkter før i 

00:13:42.670 --> 00:13:47.530
 terminalen, eller du er ikke sikker på, hvordan det er 

00:13:44.380 --> 00:13:49.510
 fungerer velkommen til at stille spørgsmål, men 

00:13:47.530 --> 00:13:51.460
 Jeg vil gøre mit bedste for at forklare det 

00:13:49.510 --> 00:13:53.590
 Linux fungerer meget anderledes end sige 

00:13:51.460 --> 00:13:55.030
 Windows Windows bruger som når du tilslutter 

00:13:53.590 --> 00:13:57.070
 i et drev er det som dit C-drev 

00:13:55.030 --> 00:14:00.130
 det er dit D-drev, det er dit II-drev og 

00:13:57.070 --> 00:14:02.080
 så nu på Linux kan du tilslutte ti 

00:14:00.130 --> 00:14:04.000
 drev, og ingen af ​​dem har et drev 

00:14:02.080 --> 00:14:06.040
 brev kan de bare være som en af ​​dem 

00:14:04.000 --> 00:14:07.900
 kan være din boot og en af ​​dem 

00:14:06.040 --> 00:14:09.850
 kan være din rute, og en af ​​dem kan være 

00:14:07.900 --> 00:14:11.110
 dine hjemmemapper en af ​​dem kan være 

00:14:09.850 --> 00:14:14.320
 din sikkerhedskopi, og de er alle tilsluttet 

00:14:11.110 --> 00:14:15.820
 gennem filsystemstrukturen så ind 

00:14:14.320 --> 00:14:20.080
 denne sag skal jeg lægge den 

00:14:15.820 --> 00:14:21.400
 kør på / mnt skrå stb-1 fordi jeg 

00:14:20.080 --> 00:14:25.900
 oprettet et monteringspunkt 

00:14:21.400 --> 00:14:28.120
 aka en mappe på det tidspunkt, men hvor 

00:14:25.900 --> 00:14:30.150
 hvor det kan blive forvirrende er når jeg 

00:14:28.120 --> 00:14:33.370
 begyndte først at lære disse ting jeg 

00:14:30.150 --> 00:14:34.870
 ville jeg gå ind i s DB en nu 

00:14:33.370 --> 00:14:36.610
 Jeg har oprettet denne mappe, og jeg lægger muligvis 

00:14:34.870 --> 00:14:38.800
 nogle filer der, men så ville jeg ikke 

00:14:36.610 --> 00:14:41.350
 indse endda, at drevet ikke er det 

00:14:38.800 --> 00:14:45.330
 er i øjeblikket monteret så alle filer, som jeg 

00:14:41.350 --> 00:14:48.070
 satte der faktisk kører på min SD a 

00:14:45.330 --> 00:14:50.710
 skriv den indbyggede harddisk på min 

00:14:48.070 --> 00:14:53.770
 bærbar computer, fordi jeg endnu ikke har oprettet forbindelse 

00:14:50.710 --> 00:14:56.110
 dette drev til det monteringspunkt, så 

00:14:53.770 --> 00:14:58.300
 sådan skal jeg gøre det og der 

00:14:56.110 --> 00:15:00.460
 er måder at gøre det permanent men til 

00:14:58.300 --> 00:15:04.329
 midlertidigt gør det bare for at teste 

00:15:00.460 --> 00:15:05.799
 Jeg skal gå på slash dev slash SDP 

00:15:04.329 --> 00:15:07.749
 en, fordi vi ved, at det er vores 

00:15:05.799 --> 00:15:10.480
 første partition på det drev, som vi 

00:15:07.749 --> 00:15:13.899
 formateret XFS og så skal jeg montere 

00:15:10.480 --> 00:15:16.679
 at til / mnt skære SD b1 

00:15:13.899 --> 00:15:21.399
 så hvad jeg siger det er montere dette 

00:15:16.679 --> 00:15:26.079
 partition SD b en i dev til denne montering 

00:15:21.399 --> 00:15:29.439
 punkt AKA mappe SD b et hit indtast nu 

00:15:26.079 --> 00:15:32.110
 hvis jeg går ind i SD b1 ser det nøjagtigt ud 

00:15:29.439 --> 00:15:36.489
 det samme, men alt hvad jeg gør her, er 

00:15:32.110 --> 00:15:39.879
 faktisk går på den eksterne hårdt 

00:15:36.489 --> 00:15:41.889
 kør så nu, hvis jeg går tilbage en mappe og 

00:15:39.879 --> 00:15:46.059
 Jeg demonterer det, som kommandoen er 

00:15:41.889 --> 00:15:49.149
 faktisk monterer du SD b1 nu, hvis jeg går 

00:15:46.059 --> 00:15:49.509
 tilbage til stb-1 og se et LS-look, det er 

00:15:49.149 --> 00:15:51.819
 tom 

00:15:49.509 --> 00:15:54.309
 godt, hvor gik mine filer, fordi det er rigtigt 

00:15:51.819 --> 00:15:57.369
 nu ser jeg faktisk på SD a fordi 

00:15:54.309 --> 00:16:02.889
 det er ikke monteret, gå tilbage igen og skriv 

00:15:57.369 --> 00:16:04.839
 min mount kommando gå tilbage ind nu er jeg i 

00:16:02.889 --> 00:16:09.129
 kigger på den eksterne harddisk 

00:16:04.839 --> 00:16:13.149
 så testfilen, som jeg oprettede, er tændt 

00:16:09.129 --> 00:16:15.220
 det allerførste drev i dette grimme ser jeg 

00:16:13.149 --> 00:16:19.259
 i vores chassis er eksternt chassis 

00:16:15.220 --> 00:16:22.199
 lige der, og hvis det ikke er monteret, jeg 

00:16:19.259 --> 00:16:24.279
 kan ikke få adgang til disse filer 

00:16:22.199 --> 00:16:25.929
 der er en anden ting, som jeg kan gøre 

00:16:24.279 --> 00:16:29.799
 hvilket er meget nyttigt, fordi hvad 

00:16:25.929 --> 00:16:33.279
 kan ske, lad os afmontere SD SD så 

00:16:29.799 --> 00:16:35.410
 nu er det ikke monteret okay SD være en, hvis jeg 

00:16:33.279 --> 00:16:38.319
 se nu, hvad der kan ske, er at jeg skal 

00:16:35.410 --> 00:16:41.230
 touch test - ok, så nu er der en fil 

00:16:38.319 --> 00:16:42.819
 kaldte test2 nu, hvis jeg går tilbage, og jeg ville 

00:16:41.230 --> 00:16:44.220
 kør min mount kommandoklasse hvad der kan 

00:16:42.819 --> 00:16:46.869
 ske 

00:16:44.220 --> 00:16:52.600
 bemærker du okay, så test to er der 

00:16:46.869 --> 00:16:55.329
 lige nu gå ind i SD b1 og lav en LS og 

00:16:52.600 --> 00:16:59.049
 det er test godt, hvor pokker testede 

00:16:55.329 --> 00:17:03.220
 at gå Jeg har mistet min fil nej jeg ikke har 

00:16:59.049 --> 00:17:05.260
 fordi test 2 var på SDA, fordi det 

00:17:03.220 --> 00:17:07.329
 var ikke monteret, så nu bliver jeg forvirret 

00:17:05.260 --> 00:17:10.809
 det var her jeg var, da jeg bare var en 

00:17:07.329 --> 00:17:13.689
 rookie Linux-bruger, fordi hvis det ikke var 

00:17:10.809 --> 00:17:15.429
 monteret, eller hvis jeg har glemt at montere mit drev 

00:17:13.689 --> 00:17:17.350
 eller hvis jeg ikke monterede det korrekt eller jeg 

00:17:15.429 --> 00:17:21.160
 satte det, jeg monterede på det forkerte sted 

00:17:17.350 --> 00:17:22.390
 Jeg satte filer på monteringspunktet uden montering 

00:17:21.160 --> 00:17:24.460
 så de ikke ville ende med min eksterne 

00:17:22.390 --> 00:17:27.190
 kør så hvorfor betyder det noget 

00:17:24.460 --> 00:17:30.640
 hvad hvis jeg kørte en sikkerhedskopi, hvad hvis jeg var 

00:17:27.190 --> 00:17:34.420
 sikkerhedskopiering af min sd et drev til min ex Tim er 

00:17:30.640 --> 00:17:37.270
 db1 men det var ikke monteret, ville jeg 

00:17:34.420 --> 00:17:41.020
 kopierer faktisk filerne fra min sd 

00:17:37.270 --> 00:17:42.820
 a til min sd den samme harddisk så da 

00:17:41.020 --> 00:17:45.040
 at harddisken går ned i min sikkerhedskopi 

00:17:42.820 --> 00:17:49.000
 nytteløst absolut nytteløst 

00:17:45.040 --> 00:17:52.810
 så hvordan kan jeg ordne det godt, hvis jeg afmonterer 

00:17:49.000 --> 00:17:55.530
 det drev, så du monterer SD b1 fordi 

00:17:52.810 --> 00:17:59.590
 Jeg er i monteringsmappen, gå tilbage derinde 

00:17:55.530 --> 00:18:05.230
 Jeg fjerner test2 og går nu tilbage 

00:17:59.590 --> 00:18:09.400
 og se nu dette skrav CH attr plus 

00:18:05.230 --> 00:18:13.360
 Jeg det betyder at gøre det uforanderligt gøre det 

00:18:09.400 --> 00:18:17.710
 så det ikke kan skrives til og derefter 

00:18:13.360 --> 00:18:20.980
 SD b1 okay så nu hvis jeg går ind i stb-1 og 

00:18:17.710 --> 00:18:23.500
 Jeg prøver igen at røre test 2, det siger nej 

00:18:20.980 --> 00:18:25.480
 sådan fil eller bibliotek hvad er det godt jeg 

00:18:23.500 --> 00:18:29.200
 ved, at der er en fil i det bibliotek 

00:18:25.480 --> 00:18:30.880
 hvorfor kan jeg ikke røre ved min fil åh, det har jeg ikke 

00:18:29.200 --> 00:18:33.430
 haug i mit bibliotek endnu har jeg ikke 

00:18:30.880 --> 00:18:36.790
 monterede mit mit drev, så det er vigtigt at 

00:18:33.430 --> 00:18:40.030
 gør det, for nu kan jeg ikke skrive 

00:18:36.790 --> 00:18:41.920
 noget til monteringspunktet, så nu er det 

00:18:40.030 --> 00:18:45.460
 fungerer kun min sikkerhedskopi 

00:18:41.920 --> 00:18:47.890
 funktion, hvis holderen, hvis drevet er i 

00:18:45.460 --> 00:18:49.600
 Faktisk monteret, så lad os hoppe tilbage her nu 

00:18:47.890 --> 00:18:52.870
 at det er uforanderligt kan jeg ikke gøre noget 

00:18:49.600 --> 00:18:55.240
 her kan jeg ikke lave et katalog her inde 

00:18:52.870 --> 00:18:57.220
 vil sige operation ikke tillade at det går op a 

00:18:55.240 --> 00:18:59.200
 mappe, og lad os nu køre vores mount 

00:18:57.220 --> 00:19:00.960
 kommandoen igen, så jeg skubber kontrol R 

00:18:59.200 --> 00:19:04.270
 for at kunne gå tilbage i min historie og 

00:19:00.960 --> 00:19:06.040
 nu, hvis jeg bemærker, at det monterede helt fint nu 

00:19:04.270 --> 00:19:08.530
 Jeg går tilbage til stb-1 

00:19:06.040 --> 00:19:12.640
 og jeg ser nu min testfil 

00:19:08.530 --> 00:19:16.330
 lad os prøve at røre test for at røre ved jeg ikke 

00:19:12.640 --> 00:19:18.790
 skriv og snak test to der går vi så 

00:19:16.330 --> 00:19:21.820
 nu bemærker du, at det virkede fordi 

00:19:18.790 --> 00:19:24.730
 det er monteret i orden, så det er faktisk 

00:19:21.820 --> 00:19:27.160
 stb-1 den eksterne harddisk nu 

00:19:24.730 --> 00:19:29.710
 og hvis du ikke er sikker på, om det er monteret 

00:19:27.160 --> 00:19:30.700
 se dette montering, det giver mig en liste over 

00:19:29.710 --> 00:19:32.790
 alle drev, der er monteret godt 

00:19:30.700 --> 00:19:37.000
 det er en hel masse cruft så monter 

00:19:32.790 --> 00:19:39.220
 pipe grep SD være en der bare giver mig 

00:19:37.000 --> 00:19:42.960
 den ene linje, der viser stb-1, så dette 

00:19:39.220 --> 00:19:44.170
 viser mig, at dev stb-1 er monteret på 

00:19:42.960 --> 00:19:46.450
 / mnt 

00:19:44.170 --> 00:19:49.510
 skære SDP en godt, hvad der sker hvis jeg 

00:19:46.450 --> 00:19:52.600
 afmonter det og kør nøjagtigt det samme 

00:19:49.510 --> 00:19:55.330
 kommando ingen output, fordi det ikke er 

00:19:52.600 --> 00:19:58.390
 er i øjeblikket monteret, så jeg ved, at jeg skal 

00:19:55.330 --> 00:20:02.050
 monter det gør det igen 

00:19:58.390 --> 00:20:04.720
 der går vi nu og kører den kommando, hvad så 

00:20:02.050 --> 00:20:06.460
 gør den det er dets montering, der giver 

00:20:04.720 --> 00:20:09.040
 mig et output af alle monterede ting 

00:20:06.460 --> 00:20:10.870
 rigtigt, men så griber jeg, hvilket er 

00:20:09.040 --> 00:20:14.050
 dybest set Linux-ækvivalenten til hey 

00:20:10.870 --> 00:20:15.640
 søg, at output for denne SD være 1 og 

00:20:14.050 --> 00:20:17.380
 ramte Enter, og det kunne være noget jeg 

00:20:15.640 --> 00:20:18.880
 kunne søge efter dev, og det vil give mig 

00:20:17.380 --> 00:20:20.890
 alt, hvad der indeholder ordet dev 

00:20:18.880 --> 00:20:23.440
 godt nej, jeg har ikke brug for det, jeg bare vil have 

00:20:20.890 --> 00:20:24.910
 SDP en, og det giver mig, og det er en 

00:20:23.440 --> 00:20:26.440
 lidt rodet, når jeg har det som 

00:20:24.910 --> 00:20:29.770
 at men der går du, så du kan se 

00:20:26.440 --> 00:20:33.340
 at jeg har dev DB på MN t / stb-1 

00:20:29.770 --> 00:20:35.830
 og typen er XFS, der er min fil 

00:20:33.340 --> 00:20:39.480
 og det er klar til at gå, så jeg har mit 

00:20:35.830 --> 00:20:41.650
 første kørsel klar til at gå i min Nass 

00:20:39.480 --> 00:20:44.620
 det andet drev bliver nøjagtigt 

00:20:41.650 --> 00:20:46.420
 det samme, bortset fra at vi ved, at det er min SDC 

00:20:44.620 --> 00:20:49.840
 du går gennem de samme trin i rækkefølge 

00:20:46.420 --> 00:20:54.190
 at oprette det nu, fordi dette ikke er et 

00:20:49.840 --> 00:20:56.500
 raid enhed Jeg kan sætte i 4 terabyte drev 

00:20:54.190 --> 00:20:58.740
 Jeg har mine 2 4 terabyte drev, jeg kan også 

00:20:56.500 --> 00:21:02.320
 læg en 1 terabyte i tillæg til det 

00:20:58.740 --> 00:21:05.560
 og jeg kan lægge 500 gig, så jeg kan bruge det 

00:21:02.320 --> 00:21:10.780
 en blanding af drev, og det vil hver enkelt 

00:21:05.560 --> 00:21:15.070
 vil dukke op som s TB SDC s de D 

00:21:10.780 --> 00:21:17.620
 og E og og så får du det 

00:21:15.070 --> 00:21:20.290
 adgang til hver af dem nu med et raid 

00:21:17.620 --> 00:21:21.730
 selvfølgelig, hvis du skulle fire terabyte 

00:21:20.290 --> 00:21:22.870
 godt du kunne indstille dem som et raid 1 

00:21:21.730 --> 00:21:24.910
 men så hvis du havde en terabyte 

00:21:22.870 --> 00:21:26.710
 nok og en 500 gigabyte, du ikke kunne 

00:21:24.910 --> 00:21:29.350
 virkelig forbinde dem sammen og bruge 

00:21:26.710 --> 00:21:31.630
 dem, hvad vi skal gøre over 

00:21:29.350 --> 00:21:34.360
 løbet af denne serie er, at vi skal 

00:21:31.630 --> 00:21:37.989
 demonstrere, hvordan vi rent faktisk kan bruge 

00:21:34.360 --> 00:21:40.929
 denne enhed eller en enhed der ligner denne 

00:21:37.989 --> 00:21:44.679
 for at oprette arrays ved hjælp af Linux 

00:21:40.929 --> 00:21:46.570
 værktøjer, der giver mig mulighed for at blande 

00:21:44.679 --> 00:21:48.879
 drev for at være i stand til at skabe redundans 

00:21:46.570 --> 00:21:51.009
 vi skaber alle slags 

00:21:48.879 --> 00:21:53.470
 virkelig seje ting, så du kan 

00:21:51.009 --> 00:21:55.269
 forstå det underliggende filsystem 

00:21:53.470 --> 00:21:57.039
 idiosynkrasier, og jeg tænker selv i aften 

00:21:55.269 --> 00:21:58.600
 du har måske lært et par ting 

00:21:57.039 --> 00:22:00.519
 venligst kommentar nedenfor, lad mig vide hvad 

00:21:58.600 --> 00:22:03.129
 du lærte her, og og hvis noget 

00:22:00.519 --> 00:22:06.700
 er af særlig interesse, som jeg har 

00:22:03.129 --> 00:22:07.690
 talte om i aften og og gennem 

00:22:06.700 --> 00:22:09.279
 i løbet af serien, vi bliver 

00:22:07.690 --> 00:22:12.970
 at lære alle slags ting som det 

00:22:09.279 --> 00:22:15.489
 de små pyntegjenstander bag lignende 

00:22:12.970 --> 00:22:19.509
 UI, som vi er vant til, som vi måske 

00:22:15.489 --> 00:22:21.849
 installere som en grænseflade på vores Nass 

00:22:19.509 --> 00:22:23.139
 enhed og alt, hvad vi nogensinde ser, er internettet 

00:22:21.849 --> 00:22:24.489
 interface så skal vi arbejde 

00:22:23.139 --> 00:22:26.830
 under hætten, så vi forstår hvordan 

00:22:24.489 --> 00:22:29.139
 det hele fungerer og at sikre vores data 

00:22:26.830 --> 00:22:32.019
 så det er temmelig sejt hey, vi er nødt til 

00:22:29.139 --> 00:22:34.769
 tage en virkelig hurtig pause Jeg har ret 

00:22:32.019 --> 00:22:34.769
 rygstok rundt 

00:22:34.960 --> 00:22:42.739
 [Musik] 

00:22:48.370 --> 00:22:51.500
 [Musik] 

00:22:52.499 --> 00:22:58.419
 velkommen tilbage dette er kategori fem 

00:22:54.820 --> 00:22:59.619
 teknologi-tv nu er vores udsendelse live 

00:22:58.419 --> 00:23:01.149
 selvom du ser på det 

00:22:59.619 --> 00:23:04.330
 kræver, at vi har nogle spørgsmål, der kommer 

00:23:01.149 --> 00:23:06.759
 ind i vores uenighed chat første spørgsmål 

00:23:04.330 --> 00:23:08.919
 kommer fra Marsh mand spørger ok, hvordan har jeg det 

00:23:06.759 --> 00:23:10.389
 bærbar computer, som jeg demonstrerer på connect 

00:23:08.919 --> 00:23:11.589
 det til NASA nu nævnte jeg det på 

00:23:10.389 --> 00:23:14.229
 toppen af ​​showet, men du har måske ikke det 

00:23:11.589 --> 00:23:16.119
 fangede det fangede det, og jeg skal bare 

00:23:14.229 --> 00:23:17.320
 sluk for dette, fordi jeg har afmonteret 

00:23:16.119 --> 00:23:18.639
 det med kommandoen du monterer, så det er jeg 

00:23:17.320 --> 00:23:20.229
 vil bare holde den tænd / sluk-knap inde 

00:23:18.639 --> 00:23:21.579
 Sluk for disse drev, så jeg kan trygt 

00:23:20.229 --> 00:23:23.619
 flyt det der, det går 

00:23:21.579 --> 00:23:24.940
 husk, at det drejer sig om drev 

00:23:23.619 --> 00:23:26.109
 du vil ikke flytte dette mens 

00:23:24.940 --> 00:23:27.969
 de roterer, fordi du kan 

00:23:26.109 --> 00:23:30.070
 faktisk forårsager skade på det fysiske 

00:23:27.969 --> 00:23:32.139
 plader på drevet der er nåle 

00:23:30.070 --> 00:23:33.969
 dybest set skal vi kalde dem tænke på 

00:23:32.139 --> 00:23:37.299
 en gammel plade lige som en pladespiller 

00:23:33.969 --> 00:23:39.249
 LPS, du har hoveder, der svæver på en 

00:23:37.299 --> 00:23:41.919
 meget lille pude af luft over toppen af 

00:23:39.249 --> 00:23:44.739
 meget følsomme magnetiske plader så hvis jeg 

00:23:41.919 --> 00:23:48.579
 flyt dette, mens det er tændt for dem 

00:23:44.739 --> 00:23:52.509
 plader bevæger sig med 7.200 rotationer 

00:23:48.579 --> 00:23:54.389
 pr. minut, og så hvis jeg flytter det i en sådan 

00:23:52.509 --> 00:23:57.940
 måde, hvorpå hovedet berører fadet 

00:23:54.389 --> 00:24:00.279
 ridse datatab mulig harddisk 

00:23:57.940 --> 00:24:03.129
 fiasko, så jeg slukker altid for dette 

00:24:00.279 --> 00:24:07.179
 før jeg flytter det, hvordan forbinder jeg det 

00:24:03.129 --> 00:24:10.179
 Jeg tager bare strømmen ud her 

00:24:07.179 --> 00:24:14.559
 er bagsiden af ​​enheden og alt hvad jeg har 

00:24:10.179 --> 00:24:18.549
 er et USBC-kabel okay, så det er hvad det er 

00:24:14.559 --> 00:24:22.089
 er i denne ende nu på den bærbare ende jeg 

00:24:18.549 --> 00:24:24.369
 bare koble fra at her er dette 

00:24:22.089 --> 00:24:27.999
 anden ende af det samme kabel, så det har jeg 

00:24:24.369 --> 00:24:30.789
 USB C og jeg har USB a så dette tillader 

00:24:27.999 --> 00:24:35.859
 mig til at tilslutte den til en bærbar computer eller andet 

00:24:30.789 --> 00:24:37.989
 USB 3.0-enhed, så det er min Odroid xu4 

00:24:35.859 --> 00:24:41.259
 det er det, vi håber at opnå 

00:24:37.989 --> 00:24:43.359
 gennem dette projekt 

00:24:41.259 --> 00:24:44.529
 er faktisk at tvinge dette fra en enkelt 

00:24:43.359 --> 00:24:46.749
 board computer den grund, jeg har 

00:24:44.529 --> 00:24:47.800
 valgt xu4 er fordi den understøtter 

00:24:46.749 --> 00:24:50.320
 du asp 

00:24:47.800 --> 00:24:52.360
 det er USB-vedhæftet uklar protokol 

00:24:50.320 --> 00:24:55.840
 hvilket betyder, at det vil være i stand til at få 

00:24:52.360 --> 00:24:59.200
 fem gigabits pr. sekund dataoverførsel 

00:24:55.840 --> 00:25:01.240
 til enheden i modsætning til standard USB er det 

00:24:59.200 --> 00:25:03.970
 vil være meget hurtigere, du ser på 

00:25:01.240 --> 00:25:05.830
 en rimelig procentdel mere, så det er sådan 

00:25:03.970 --> 00:25:07.180
 Jeg var tilsluttet dette var ikke en ssh 

00:25:05.830 --> 00:25:10.390
 forbindelse eller noget lignende som dette 

00:25:07.180 --> 00:25:13.840
 var en direkte USB-forbindelse nøjagtigt som 

00:25:10.390 --> 00:25:16.060
 det vil være med vores Odroid xu af grund 

00:25:13.840 --> 00:25:17.620
 Jeg ser ikke på det på og Odroid xu 

00:25:16.060 --> 00:25:20.380
 for i aften, og jeg gør faktisk dette 

00:25:17.620 --> 00:25:23.250
 at bruge min bærbare computer er strengt for skyld 

00:25:20.380 --> 00:25:26.500
 af demonstrationen er dette en serie af 

00:25:23.250 --> 00:25:29.410
 af demonstrationer og projekter, der er 

00:25:26.500 --> 00:25:33.160
 vil føre til vores mine røv så 

00:25:29.410 --> 00:25:36.820
 cat five dot TV / - er hvor det hele er 

00:25:33.160 --> 00:25:39.550
 kommer til at komme sammen, men Xu 4 er 

00:25:36.820 --> 00:25:41.620
 vil være et af trinnene i 

00:25:39.550 --> 00:25:42.760
 proces med at oprette denne enhed, men jeg 

00:25:41.620 --> 00:25:45.220
 ville vise dig den slags 

00:25:42.760 --> 00:25:46.720
 underliggende vi, at vi bliver 

00:25:45.220 --> 00:25:49.600
 sætter tingene op, og det vil jeg gerne 

00:25:46.720 --> 00:25:51.400
 lære hvordan nogle af disse små 

00:25:49.600 --> 00:25:52.660
 Linux-kommandoer fungerer i terminalen som 

00:25:51.400 --> 00:25:54.520
 godt, fordi alt bliver gjort 

00:25:52.660 --> 00:25:58.510
 i terminalen eventuelle andre spørgsmål til 

00:25:54.520 --> 00:26:01.570
 os bp9 du er meget velkommen foo 

00:25:58.510 --> 00:26:03.940
 kalder dette - ja lige nu i dette 

00:26:01.570 --> 00:26:08.440
 øjeblikkelig dette i dette tilfælde dette er 

00:26:03.940 --> 00:26:10.600
 direkte vedhæftet opbevaring ideen er, at 

00:26:08.440 --> 00:26:14.710
 vi tager denne enhed og 

00:26:10.600 --> 00:26:17.800
 forvandle det til en pseudo nas eller sikkerhedskopi 

00:26:14.710 --> 00:26:20.290
 system ved hjælp af en Xu 4, så Xu 4 er 

00:26:17.800 --> 00:26:21.820
 vil blive hjernen i dette og 

00:26:20.290 --> 00:26:24.430
 så vil jeg kunne få adgang til det 

00:26:21.820 --> 00:26:25.930
 som netværkstilknyttet opbevaring, så det er jeg ikke 

00:26:24.430 --> 00:26:27.820
 bliver nødt til at tilslutte det til min bærbare computer 

00:26:25.930 --> 00:26:31.240
 ved jeg vil have adgang til det 

00:26:27.820 --> 00:26:33.010
 via Wi-Fi gennem Ethernet og dem 

00:26:31.240 --> 00:26:34.870
 slags ting savnede jeg andre 

00:26:33.010 --> 00:26:37.170
 spørgsmål nu, jeg ser på chatrummet 

00:26:34.870 --> 00:26:40.150
 på min telefon, og så er skærmen 

00:26:37.170 --> 00:26:42.400
 relativt lille, og hvis tingene gør 

00:26:40.150 --> 00:26:44.560
 har tendens til at slags flyve ved skærmen, så hvis 

00:26:42.400 --> 00:26:46.240
 der er andre spørgsmål om 

00:26:44.560 --> 00:26:50.020
 projekt eller hvad jeg underviser her 

00:26:46.240 --> 00:26:53.500
 i aften er jeg vid åben, fantastisk at se 

00:26:50.020 --> 00:26:56.590
 alle her og værdsætter, at du er 

00:26:53.500 --> 00:27:02.170
 her tror jeg, at det virkelig var 

00:26:56.590 --> 00:27:04.240
 det vigtigste spørgsmål jeg bp9 ja okay så du 

00:27:02.170 --> 00:27:06.670
 få det nu undrende, hvordan jeg var i stand til det 

00:27:04.240 --> 00:27:08.740
 forbind direkte til NASS-enheden 

00:27:06.670 --> 00:27:10.810
 fordi det ikke er en røv og præcis som 

00:27:08.740 --> 00:27:12.880
 foo siger, at det er direkte knyttet 

00:27:10.810 --> 00:27:15.580
 opbevaring i dette tilfælde, det er alt 

00:27:12.880 --> 00:27:17.140
 vil ændre sig, og hvis 

00:27:15.580 --> 00:27:19.810
 du er ikke bekendt med et X dig for Oh 

00:27:17.140 --> 00:27:21.760
 Droid X dig for det er en mikrocomputer så 

00:27:19.810 --> 00:27:23.770
 tænk på en Raspberry Pi, det er en meget meget 

00:27:21.760 --> 00:27:26.710
 lille computer passer i højre lomme 

00:27:23.770 --> 00:27:29.410
 her skulle jeg ønske, at jeg havde det med mig, men der var jeg 

00:27:26.710 --> 00:27:31.870
 faktisk hvis du kan undskylde mig for en 

00:27:29.410 --> 00:27:35.320
 øjeblikket jeg kan gribe en jeg har en bare 

00:27:31.870 --> 00:27:39.010
 Fra sættet her her går vi så dette er en 

00:27:35.320 --> 00:27:40.390
 ingen droid Xu for Q og Q står for 

00:27:39.010 --> 00:27:43.750
 stille, fordi det har denne enorme 

00:27:40.390 --> 00:27:46.720
 køleplade, så det er det bræt, der er 

00:27:43.750 --> 00:27:49.000
 kommer til at tænde vores Nass-enhed, så hvornår 

00:27:46.720 --> 00:27:51.580
 dette bliver en røv, dette bliver 

00:27:49.000 --> 00:27:54.310
 computeren de hjerner, der kommer til 

00:27:51.580 --> 00:27:57.400
 magt det har Debian Linux Debian 10 

00:27:54.310 --> 00:27:59.560
 her på en micro SD lige nu 

00:27:57.400 --> 00:28:01.660
 vil være på emmc og så skal vi 

00:27:59.560 --> 00:28:04.960
 være ved at opsætte en eller anden form for montering i 

00:28:01.660 --> 00:28:07.840
 for at skjule dette på en sådan måde, at 

00:28:04.960 --> 00:28:09.340
 det vil være en del af selve enheden 

00:28:07.840 --> 00:28:12.490
 og noget, vi bare kan lægge i 

00:28:09.340 --> 00:28:14.110
 et værelse i det, du ved, om du har et 

00:28:12.490 --> 00:28:15.640
 skab eller noget, du kan indstille 

00:28:14.110 --> 00:28:18.400
 det op og bare køre et Ethernet-kabel 

00:28:15.640 --> 00:28:20.290
 til dette, der har Gigabit Ethernet, det er 

00:28:18.400 --> 00:28:21.730
 vil give dig fuld adgang til alle 

00:28:20.290 --> 00:28:23.560
 filer og lav dine sikkerhedskopier og 

00:28:21.730 --> 00:28:27.610
 alt andet så okay tak for 

00:28:23.560 --> 00:28:29.230
 de spørgsmål alle er velkomne 

00:28:27.610 --> 00:28:33.130
 velkommen dine spørgsmål, du kan e-maile 

00:28:29.230 --> 00:28:35.820
 lever i kategori-fem-dot tv, hvis du 

00:28:33.130 --> 00:28:35.820
 har længere 

