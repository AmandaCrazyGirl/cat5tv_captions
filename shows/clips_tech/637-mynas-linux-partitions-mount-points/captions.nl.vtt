WEBVTT
Kind: captions
Language: nl

00:00:02.179 --> 00:00:09.389
 in de afgelopen paar weken heb ik en de 

00:00:05.549 --> 00:00:12.750
 team hebben gesproken over onze wat 

00:00:09.389 --> 00:00:17.580
 we gaan die van mij je kont van mij noemen 

00:00:12.750 --> 00:00:18.990
 kont maar Kat vijf punt TV / - is waar ik ben 

00:00:17.580 --> 00:00:20.760
 Ik ga alle links voor de producten plaatsen 

00:00:18.990 --> 00:00:23.460
 dat we gaan kijken naar de 

00:00:20.760 --> 00:00:26.220
 discussie is rond de 

00:00:23.460 --> 00:00:29.550
 beslissing oke nou gaan we met USB 3.0 

00:00:26.220 --> 00:00:30.900
 zodat we ook de eSATA-poort kunnen krijgen 

00:00:29.550 --> 00:00:32.520
 wat ons maximaal zes geeft 

00:00:30.900 --> 00:00:38.250
 gigabits per seconde of gaan we rechtdoor 

00:00:32.520 --> 00:00:41.399
 naar USB 3.1 Rev - wat theoretisch kan 

00:00:38.250 --> 00:00:44.219
 kan ons tot 10 gigabit per seconde opleveren 

00:00:41.399 --> 00:00:45.570
 dat is echter het enige voorbehoud 

00:00:44.219 --> 00:00:47.850
 dat het apparaat dat we gaan worden 

00:00:45.570 --> 00:00:50.700
 aansluiten op - wat een vreemde roid xu4 is 

00:00:47.850 --> 00:00:54.090
 single board computer is alleen in staat 

00:00:50.700 --> 00:00:56.760
 USB 3.0 met je ASP dus dat wordt het 

00:00:54.090 --> 00:00:58.680
 vijf gigabits per seconde, dat is veel 

00:00:56.760 --> 00:01:00.570
 nummers worden weggegooid bij ja het is een 

00:00:58.680 --> 00:01:02.969
 veel nummers voor oude robbie 

00:01:00.570 --> 00:01:05.700
 onthoud in dit kale hoofd dat het maar het is 

00:01:02.969 --> 00:01:08.189
 alles is logisch voor mij de beslissing was 

00:01:05.700 --> 00:01:10.619
 gemaakt om in de toekomst klaar te zijn en te gaan 

00:01:08.189 --> 00:01:15.570
 met USB 3.1 Rev - dat zullen we zijn 

00:01:10.619 --> 00:01:18.390
 om vijf uur toegang hebben tot onze Nass-eenheid 

00:01:15.570 --> 00:01:21.360
 gigabits per seconde vanaf de van de 

00:01:18.390 --> 00:01:24.420
 Odroid xu4 maar houd rekening met onze 

00:01:21.360 --> 00:01:26.159
 connectiviteit met onze Nass wordt 

00:01:24.420 --> 00:01:27.900
 toch gebaseerd op Gigabit Ethernet 

00:01:26.159 --> 00:01:31.680
 omdat de Ethernet-poort op dat bord 

00:01:27.900 --> 00:01:35.210
 is is duizend megabits per seconde of 

00:01:31.680 --> 00:01:37.409
 wat dan ook, hoewel ik het leuk kan vinden 

00:01:35.210 --> 00:01:39.780
 om vijf uur communiceren met de schijven 

00:01:37.409 --> 00:01:41.939
 gigabits een seconde de communicatie dan 

00:01:39.780 --> 00:01:45.229
 naar de xu4 wordt er slechts één 

00:01:41.939 --> 00:01:47.820
 gigabit een seconde dus de theoretische 

00:01:45.229 --> 00:01:52.200
 gevolg daarvan is dat de communicatie 

00:01:47.820 --> 00:01:54.930
 tussen de hersenen van onze Nass is nog steeds 

00:01:52.200 --> 00:01:58.049
 wordt vijf keer zo snel als onze 

00:01:54.930 --> 00:02:02.420
 werkelijke doorvoer daarnaar - en van 

00:01:58.049 --> 00:02:08.369
 die leuke eenheid zelf, dus ik heb dit 

00:02:02.420 --> 00:02:11.310
 dit apparaat op cat5 dot TV / 

00:02:08.369 --> 00:02:13.020
 mijn Nass en laten we het snel bekijken 

00:02:11.310 --> 00:02:15.600
 nu heb ik de schijven gezet die ik er twee heb gezet 

00:02:13.020 --> 00:02:18.750
 rijdt hier duidelijk niet erg stabiel 

00:02:15.600 --> 00:02:21.000
 Daar zal ik binnen een seconde aan werken 

00:02:18.750 --> 00:02:23.910
 deze man viel er gewoon uit, dat is goed 

00:02:21.000 --> 00:02:25.920
 oke dus ik heb twee 4 terabyte drives 

00:02:23.910 --> 00:02:27.360
 die gewoon zijn aangesloten op de 

00:02:25.920 --> 00:02:28.410
 back backplane omdat ik gewoon aardig was 

00:02:27.360 --> 00:02:31.290
 om hier net eerder mee te spelen 

00:02:28.410 --> 00:02:34.200
 de show om te zien hoe het werkte en ik 

00:02:31.290 --> 00:02:35.670
 ik heb het zelfs niet echt aangezet 

00:02:34.200 --> 00:02:37.860
 wilde zien dat ik deze kon aansluiten 

00:02:35.670 --> 00:02:41.490
 rijdt in en zie hoe ze verbinding maken dus ik 

00:02:37.860 --> 00:02:45.510
 heb twee 4 terabyte drives van mijn oude 

00:02:41.490 --> 00:02:48.060
 back-upeenheid en het idee hierachter is 

00:02:45.510 --> 00:02:51.390
 Ik ga dit apparaat kunnen gebruiken 

00:02:48.060 --> 00:02:54.060
 als in feite gewoon meerdere schijven 

00:02:51.390 --> 00:02:57.330
 aangesloten op mijn computer, dus dit is een 

00:02:54.060 --> 00:02:59.580
 ezel bevat een ezelbijlage dit is een 

00:02:57.330 --> 00:03:01.050
 harde schijf behuizing is er een grote 

00:02:59.580 --> 00:03:02.490
 verschil wanneer u rond winkelt 

00:03:01.050 --> 00:03:05.910
 voor dit soort dingen, dus houd dit 

00:03:02.490 --> 00:03:09.120
 in gedachten wat we hebben gekozen voor wat ik heb gekozen 

00:03:05.910 --> 00:03:12.300
 want is geen ezel-eenheid, dat is niet wat 

00:03:09.120 --> 00:03:15.360
 we willen we willen een apparaat dat me geeft 

00:03:12.300 --> 00:03:19.980
 toegang tot deze schijven als externe harde schijf 

00:03:15.360 --> 00:03:22.590
 schijven, dus dit heeft vier SATA-achtervlakken 

00:03:19.980 --> 00:03:26.880
 de backplane neemt maximaal vier SATA in beslag 

00:03:22.590 --> 00:03:30.810
 rijdt en daarmee ga ik het zien 

00:03:26.880 --> 00:03:33.330
 vier nieuwe harde schijven net alsof ik 

00:03:30.810 --> 00:03:36.030
 aangesloten op een externe USB-harde schijf 

00:03:33.330 --> 00:03:39.239
 mijn computer, dat is de theorie erachter 

00:03:36.030 --> 00:03:41.940
 dus er gebeurt hier geen overval 

00:03:39.239 --> 00:03:44.880
 er is geen spiegeling, er is niets 

00:03:41.940 --> 00:03:48.390
 het zijn slechts vier schijven verbonden met mijn 

00:03:44.880 --> 00:03:50.970
 Linux machine de xu4 dus gebruik dan de 

00:03:48.390 --> 00:03:53.400
 geweldige software die wordt geleverd met Linux 

00:03:50.970 --> 00:03:55.590
 Ik zal het kunnen omdat Linux dat is 

00:03:53.400 --> 00:03:57.540
 zoals het besturingssysteem van de server, dat gaan we doen 

00:03:55.590 --> 00:04:00.390
 leer deze week en we hebben geleerd van 

00:03:57.540 --> 00:04:03.180
 de top500 die net als Linux is waar het is 

00:04:00.390 --> 00:04:05.549
 voor servers dus omdat ze dat gaan doen 

00:04:03.180 --> 00:04:08.730
 worden weergegeven als voor individuele SATA 

00:04:05.549 --> 00:04:10.200
 externe harde schijven Ik kan doen wat ik ook doe 

00:04:08.730 --> 00:04:13.320
 willen met hen, dus we gaan spelen 

00:04:10.200 --> 00:04:15.239
 rond met spiegelende arrays 

00:04:13.320 --> 00:04:17.250
 we gaan alle bekijken 

00:04:15.239 --> 00:04:19.410
 verschillende dingen die we kunnen doen, maar dit 

00:04:17.250 --> 00:04:20.310
 apparaat duurt maximaal vier Drive, dus wij 

00:04:19.410 --> 00:04:23.400
 kan beslissen 

00:04:20.310 --> 00:04:25.020
 hoe we de gegevens willen segmenteren 

00:04:23.400 --> 00:04:26.040
 die vier schijven heb ik net twee 

00:04:25.020 --> 00:04:29.040
 rijdt ter wille van de demonstratie 

00:04:26.040 --> 00:04:33.270
 vandaag en zo ziet het eruit 

00:04:29.040 --> 00:04:37.050
 daar hebben we het en het is gewoon een 

00:04:33.270 --> 00:04:40.230
 erg basic SATA-achtervlak dat me dat geeft 

00:04:37.050 --> 00:04:42.389
 toegang tot deze schijven voor zover 

00:04:40.230 --> 00:04:44.310
 montage gaat er is echt geen er is 

00:04:42.389 --> 00:04:46.350
 geen schijfladen of iets dergelijks 

00:04:44.310 --> 00:04:48.330
 dat er deze kleine plastic jongens zijn 

00:04:46.350 --> 00:04:50.070
 die aan de voorkant van de gaan 

00:04:48.330 --> 00:04:52.350
 rijden die het maar een klein beetje geeft 

00:04:50.070 --> 00:04:55.669
 meer druk om het naar achteren te duwen 

00:04:52.350 --> 00:05:00.060
 vliegtuig dus deze gaan gewoon zo naar binnen 

00:04:55.669 --> 00:05:02.280
 rijd nummer één en dat knijpt goed 

00:05:00.060 --> 00:05:04.320
 in het achterste vliegtuig rijden nummer twee 

00:05:02.280 --> 00:05:09.120
 beide vier terabytes alleen omdat deze 

00:05:04.320 --> 00:05:11.960
 zijn polen van mijn mijn oude back-up zie hier 

00:05:09.120 --> 00:05:15.750
 je kunt dat beter zien dan ik en 

00:05:11.960 --> 00:05:17.729
 daar gaan we meteen naar binnen en dan 

00:05:15.750 --> 00:05:26.340
 deze kerel hier gaat gewoon door 

00:05:17.729 --> 00:05:30.180
 top en clip in zoals ik denk dat ik heb 

00:05:26.340 --> 00:05:31.770
 kreeg bijna dat het in elk geval vastklikt en 

00:05:30.180 --> 00:05:32.070
 dan doe je de deur dicht en ben je goed 

00:05:31.770 --> 00:05:33.600
 gaan 

00:05:32.070 --> 00:05:36.150
 dus moeten we het aansteken en gewoon een beetje 

00:05:33.600 --> 00:05:38.280
 zie hoe dit op ons zal verschijnen 

00:05:36.150 --> 00:05:41.669
 computer Ik heb mijn laptop hier en 

00:05:38.280 --> 00:05:45.229
 wat ik ga doen, laten we het snel laten doen 

00:05:41.669 --> 00:05:48.570
 zoom eerst in en doe een LS slash 

00:05:45.229 --> 00:05:50.220
 dev slash SD-ster die ik gewoon wil zien 

00:05:48.570 --> 00:05:54.150
 wat is er dus ik heb er maar één moeilijk 

00:05:50.220 --> 00:05:57.120
 rijden in mijn laptop en dat is mijn SD a 

00:05:54.150 --> 00:05:58.650
 laten we ook naar voren brengen. Ik ga uitzoomen 

00:05:57.120 --> 00:06:01.860
 hier een klein beetje en ik ga opvoeden 

00:05:58.650 --> 00:06:03.660
 G Deel II D alleen zodat we een kunnen krijgen 

00:06:01.860 --> 00:06:06.389
 kijk hoe dit eruit gaat zien 

00:06:03.660 --> 00:06:09.210
 zover de harde schijven gaan, dus daar is mijn 

00:06:06.389 --> 00:06:12.690
 SD a en dat is de enige harde schijf 

00:06:09.210 --> 00:06:14.930
 beschikbaar in mijn computer om hem van stroom te voorzien 

00:06:12.690 --> 00:06:20.250
 er is alleen een aan / uit-knop hier en 

00:06:14.930 --> 00:06:26.010
 wat ik heb is dat ik USB 3.1 een USB C heb 

00:06:20.250 --> 00:06:28.289
 op een USB-standaard een kabel om aan te sluiten 

00:06:26.010 --> 00:06:29.729
 mijn laptop en dat is hetzelfde deel van 

00:06:28.289 --> 00:06:31.820
 mij dezelfde kabel die ik ga gebruiken 

00:06:29.729 --> 00:06:34.370
 verbind het met mijn 

00:06:31.820 --> 00:06:36.680
 in mijn ex - jij hoorde nu net een 

00:06:34.370 --> 00:06:38.000
 ding op mijn laptop dus laten we eens kijken wat 

00:06:36.680 --> 00:06:40.850
 wat is hier aan de hand 

00:06:38.000 --> 00:06:44.090
 dus in G deel ed wat zien we dat ik ga doen 

00:06:40.850 --> 00:06:47.930
 ga hier G deel II D apparaten vernieuwen 

00:06:44.090 --> 00:06:51.010
 nu moet ik 3.6 4 terabyte drives is 

00:06:47.930 --> 00:06:52.790
 wat het zowel niet-toegewezen ruimte laat zien 

00:06:51.010 --> 00:06:55.340
 Dat is goed nieuws 

00:06:52.790 --> 00:06:57.470
 Oké, laten we hier inzoomen 

00:06:55.340 --> 00:07:03.740
 een klein beetje en laten we dat hetzelfde doen 

00:06:57.470 --> 00:07:08.480
 commando en nu zien we dat we s DB SD c hebben 

00:07:03.740 --> 00:07:11.780
 SD d en SD e nu stel ik me voor C we zijn 

00:07:08.480 --> 00:07:14.900
 ziend DD en SD e dus begrijp deze 

00:07:11.780 --> 00:07:18.380
 zijn schijf toewijzingen voor zover 

00:07:14.900 --> 00:07:20.810
 Linux segmenteert de apparaten, dus we hebben 

00:07:18.380 --> 00:07:24.320
 SD a als mijn eigenlijke interne harde schijf op 

00:07:20.810 --> 00:07:27.040
 mijn laptop SD B is vermoedelijk de eerste 

00:07:24.320 --> 00:07:29.660
 slot hierin i als ze opeenvolgend zijn 

00:07:27.040 --> 00:07:31.730
 SDC zou de tweede SD d zijn 

00:07:29.660 --> 00:07:33.860
 de derde en SD e zouden de vierde zijn 

00:07:31.730 --> 00:07:36.470
 als ik gelijk heb, zullen we dat vinden 

00:07:33.860 --> 00:07:39.880
 we kunnen het goed. Ik bedoel, we kunnen het bevestigen 

00:07:36.470 --> 00:07:42.850
 dat opnieuw door in G part ed te gaan 

00:07:39.880 --> 00:07:45.710
 dat is een snelle manier om het toch te bevestigen 

00:07:42.850 --> 00:07:47.530
 goed als ik mijn wachtwoord kende en ingevoerd 

00:07:45.710 --> 00:07:51.650
 het correct 

00:07:47.530 --> 00:07:55.910
 ja s DB en SDC dus s DB wordt 

00:07:51.650 --> 00:07:58.250
 mijn eerste rit in de SDC in het chassis 

00:07:55.910 --> 00:08:00.080
 wordt mijn tweede, dus wat ben ik 

00:07:58.250 --> 00:08:03.650
 gaat het eerst goed doen wat ik wil 

00:08:00.080 --> 00:08:07.790
 formatteer deze XF-kont dus ik heb een nodig 

00:08:03.650 --> 00:08:13.030
 een paar tools dus sudo su en log in als 

00:08:07.790 --> 00:08:15.290
 super gebruiker en ik ga apt update 

00:08:13.030 --> 00:08:18.170
 verplaats dit een beetje voor jou 

00:08:15.290 --> 00:08:21.820
 mensen thuis wil ik deze accepteren 

00:08:18.170 --> 00:08:21.820
 verandert waarom ja ja dat doe ik 

00:08:24.460 --> 00:08:35.080
 in orde om XFS Prague's ja te installeren 

00:08:32.650 --> 00:08:37.450
 kijk dat ik het al goed heb dus 

00:08:35.080 --> 00:08:39.880
 welk bestandssysteem zou u overwegen? 

00:08:37.450 --> 00:08:44.020
 je Nass denk je misschien ext4 je misschien 

00:08:39.880 --> 00:08:47.680
 denk zelfs nu misschien aan boter FS 

00:08:44.020 --> 00:08:49.630
 er zijn een paar dingen die ik 

00:08:47.680 --> 00:08:52.990
 zou overwegen wanneer ik dit maak 

00:08:49.630 --> 00:08:55.450
 array allereerst is X FS een modern bestand 

00:08:52.990 --> 00:08:58.390
 systeem dat een vrijwel onbeperkte heeft 

00:08:55.450 --> 00:09:02.100
 aantal bestanden dat ik op mijn kan hebben 

00:08:58.390 --> 00:09:03.250
 Nass dus op mijn bestandssysteem dus het is 

00:09:02.100 --> 00:09:06.520
 ongelooflijk 

00:09:03.250 --> 00:09:09.640
 alsof het is ... we kunnen niet eens tellen 

00:09:06.520 --> 00:09:11.920
 zo hoog maakt het een enorme hoeveelheid en 

00:09:09.640 --> 00:09:14.650
 zoals enorme capaciteit schijven en het is een 

00:09:11.920 --> 00:09:17.890
 modern journaling bestandssysteem nu maar 

00:09:14.650 --> 00:09:20.680
 onze FS het is een geweldig bestandssysteem waar ik van hou 

00:09:17.890 --> 00:09:24.880
 boter FS maar ik heb nog steeds zin in 

00:09:20.680 --> 00:09:28.990
 er is enige bezorgdheid waarover men zich zorgen maakt 

00:09:24.880 --> 00:09:31.210
 boter FS met onverwacht stroomverlies en 

00:09:28.990 --> 00:09:33.670
 soms kan dat gebeuren dat we hebben gehad 

00:09:31.210 --> 00:09:37.120
 stroomuitval hier in onze lokale 

00:09:33.670 --> 00:09:39.990
 gemeenschap waar de stroom is uitgevallen 

00:09:37.120 --> 00:09:42.820
 zo lang dat de UPS eindelijk opgeeft 

00:09:39.990 --> 00:09:45.850
 en als dat gebeurt wil ik dat niet hebben 

00:09:42.820 --> 00:09:48.040
 gegevensverlies of pariteitsproblemen, dus X FS is dat 

00:09:45.850 --> 00:09:53.440
 in staat om zijn bestandssysteem veel te onderhouden 

00:09:48.040 --> 00:09:56.230
 beter, omdat boter FS een 

00:09:53.440 --> 00:09:59.170
 probleem waarbij het pariteit kan verliezen 

00:09:56.230 --> 00:10:00.640
 gegevens als de stroom uitvalt dus dat is 

00:09:59.170 --> 00:10:02.860
 iets dat ik wil vermijden 

00:10:00.640 --> 00:10:06.010
 myarray maar omdat ik ooit iets ben kwijtgeraakt 

00:10:02.860 --> 00:10:08.260
 pariteitsgegevens in mijn array dan als een schijf 

00:10:06.010 --> 00:10:10.030
 mislukt dan zou ik problemen hebben 

00:10:08.260 --> 00:10:11.650
 mijn gegevens opnieuw opbouwen en dat kon ik 

00:10:10.030 --> 00:10:14.050
 potentieel verlies van gegevens dus 

00:10:11.650 --> 00:10:18.460
 dat is precies wat ik wil vermijden dus 

00:10:14.050 --> 00:10:20.110
 nu dat ik x FS Prague's heb geïnstalleerd 

00:10:18.460 --> 00:10:23.290
 waardoor ik nu FS kan laten maken 

00:10:20.110 --> 00:10:25.300
 partitioneer onze schijf dus en merk op dat ik dat ben 

00:10:23.290 --> 00:10:27.700
 dit doen in de terminal mensen die ik wil 

00:10:25.300 --> 00:10:30.760
 om dit in de terminal te doen zodat u 

00:10:27.700 --> 00:10:32.740
 kunnen zien hoe het eigenlijk is gedaan we konden 

00:10:30.760 --> 00:10:34.780
 gebruik de GUI maar jij wil ik zijn 

00:10:32.740 --> 00:10:37.060
 in staat om dit daarna in de terminal te doen 

00:10:34.780 --> 00:10:37.810
 we weten dat het dev / s DB wordt 

00:10:37.060 --> 00:10:40.660
 dat is mijn 

00:10:37.810 --> 00:10:44.380
 eerste oké dus als ik een PI kan zien 

00:10:40.660 --> 00:10:47.529
 dat dit voor terabyte drive is 

00:10:44.380 --> 00:10:49.540
 ze zijn drie punt zeven terabytes en 

00:10:47.529 --> 00:10:53.100
 dan is het als vierpunt bla bla bla 

00:10:49.540 --> 00:10:56.950
 bytes het lijkt allemaal op 102 vier 

00:10:53.100 --> 00:10:58.990
 dus we gaan een nieuwe partitie maken 

00:10:56.950 --> 00:11:03.010
 als je nu hulp nodig hebt, druk je gewoon op em en 

00:10:58.990 --> 00:11:05.470
 kom binnen want M staat voor welke hulp ja 

00:11:03.010 --> 00:11:06.520
 dat is heel logisch, maar dat zie je wel 

00:11:05.470 --> 00:11:09.100
 natuurlijk het eerste commando dat we zijn 

00:11:06.520 --> 00:11:11.529
 die nodig is is n voor een nieuwe partitie 

00:11:09.100 --> 00:11:13.150
 dus druk op n voer partitienummer in 

00:11:11.529 --> 00:11:15.610
 ga gewoon enter en dan eerst 

00:11:13.150 --> 00:11:16.930
 sector invoeren en vervolgens laatste sector invoeren 

00:11:15.610 --> 00:11:18.550
 omdat ik de hele schijf wil gebruiken 

00:11:16.930 --> 00:11:20.050
 u wilt de handtekening verwijderen en 

00:11:18.550 --> 00:11:23.110
 wat vraagt ​​mij dat hey deze rit 

00:11:20.050 --> 00:11:25.980
 heeft er al een bestandssysteem op en dat is het ook 

00:11:23.110 --> 00:11:29.290
 een versleutelde crypto Luc's handtekening 

00:11:25.980 --> 00:11:31.930
 waarschijnlijk gemaakt met Luke's dump als jij 

00:11:29.290 --> 00:11:33.370
 zijn al op de hoogte omdat dat mijn oude is 

00:11:31.930 --> 00:11:35.710
 backup onthoud dat ik dat zei maar ik 

00:11:33.370 --> 00:11:38.230
 weet dat ik nu een nieuwe back-up heb dus 

00:11:35.710 --> 00:11:39.820
 deze is overbodig en niet nodig en 

00:11:38.230 --> 00:11:42.339
 overbodig tot het punt waar het kan zijn 

00:11:39.820 --> 00:11:43.930
 vernietigd en ik verlies niets dus 

00:11:42.339 --> 00:11:46.000
 wil ik die handtekening verwijderen ja 

00:11:43.930 --> 00:11:49.000
 oke daar gaan we dus ik ga het schrijven 

00:11:46.000 --> 00:11:53.440
 uit met W en ik ben nu klaar als ik dat doe 

00:11:49.000 --> 00:11:55.780
 een F-schijf - L slash dev slash s DB I 

00:11:53.440 --> 00:11:58.300
 zou moeten zien dat ik nu een DB heb 

00:11:55.780 --> 00:12:01.120
 dat is mijn eerste partitie op s DB de 

00:11:58.300 --> 00:12:04.780
 eerst rijden in mijn chassis en het is een 

00:12:01.120 --> 00:12:06.339
 volledige 3,7 terabyte en deze is ingesteld voor een 

00:12:04.780 --> 00:12:07.839
 Linux-bestandssysteem nu kan ik het niet koppelen 

00:12:06.339 --> 00:12:12.370
 maar omdat er geen bestand is 

00:12:07.839 --> 00:12:14.410
 systeem dus maak FS zo mkfs punt x FS 

00:12:12.370 --> 00:12:17.860
 omdat we het x FS-bestandssysteem voor jou hebben gekozen 

00:12:14.410 --> 00:12:20.560
 zou ook X t4 goed kunnen doen, maar we gaan het doen 

00:12:17.860 --> 00:12:22.930
 doe x FS en ik ga dev s DB one 

00:12:20.560 --> 00:12:27.070
 nu is een van de dingen echt echt 

00:12:22.930 --> 00:12:29.650
 leuk over x FS is de snelheid waarmee het 

00:12:27.070 --> 00:12:33.130
 formatteert de schijf dit is een 4 terabyte 

00:12:29.650 --> 00:12:35.080
 rijden en ik zou zeggen dat het waarschijnlijk is 

00:12:33.130 --> 00:12:38.290
 die schijf gaat formatteren 

00:12:35.080 --> 00:12:40.600
 zoals in een tiende van de tijd dat het 

00:12:38.290 --> 00:12:45.279
 zou 4 ext4 of iets dergelijks duren 

00:12:40.600 --> 00:12:47.500
 tot nu toe heb ik een schijf die is 

00:12:45.279 --> 00:12:50.380
 x FS formatteren Ik heb het gepartitioneerd 

00:12:47.500 --> 00:12:51.010
 heeft een volledige partitie van 4 terabyte 

00:12:50.380 --> 00:12:53.170
 zeggen 

00:12:51.010 --> 00:12:55.330
 zeven terabytes en ik formatteer het 

00:12:53.170 --> 00:12:59.350
 met XFS met behulp van de Linux-terminal dus 

00:12:55.330 --> 00:13:00.340
 dit kan mijn zijn en een deel van waarom ik wil 

00:12:59.350 --> 00:13:03.550
 om u dit in de terminal te laten zien is 

00:13:00.340 --> 00:13:05.860
 omdat dit mijn X Xu zou kunnen zijn waarvoor 

00:13:03.550 --> 00:13:10.480
 Ik zou SSH-tin kunnen zijn en dit zou kunnen 

00:13:05.860 --> 00:13:11.740
 aangesloten op de externe USB die dat is 

00:13:10.480 --> 00:13:15.160
 al klaar met formatteren voor 

00:13:11.740 --> 00:13:17.770
 terabytes kun je geloven dat dat zo is gebeurd 

00:13:15.160 --> 00:13:19.810
 nu zou ik dat zelfs kunnen monteren als ik 

00:13:17.770 --> 00:13:24.190
 creëerde een mount point dus laten we gaan / mnt 

00:13:19.810 --> 00:13:26.080
 laten we een mount point maken der in MNT 

00:13:24.190 --> 00:13:29.350
 Ik ga dit noemen, ik noem het gewoon s 

00:13:26.080 --> 00:13:31.090
 DB een alleen voor de lol omdat het gemakkelijk is om 

00:13:29.350 --> 00:13:33.690
 begrijp wat dat betekent 

00:13:31.090 --> 00:13:35.920
 en ik denk dat toen ik Linux leerde als 

00:13:33.690 --> 00:13:38.290
 een nieuweling Linux gebruiker 

00:13:35.920 --> 00:13:40.900
 Ik denk dat mount points iets waren dat 

00:13:38.290 --> 00:13:42.670
 heeft me echt in de war gebracht en als jij het bent 

00:13:40.900 --> 00:13:44.380
 nog nooit eerder met mount points gewerkt 

00:13:42.670 --> 00:13:47.530
 de terminal of je weet niet zeker hoe dit 

00:13:44.380 --> 00:13:49.510
 werkt gerust vragen stellen 

00:13:47.530 --> 00:13:51.460
 Ik zal mijn best doen om het uit te leggen 

00:13:49.510 --> 00:13:53.590
 Linux werkt heel anders dan bijvoorbeeld 

00:13:51.460 --> 00:13:55.030
 Windows Windows gebruikt zoals wanneer u aansluit 

00:13:53.590 --> 00:13:57.070
 op een schijf lijkt het op je C-schijf 

00:13:55.030 --> 00:14:00.130
 het is je D-schijf, het is je II-schijf en 

00:13:57.070 --> 00:14:02.080
 dus op Linux kun je er tien aansluiten 

00:14:00.130 --> 00:14:04.000
 drives en geen van hen heeft een drive 

00:14:02.080 --> 00:14:06.040
 letter kunnen ze net als een van hen zijn 

00:14:04.000 --> 00:14:07.900
 kan je laars zijn en een van hen 

00:14:06.040 --> 00:14:09.850
 kan je route zijn en een van hen kan dat zijn 

00:14:07.900 --> 00:14:11.110
 uw thuismappen een van hen kan zijn 

00:14:09.850 --> 00:14:14.320
 uw back-up en ze zijn allemaal verbonden 

00:14:11.110 --> 00:14:15.820
 via de bestandssysteemstructuur dus in 

00:14:14.320 --> 00:14:20.080
 in dit geval ga ik dat plaatsen 

00:14:15.820 --> 00:14:21.400
 rijden op / mnt slash stb-1 omdat ik 

00:14:20.080 --> 00:14:25.900
 creëerde een mount point 

00:14:21.400 --> 00:14:28.120
 aka een map op dat moment maar waar 

00:14:25.900 --> 00:14:30.150
 waar het verwarrend kan worden, is wanneer ik 

00:14:28.120 --> 00:14:33.370
 begon eerst dit soort dingen te leren 

00:14:30.150 --> 00:14:34.870
 zou ik nu in s DB gaan 

00:14:33.370 --> 00:14:36.610
 Ik heb deze map gemaakt en die zou ik kunnen plaatsen 

00:14:34.870 --> 00:14:38.800
 sommige bestanden daar maar dan zou ik niet 

00:14:36.610 --> 00:14:41.350
 besef zelfs dat de rit dat niet is 

00:14:38.800 --> 00:14:45.330
 momenteel gemount dus alle bestanden die ik 

00:14:41.350 --> 00:14:48.070
 zet er zijn eigenlijk op mijn SD a 

00:14:45.330 --> 00:14:50.710
 schrijf de ingebouwde harde schijf op mijn 

00:14:48.070 --> 00:14:53.770
 laptop omdat ik nog niet verbonden ben 

00:14:50.710 --> 00:14:56.110
 deze rit naar dat mount point dus de 

00:14:53.770 --> 00:14:58.300
 manier dat ik dat ga doen en daar 

00:14:56.110 --> 00:15:00.460
 zijn manieren om dat permanent te doen, maar om 

00:14:58.300 --> 00:15:04.329
 doe dat tijdelijk gewoon om te testen 

00:15:00.460 --> 00:15:05.799
 Ik ga mount slash dev slash SDP 

00:15:04.329 --> 00:15:07.749
 omdat we weten dat dat onze is 

00:15:05.799 --> 00:15:10.480
 eerste partitie op die schijf die we 

00:15:07.749 --> 00:15:13.899
 geformatteerd XFS en dan ga ik mounten 

00:15:10.480 --> 00:15:16.679
 dat om / mnt slash SD b1 

00:15:13.899 --> 00:15:21.399
 dus wat ik zeg, is dit monteren 

00:15:16.679 --> 00:15:26.079
 partitie SD b een in dev naar deze mount 

00:15:21.399 --> 00:15:29.439
 wijs AKA-map SD b één keer invoeren nu 

00:15:26.079 --> 00:15:32.110
 als ik naar SD b1 ga, ziet het er precies zo uit 

00:15:29.439 --> 00:15:36.489
 hetzelfde maar ik alles wat ik hier doe is 

00:15:32.110 --> 00:15:39.879
 eigenlijk extern hard gaan 

00:15:36.489 --> 00:15:41.889
 rijden dus nu als ik een map terug ga en 

00:15:39.879 --> 00:15:46.059
 Ik ontkoppel wat de opdracht is 

00:15:41.889 --> 00:15:49.149
 eigenlijk mount je nu SD b1 als ik ga 

00:15:46.059 --> 00:15:49.509
 terug naar stb-1 en kijk er LS uit 

00:15:49.149 --> 00:15:51.819
 leeg 

00:15:49.509 --> 00:15:54.309
 waar zijn mijn bestanden naartoe gegaan, want juist 

00:15:51.819 --> 00:15:57.369
 nu kijk ik eigenlijk naar SD a omdat 

00:15:54.309 --> 00:16:02.889
 het is niet gemonteerd, ga terug en typ 

00:15:57.369 --> 00:16:04.839
 mijn mount commando ga terug nu ik er in ben 

00:16:02.889 --> 00:16:09.129
 feit kijken naar de externe harde schijf 

00:16:04.839 --> 00:16:13.149
 dus dat testbestand dat ik heb gemaakt, staat 

00:16:09.129 --> 00:16:15.220
 de allereerste rit in deze vervelende ik zie 

00:16:13.149 --> 00:16:19.259
 in ons chassis zitten externe chassis 

00:16:15.220 --> 00:16:22.199
 precies daar en als het niet is gemonteerd I 

00:16:19.259 --> 00:16:24.279
 heeft geen toegang tot die bestanden 

00:16:22.199 --> 00:16:25.929
 er is nog iets dat ik kan doen 

00:16:24.279 --> 00:16:29.799
 wat heel erg nuttig is, want wat 

00:16:25.929 --> 00:16:33.279
 kan gebeuren laten we die SD b1 dus ontkoppelen 

00:16:29.799 --> 00:16:35.410
 nu is het niet gemonteerd oke SD wees er een als ik 

00:16:33.279 --> 00:16:38.319
 kijk nu wat er kan gebeuren is dat ik ga 

00:16:35.410 --> 00:16:41.230
 aanraaktest - ok dus nu is er een bestand 

00:16:38.319 --> 00:16:42.819
 belde nu test2 als ik terug zou gaan en ik zou 

00:16:41.230 --> 00:16:44.220
 voer mijn mountcommando uit, kijk wat kan 

00:16:42.819 --> 00:16:46.869
 gebeuren 

00:16:44.220 --> 00:16:52.600
 merk je het goed, dus test twee is er 

00:16:46.869 --> 00:16:55.329
 ga nu naar SD b1 en doe een LS en 

00:16:52.600 --> 00:16:59.049
 het is goed getest waar het echt is getest 

00:16:55.329 --> 00:17:03.220
 om te gaan ben ik mijn bestand kwijt, nee dat heb ik niet 

00:16:59.049 --> 00:17:05.260
 omdat test 2 op SDA was omdat het 

00:17:03.220 --> 00:17:07.329
 was niet gemonteerd dus nu raak ik in de war 

00:17:05.260 --> 00:17:10.809
 dit was waar ik was toen ik nog maar een was 

00:17:07.329 --> 00:17:13.689
 groentje Linux-gebruiker, want als dat niet zo was 

00:17:10.809 --> 00:17:15.429
 gemonteerd of als ik vergeten was mijn schijf te monteren 

00:17:13.689 --> 00:17:17.350
 of als ik het niet correct heb gemonteerd of ik 

00:17:15.429 --> 00:17:21.160
 zet het ik gemonteerd op de verkeerde plaats 

00:17:17.350 --> 00:17:22.390
 Ik zet bestanden op het mount-punt ongemonteerd 

00:17:21.160 --> 00:17:24.460
 zodat ze niet op mijn externe zouden eindigen 

00:17:22.390 --> 00:17:27.190
 rijden dus waarom doet dat ertoe 

00:17:24.460 --> 00:17:30.640
 wat als ik een back-up zou maken wat als ik dat was 

00:17:27.190 --> 00:17:34.420
 een back-up maken van mijn ritje naar mijn ex Tim is 

00:17:30.640 --> 00:17:37.270
 db1 maar het was niet gemonteerd zou ik doen 

00:17:34.420 --> 00:17:41.020
 de bestanden van mijn sd kopiëren 

00:17:37.270 --> 00:17:42.820
 een naar mijn sd een dezelfde harde schijf dus dan 

00:17:41.020 --> 00:17:45.040
 die harde schijf crasht mijn back-up is 

00:17:42.820 --> 00:17:49.000
 nutteloos absoluut nutteloos 

00:17:45.040 --> 00:17:52.810
 dus hoe kan ik dat goed oplossen als ik ontkoppel 

00:17:49.000 --> 00:17:55.530
 die schijf dus je mount SD b1 omdat 

00:17:52.810 --> 00:17:59.590
 Ik zit in de mountmap en ga daar terug naar binnen 

00:17:55.530 --> 00:18:05.230
 Ik ga test2 verwijderen en nu teruggaan 

00:17:59.590 --> 00:18:09.400
 en bekijk nu dit chatter CH attr plus 

00:18:05.230 --> 00:18:13.360
 Ik dat wil zeggen, maak het onveranderlijk, maak het 

00:18:09.400 --> 00:18:17.710
 zodat er niet naar kan worden geschreven en dan 

00:18:13.360 --> 00:18:20.980
 SD b1 oke dus nu als ik stb-1 en in ga 

00:18:17.710 --> 00:18:23.500
 Ik probeer opnieuw test 2 aan te raken, hij zegt nee 

00:18:20.980 --> 00:18:25.480
 zo'n bestand of map wat is het goed I 

00:18:23.500 --> 00:18:29.200
 weet dat er een bestand in die map staat 

00:18:25.480 --> 00:18:30.880
 waarom kan ik mijn bestand niet aanraken oh dat heb ik niet 

00:18:29.200 --> 00:18:33.430
 hoop in mijn map heb ik nog niet 

00:18:30.880 --> 00:18:36.790
 heeft mijn schijf gemonteerd, dus dat is belangrijk 

00:18:33.430 --> 00:18:40.030
 doe dat omdat ik nu niet kan schrijven 

00:18:36.790 --> 00:18:41.920
 alles naar het mount point dus nu 

00:18:40.030 --> 00:18:45.460
 werkt alleen mijn back-up werkt alleen 

00:18:41.920 --> 00:18:47.890
 functie als de houder zich in de drive bevindt 

00:18:45.460 --> 00:18:49.600
 feit gemonteerd dus laten we hier nu teruggaan 

00:18:47.890 --> 00:18:52.870
 dat het onveranderlijk is. Ik kan niets doen 

00:18:49.600 --> 00:18:55.240
 hier kan ik hier geen map maken 

00:18:52.870 --> 00:18:57.220
 zal zeggen dat operatie het niet toelaat om omhoog te gaan a 

00:18:55.240 --> 00:18:59.200
 map en laten we nu onze mount uitvoeren 

00:18:57.220 --> 00:19:00.960
 commando opnieuw, dus ik druk op controle R 

00:18:59.200 --> 00:19:04.270
 om terug te kunnen gaan in mijn geschiedenis en 

00:19:00.960 --> 00:19:06.040
 nu als ik merk dat het nu prima is gemonteerd 

00:19:04.270 --> 00:19:08.530
 Ik ga terug naar stb-1 

00:19:06.040 --> 00:19:12.640
 en ik ga nu je testbestand zien 

00:19:08.530 --> 00:19:16.330
 laten we proberen de test aan te raken om aan te raken Ik kan het niet 

00:19:12.640 --> 00:19:18.790
 typ en praat test twee daar gaan we zo 

00:19:16.330 --> 00:19:21.820
 nu merk je dat het werkte omdat 

00:19:18.790 --> 00:19:24.730
 het is goed gemonteerd dus dit is in feite 

00:19:21.820 --> 00:19:27.160
 de stb-1 de externe harde schijf nu 

00:19:24.730 --> 00:19:29.710
 en als je niet zeker weet of het is gemonteerd 

00:19:27.160 --> 00:19:30.700
 bekijk deze mount het geeft me een lijst van 

00:19:29.710 --> 00:19:32.790
 alle schijven die goed zijn gemonteerd 

00:19:30.700 --> 00:19:37.000
 dat is een heleboel cruft dus mount 

00:19:32.790 --> 00:19:39.220
 pipe grep SD is er een die me gewoon geeft 

00:19:37.000 --> 00:19:42.960
 de enige regel die stb-1 laat zien, dus dit 

00:19:39.220 --> 00:19:44.170
 laat me zien dat dev stb-1 is gemonteerd 

00:19:42.960 --> 00:19:46.450
 / mnt 

00:19:44.170 --> 00:19:49.510
 sla SDP goed, wat gebeurt er als ik 

00:19:46.450 --> 00:19:52.600
 ontkoppelen en precies hetzelfde uitvoeren 

00:19:49.510 --> 00:19:55.330
 commando geen output omdat het niet is 

00:19:52.600 --> 00:19:58.390
 momenteel gemonteerd, dus ik weet dat ik dat moet 

00:19:55.330 --> 00:20:02.050
 mount het opnieuw doen 

00:19:58.390 --> 00:20:04.720
 daar gaan we nu dat commando uitvoeren dus wat 

00:20:02.050 --> 00:20:06.460
 doet het zijn mount die geeft 

00:20:04.720 --> 00:20:09.040
 mij een output van alle gemonteerde spullen 

00:20:06.460 --> 00:20:10.870
 goed, maar dan ben ik aan het worstelen 

00:20:09.040 --> 00:20:14.050
 eigenlijk het Linux-equivalent van hey 

00:20:10.870 --> 00:20:15.640
 zoek die uitgang voor deze SD 1 en 

00:20:14.050 --> 00:20:17.380
 druk op enter en dat kan alles zijn I 

00:20:15.640 --> 00:20:18.880
 kon zoeken naar dev en het zal me geven 

00:20:17.380 --> 00:20:20.890
 alles dat het woord dev bevat 

00:20:18.880 --> 00:20:23.440
 nou nee ik heb niet nodig dat ik gewoon wil 

00:20:20.890 --> 00:20:24.910
 SDP één en dat geeft mij en het is een 

00:20:23.440 --> 00:20:26.440
 beetje rommelig als ik het graag heb 

00:20:24.910 --> 00:20:29.770
 dat maar daar ga je zodat je het kunt zien 

00:20:26.440 --> 00:20:33.340
 dat ik dev s DB one op MN t / stb-1 heb 

00:20:29.770 --> 00:20:35.830
 en het type is XFS dat is mijn bestand 

00:20:33.340 --> 00:20:39.480
 systeem en het is klaar om te gaan, dus ik heb mijn 

00:20:35.830 --> 00:20:41.650
 eerste rit klaar om te gaan in mijn Nass 

00:20:39.480 --> 00:20:44.620
 tweede schijf wordt precies de 

00:20:41.650 --> 00:20:46.420
 hetzelfde behalve dat we weten dat het mijn SDC is dus 

00:20:44.620 --> 00:20:49.840
 je doorloopt dezelfde stappen in volgorde 

00:20:46.420 --> 00:20:54.190
 om dat nu te maken omdat dit geen a is 

00:20:49.840 --> 00:20:56.500
 raid-eenheid die ik in 4 terabyte-drives kan stoppen 

00:20:54.190 --> 00:20:58.740
 Ik heb mijn 2 4 terabyte-schijven die ik ook kan 

00:20:56.500 --> 00:21:02.320
 doe daarnaast een 1 terabyte 

00:20:58.740 --> 00:21:05.560
 en ik kan een optreden van 500 optreden, zodat ik het kan gebruiken 

00:21:02.320 --> 00:21:10.780
 een mix van schijven en dat gaat ze allemaal doen 

00:21:05.560 --> 00:21:15.070
 zal verschijnen als s TB SDC s de D 

00:21:10.780 --> 00:21:17.620
 en E en en dan heb je het 

00:21:15.070 --> 00:21:20.290
 toegang tot elk van hen nu met een inval 

00:21:17.620 --> 00:21:21.730
 natuurlijk als je vier terabytes moest hebben 

00:21:20.290 --> 00:21:22.870
 nou, je zou die als een inval kunnen instellen 1 

00:21:21.730 --> 00:21:24.910
 maar dan als je één terabyte had 

00:21:22.870 --> 00:21:26.710
 genoeg en een 500 gigabyte die je niet kon 

00:21:24.910 --> 00:21:29.350
 verbind ze echt met elkaar en gebruik ze 

00:21:26.710 --> 00:21:31.630
 hen wat we gaan doen 

00:21:29.350 --> 00:21:34.360
 de loop van deze serie gaan we doen 

00:21:31.630 --> 00:21:37.989
 laten zien hoe we daadwerkelijk kunnen gebruiken 

00:21:34.360 --> 00:21:40.929
 deze eenheid of een soortgelijke eenheid 

00:21:37.989 --> 00:21:44.679
 om arrays te maken met behulp van Linux 

00:21:40.929 --> 00:21:46.570
 hulpmiddelen waarmee ik kan mixen 

00:21:44.679 --> 00:21:48.879
 schijven om redundantie te kunnen creëren 

00:21:46.570 --> 00:21:51.009
 we gaan allerlei maken 

00:21:48.879 --> 00:21:53.470
 echt coole dingen zodat je het kunt 

00:21:51.009 --> 00:21:55.269
 het onderliggende bestandssysteem begrijpen 

00:21:53.470 --> 00:21:57.039
 eigenaardigheden en ik denk zelfs vanavond 

00:21:55.269 --> 00:21:58.600
 je hebt misschien een paar dingen geleerd 

00:21:57.039 --> 00:22:00.519
 geef hieronder een reactie, laat me weten wat 

00:21:58.600 --> 00:22:03.129
 je hebt hier geleerd en of er iets is 

00:22:00.519 --> 00:22:06.700
 is van bijzonder belang dat ik heb 

00:22:03.129 --> 00:22:07.690
 sprak vanavond en door de 

00:22:06.700 --> 00:22:09.279
 loop van de serie die we gaan worden 

00:22:07.690 --> 00:22:12.970
 dat soort dingen leren 

00:22:09.279 --> 00:22:15.489
 de kleine snuisterijen achter dergelijke 

00:22:12.970 --> 00:22:19.509
 de gebruikersinterface die we gewend zijn leuk te vinden 

00:22:15.489 --> 00:22:21.849
 installeer als een interface op onze Nass 

00:22:19.509 --> 00:22:23.139
 en we zien alleen het web 

00:22:21.849 --> 00:22:24.489
 interface, we gaan werken 

00:22:23.139 --> 00:22:26.830
 onder de motorkap zodat we begrijpen hoe 

00:22:24.489 --> 00:22:29.139
 het werkt allemaal en houdt onze gegevens veilig 

00:22:26.830 --> 00:22:32.019
 dus dat is best cool he we moeten 

00:22:29.139 --> 00:22:34.769
 neem heel snel een pauze. Ik heb gelijk 

00:22:32.019 --> 00:22:34.769
 rug blijven hangen 

00:22:34.960 --> 00:22:42.739
 [Muziek] 

00:22:48.370 --> 00:22:51.500
 [Muziek] 

00:22:52.499 --> 00:22:58.419
 welkom terug dit is categorie vijf 

00:22:54.820 --> 00:22:59.619
 technology TV nu is onze uitzending live 

00:22:58.419 --> 00:23:01.149
 ook al kijk je dit aan 

00:22:59.619 --> 00:23:04.330
 vraag dat we nog enkele vragen hebben 

00:23:01.149 --> 00:23:06.759
 in in onze onenigheid chat eerste vraag 

00:23:04.330 --> 00:23:08.919
 komt van Marsh man die vraagt ​​hoe het met mij gaat 

00:23:06.759 --> 00:23:10.389
 laptop die ik demonstreer bij verbinden 

00:23:08.919 --> 00:23:11.589
 het aan de NASA nu noemde ik het bij de 

00:23:10.389 --> 00:23:14.229
 top van de show, maar dat heb je misschien niet 

00:23:11.589 --> 00:23:16.119
 ving het ving het en ik ga het gewoon doen 

00:23:14.229 --> 00:23:17.320
 schakel dit uit, omdat ik heb ontkoppeld 

00:23:16.119 --> 00:23:18.639
 het met het je mount commando dus ik ben 

00:23:17.320 --> 00:23:20.229
 ik zal die knop ingedrukt houden 

00:23:18.639 --> 00:23:21.579
 schakel die schijven uit zodat ik veilig kan 

00:23:20.229 --> 00:23:23.619
 verplaats het daar gaat het 

00:23:21.579 --> 00:23:24.940
 onthoud dat dit draaiende schijven zijn 

00:23:23.619 --> 00:23:26.109
 je wilt dit nu niet verplaatsen 

00:23:24.940 --> 00:23:27.969
 ze draaien omdat je kunt 

00:23:26.109 --> 00:23:30.070
 daadwerkelijk schade toebrengen aan het fysieke 

00:23:27.969 --> 00:23:32.139
 platters van de schijf zijn er naalden 

00:23:30.070 --> 00:23:33.969
 eigenlijk gaan we ze noemen 

00:23:32.139 --> 00:23:37.299
 een oude plaat net als een platenspeler 

00:23:33.969 --> 00:23:39.249
 LPS je hebt hoofden die zweven op een 

00:23:37.299 --> 00:23:41.919
 heel klein luchtkussen bovenop 

00:23:39.249 --> 00:23:44.739
 zeer gevoelige magnetische platen, dus als ik 

00:23:41.919 --> 00:23:48.579
 verplaats dit terwijl het daarop is ingeschakeld 

00:23:44.739 --> 00:23:52.509
 platters bewegen met 7.200 rotaties 

00:23:48.579 --> 00:23:54.389
 per minuut en dus als ik het in zo'n a verplaats 

00:23:52.509 --> 00:23:57.940
 manier dat het hoofd de schotel raakt 

00:23:54.389 --> 00:24:00.279
 scratch dataverlies mogelijk harde schijf 

00:23:57.940 --> 00:24:03.129
 falen dus ik schakel dit altijd uit 

00:24:00.279 --> 00:24:07.179
 voordat ik het verplaats, hoe verbind ik het 

00:24:03.129 --> 00:24:10.179
 Ik haal hier gewoon de stroom uit 

00:24:07.179 --> 00:24:14.559
 is de achterkant van het apparaat en alles wat ik heb 

00:24:10.179 --> 00:24:18.549
 is een USBC-kabel oke dus dat is wat het is 

00:24:14.559 --> 00:24:22.089
 zit nu aan de kant van de laptop, ik ben 

00:24:18.549 --> 00:24:24.369
 haal gewoon de stekker hier uit, dit is de 

00:24:22.089 --> 00:24:27.999
 andere uiteinde van diezelfde kabel dus ik heb 

00:24:24.369 --> 00:24:30.789
 USB C en ik heb USB a dus dit staat toe 

00:24:27.999 --> 00:24:35.859
 mij om hem aan te sluiten op een laptop of een andere 

00:24:30.789 --> 00:24:37.989
 USB 3.0-apparaat dus dat is mijn Odroid xu4 

00:24:35.859 --> 00:24:41.259
 dat is wat we hopen te bereiken 

00:24:37.989 --> 00:24:43.359
 tijdens dit project 

00:24:41.259 --> 00:24:44.529
 is om dit daadwerkelijk te voeden vanuit een enkele 

00:24:43.359 --> 00:24:46.749
 boordcomputer de reden dat ik heb 

00:24:44.529 --> 00:24:47.800
 gekozen voor de xu4 is omdat deze ondersteunt 

00:24:46.749 --> 00:24:50.320
 jij asp 

00:24:47.800 --> 00:24:52.360
 dat is USB Attached scuzzy protocol 

00:24:50.320 --> 00:24:55.840
 wat betekent dat het zal kunnen krijgen 

00:24:52.360 --> 00:24:59.200
 vijf gigabit gegevensoverdracht per seconde 

00:24:55.840 --> 00:25:01.240
 naar het apparaat in tegenstelling tot standaard USB het is 

00:24:59.200 --> 00:25:03.970
 ga je veel sneller zien 

00:25:01.240 --> 00:25:05.830
 een redelijk percentage meer, dus dat is hoe 

00:25:03.970 --> 00:25:07.180
 Ik was verbonden dit was geen SSH 

00:25:05.830 --> 00:25:10.390
 verbinding of iets dergelijks dit 

00:25:07.180 --> 00:25:13.840
 was een directe USB-verbinding precies zoals 

00:25:10.390 --> 00:25:16.060
 het zal niet voor niets bij onze Odroid xu zijn 

00:25:13.840 --> 00:25:17.620
 Ik kijk er niet naar en Odroid xu 

00:25:16.060 --> 00:25:20.380
 voor vanavond en ik doe dit eigenlijk 

00:25:17.620 --> 00:25:23.250
 mijn laptop gebruiken is strikt omwille van het belang 

00:25:20.380 --> 00:25:26.500
 van de demonstratie is dit een reeks 

00:25:23.250 --> 00:25:29.410
 van demonstraties en projecten die dat zijn 

00:25:26.500 --> 00:25:33.160
 gaat ons naar onze mijne kont leiden dus 

00:25:29.410 --> 00:25:36.820
 cat five dot TV / - is waar het allemaal om gaat 

00:25:33.160 --> 00:25:39.550
 komen samen maar de Xu 4 is 

00:25:36.820 --> 00:25:41.620
 wordt een van de stappen in de 

00:25:39.550 --> 00:25:42.760
 proces van het maken van deze eenheid maar ik 

00:25:41.620 --> 00:25:45.220
 wilde je het soort laten zien 

00:25:42.760 --> 00:25:46.720
 onderliggend we dat we zullen zijn 

00:25:45.220 --> 00:25:49.600
 dingen opzetten en ik wil dat je dat doet 

00:25:46.720 --> 00:25:51.400
 leer hoe sommige hiervan deze kleine 

00:25:49.600 --> 00:25:52.660
 Linux-opdrachten werken in de terminal als 

00:25:51.400 --> 00:25:54.520
 goed omdat alles zal worden gedaan 

00:25:52.660 --> 00:25:58.510
 in de terminal andere vragen voor 

00:25:54.520 --> 00:26:01.570
 us bp9 graag gedaan foo 

00:25:58.510 --> 00:26:03.940
 dit noemen - ja, nu meteen hierin 

00:26:01.570 --> 00:26:08.440
 direct is dit in dit geval dit 

00:26:03.940 --> 00:26:10.600
 direct aangesloten opslag is het idee dat 

00:26:08.440 --> 00:26:14.710
 we nemen deze - eenheid en 

00:26:10.600 --> 00:26:17.800
 er een pseudo nas of back-up van maken 

00:26:14.710 --> 00:26:20.290
 systeem dat een Xu 4 gebruikt, dus de Xu 4 is 

00:26:17.800 --> 00:26:21.820
 de hersenen hiervan worden en 

00:26:20.290 --> 00:26:24.430
 dan kan ik er toegang toe krijgen 

00:26:21.820 --> 00:26:25.930
 als netwerkopslag, dus dat ben ik niet 

00:26:24.430 --> 00:26:27.820
 moet ik het op mijn laptop aansluiten 

00:26:25.930 --> 00:26:31.240
 weet dat ik er toegang toe heb 

00:26:27.820 --> 00:26:33.010
 via Wi-Fi via Ethernet en dergelijke 

00:26:31.240 --> 00:26:34.870
 soorten dingen heb ik andere gemist 

00:26:33.010 --> 00:26:37.170
 vragen nu kijk ik naar de chatroom 

00:26:34.870 --> 00:26:40.150
 op mijn telefoon en zo is het scherm 

00:26:37.170 --> 00:26:42.400
 relatief klein en als dingen doen 

00:26:40.150 --> 00:26:44.560
 hebben de neiging om een ​​beetje langs het scherm te vliegen, dus als 

00:26:42.400 --> 00:26:46.240
 er zijn nog andere vragen over de 

00:26:44.560 --> 00:26:50.020
 project of wat ik hier les geef 

00:26:46.240 --> 00:26:53.500
 vanavond ben ik wijd open geweldig om te zien 

00:26:50.020 --> 00:26:56.590
 iedereen hier en waardeer het dat je bent 

00:26:53.500 --> 00:27:02.170
 hier denk ik dat dat echt het geval was 

00:26:56.590 --> 00:27:04.240
 de hoofdvraag I bp9 ja oke dus jij 

00:27:02.170 --> 00:27:06.670
 vraag het me nu af hoe ik het kon 

00:27:04.240 --> 00:27:08.740
 rechtstreeks op de NASS-eenheid aansluiten 

00:27:06.670 --> 00:27:10.810
 omdat het geen ezel is en precies zoals 

00:27:08.740 --> 00:27:12.880
 de foo zegt dat het direct is bevestigd 

00:27:10.810 --> 00:27:15.580
 opslag in dit geval dat is alles 

00:27:12.880 --> 00:27:17.140
 gaat echter veranderen en als 

00:27:15.580 --> 00:27:19.810
 je bent niet bekend met een X you for Oh 

00:27:17.140 --> 00:27:21.760
 Droid X you want het is dus een microcomputer 

00:27:19.810 --> 00:27:23.770
 denk aan een Raspberry Pi, het is een heel erg 

00:27:21.760 --> 00:27:26.710
 kleine computer past precies in mijn zak 

00:27:23.770 --> 00:27:29.410
 hier wou ik dat ik het bij me had, maar daar ik 

00:27:26.710 --> 00:27:31.870
 eigenlijk als je me daarvoor kunt excuseren 

00:27:29.410 --> 00:27:35.320
 moment dat ik er een kan pakken, heb ik er gewoon een 

00:27:31.870 --> 00:27:39.010
 van de set hier gaan we dus dit is een 

00:27:35.320 --> 00:27:40.390
 geen droid Xu voor Q en de Q staat voor 

00:27:39.010 --> 00:27:43.750
 stil omdat het zo enorm is 

00:27:40.390 --> 00:27:46.720
 heatsink dus dit is het bord dat is 

00:27:43.750 --> 00:27:49.000
 onze nass-eenheid van stroom voorzien, dus wanneer 

00:27:46.720 --> 00:27:51.580
 dit wordt een ezel dit gaat worden 

00:27:49.000 --> 00:27:54.310
 de computer de hersens die gaan 

00:27:51.580 --> 00:27:57.400
 power it it heeft Debian Linux Debian 10 

00:27:54.310 --> 00:27:59.560
 hier op een micro SD nu 

00:27:57.400 --> 00:28:01.660
 gaan op emmc en dan gaan we 

00:27:59.560 --> 00:28:04.960
 een vorm van montage opzetten 

00:28:01.660 --> 00:28:07.840
 om dit op zo'n manier te verbergen dat 

00:28:04.960 --> 00:28:09.340
 het zal deel uitmaken van de eenheid zelf 

00:28:07.840 --> 00:28:12.490
 en iets dat we er gewoon in kunnen stoppen 

00:28:09.340 --> 00:28:14.110
 een kamer in de je weet als je een 

00:28:12.490 --> 00:28:15.640
 kast of iets dat u kunt instellen 

00:28:14.110 --> 00:28:18.400
 dat op en voer gewoon een ethernetkabel uit 

00:28:15.640 --> 00:28:20.290
 met Gigabit Ethernet dat is 

00:28:18.400 --> 00:28:21.730
 geeft je volledige toegang tot alle 

00:28:20.290 --> 00:28:23.560
 bestanden en maak uw back-ups en 

00:28:21.730 --> 00:28:27.610
 al het andere zo goed bedankt voor 

00:28:23.560 --> 00:28:29.230
 de vragen iedereen II ben welkom I 

00:28:27.610 --> 00:28:33.130
 welkom uw vragen kunt u e-mailen 

00:28:29.230 --> 00:28:35.820
 live op tv met vijf punten als je 

00:28:33.130 --> 00:28:35.820
 meer hebben 

