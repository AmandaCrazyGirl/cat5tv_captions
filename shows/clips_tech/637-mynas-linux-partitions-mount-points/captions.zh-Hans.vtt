WEBVTT
Kind: captions
Language: zh-Hans

00:00:02.179 --> 00:00:09.389
在过去的几周中，我和

00:00:05.549 --> 00:00:12.750
团队一直在谈论我们的

00:00:09.389 --> 00:00:17.580
我们会叫我的屁股你的屁股我的

00:00:12.750 --> 00:00:18.990
屁股，但吉五点电视--我在哪里

00:00:17.580 --> 00:00:20.760
将把所有链接的产品

00:00:18.990 --> 00:00:23.460
我们将要看的是

00:00:20.760 --> 00:00:26.220
讨论一直围绕着

00:00:23.460 --> 00:00:29.550
决定好吧，我们采用USB 3.0吗

00:00:26.220 --> 00:00:30.900
这样我们也可以获取eSATA端口

00:00:29.550 --> 00:00:32.520
最多可以给我们六个

00:00:30.900 --> 00:00:38.250
每秒千兆字节，还是我们直走

00:00:32.520 --> 00:00:41.399
到USB 3.1 Rev-理论上可以

00:00:38.250 --> 00:00:44.219
每秒最多可以给我们10吉比特

00:00:41.399 --> 00:00:45.570
但是关于这一点的一个警告是

00:00:44.219 --> 00:00:47.850
我们将要使用的设备

00:00:45.570 --> 00:00:50.700
在连接-这是一个奇怪的类固醇xu4 

00:00:47.850 --> 00:00:54.090
单板计算机只能

00:00:50.700 --> 00:00:56.760
带ASP的USB 3.0，因此

00:00:54.090 --> 00:00:58.680
每秒5吉比特

00:00:56.760 --> 00:01:00.570
数字被扔在是的，这是一个

00:00:58.680 --> 00:01:02.969
老罗比的很多数字

00:01:00.570 --> 00:01:05.700
记住在这个光头中，但是

00:01:02.969 --> 00:01:08.189
这一切对我来说都是明智的决定

00:01:05.700 --> 00:01:10.619
尽力做好未来准备

00:01:08.189 --> 00:01:15.570
 USB 3.1 Rev-我们将成为

00:01:10.619 --> 00:01:18.390
能够在五点进入我们的纳斯单元

00:01:15.570 --> 00:01:21.360
每秒的千兆比特数

00:01:18.390 --> 00:01:24.420
 Odroid xu4，但请记住我们的

00:01:21.360 --> 00:01:26.159
与我们的Nass的连接将会

00:01:24.420 --> 00:01:27.900
仍然基于千兆以太网

00:01:26.159 --> 00:01:31.680
因为该板上的以太网端口

00:01:27.900 --> 00:01:35.210
是每秒千兆位或

00:01:31.680 --> 00:01:37.409
无论如何，即使我喜欢

00:01:35.210 --> 00:01:39.780
与驱动器进行五点通信

00:01:37.409 --> 00:01:41.939
然后每秒通讯一次

00:01:39.780 --> 00:01:45.229
到xu4只会是一个

00:01:41.939 --> 00:01:47.820
千兆秒，所以理论上

00:01:45.229 --> 00:01:52.200
其结果是，沟通

00:01:47.820 --> 00:01:54.930
纳斯人的大脑之间仍然

00:01:52.200 --> 00:01:58.049
速度是我们的五倍

00:01:54.930 --> 00:02:02.420
实际的吞吐量-和

00:01:58.049 --> 00:02:08.369
那个很好的单位本身，所以我有这个

00:02:02.420 --> 00:02:11.310
 Cat5点电视上的此设备/ 

00:02:08.369 --> 00:02:13.020
我的鼻孔，让我们快速看一下

00:02:11.310 --> 00:02:15.600
现在我放了两个驱动器

00:02:13.020 --> 00:02:18.750
在这里开车显然不是很稳定

00:02:15.600 --> 00:02:21.000
 II将在一秒钟内完成该工作

00:02:18.750 --> 00:02:23.910
这个家伙刚掉出来没关系

00:02:21.000 --> 00:02:25.920
好，所以我有两个4 TB的驱动器

00:02:23.910 --> 00:02:27.360
只是简单地插入

00:02:25.920 --> 00:02:28.410
后背板，因为我很友善

00:02:27.360 --> 00:02:31.290
玩这个之前

00:02:28.410 --> 00:02:34.200
表演看它如何运作，我

00:02:31.290 --> 00:02:35.670
我什至没有真正打开它

00:02:34.200 --> 00:02:37.860
希望看到我可以插入这些

00:02:35.670 --> 00:02:41.490
开车进入，看看它们如何连接，所以我

00:02:37.860 --> 00:02:45.510
我以前有两个4 TB的驱动器

00:02:41.490 --> 00:02:48.060
备用单元，其背后的想法是

00:02:45.510 --> 00:02:51.390
我将能够使用此设备

00:02:48.060 --> 00:02:54.060
基本上只是多个驱动器

00:02:51.390 --> 00:02:57.330
已连接到我的计算机，所以这是一个

00:02:54.060 --> 00:02:59.580
屁股包括一个屁股围栏这是一个

00:02:57.330 --> 00:03:01.050
硬盘盒很大

00:02:59.580 --> 00:03:02.490
逛街时的差异

00:03:01.050 --> 00:03:05.910
对于这些事情，所以保持这个

00:03:02.490 --> 00:03:09.120
考虑到我们选择了我选择的东西

00:03:05.910 --> 00:03:12.300
因为不是一个屁屁单位，不是

00:03:09.120 --> 00:03:15.360
我们想要我们想要的设备能够给我

00:03:12.300 --> 00:03:19.980
作为外部硬盘访问这些驱动器

00:03:15.360 --> 00:03:22.590
驱动器，所以它有四个SATA背板

00:03:19.980 --> 00:03:26.880
背板最多需要四个SATA 

00:03:22.590 --> 00:03:30.810
驱动器，我将看到

00:03:26.880 --> 00:03:33.330
四个新硬盘就像我一样

00:03:30.810 --> 00:03:36.030
插入USB外置硬盘

00:03:33.330 --> 00:03:39.239
我的电脑就是背后的理论

00:03:36.030 --> 00:03:41.940
所以这里没有突袭

00:03:39.239 --> 00:03:44.880
没有镜像就没有

00:03:41.940 --> 00:03:48.390
只有四个驱动器连接到我的

00:03:44.880 --> 00:03:50.970
 Linux机器使用xu4，因此请使用

00:03:48.390 --> 00:03:53.400
 Linux随附的出色软件

00:03:50.970 --> 00:03:55.590
我可以，因为Linux是

00:03:53.400 --> 00:03:57.540
就像服务器操作系统一样，我们将

00:03:55.590 --> 00:04:00.390
本周学习，我们从中学到了

00:03:57.540 --> 00:04:03.180
像Linux这样的top500 

00:04:00.390 --> 00:04:05.549
在服务器上，因为他们要

00:04:03.180 --> 00:04:08.730
显示为单个SATA 

00:04:05.549 --> 00:04:10.200
外部硬盘驱动器，我可以做什么

00:04:08.730 --> 00:04:13.320
想要和他们在一起，所以我们要玩

00:04:10.200 --> 00:04:15.239
镜像创建数组

00:04:13.320 --> 00:04:17.250
我们将检查所有

00:04:15.239 --> 00:04:19.410
我们可以做的各种事情，但这

00:04:17.250 --> 00:04:20.310
设备最多需要四个驱动器，因此我们

00:04:19.410 --> 00:04:23.400
可以决定

00:04:20.310 --> 00:04:25.020
我们如何将数据分段

00:04:23.400 --> 00:04:26.040
那四个驱动器我只有两个

00:04:25.020 --> 00:04:29.040
为了示范而开车

00:04:26.040 --> 00:04:33.270
今天，这就是它的样子

00:04:29.040 --> 00:04:37.050
那里我们有它，只是一个

00:04:33.270 --> 00:04:40.230
非常基本的SATA背板，这给了我

00:04:37.050 --> 00:04:42.389
尽可能远地访问这些驱动器

00:04:40.230 --> 00:04:44.310
坐骑真的没有那里

00:04:42.389 --> 00:04:46.350
没有驱动器托盘或类似的东西

00:04:44.310 --> 00:04:48.330
这些小塑料家伙

00:04:46.350 --> 00:04:50.070
那将去的前面

00:04:48.330 --> 00:04:52.350
只给它一点点的驱动器

00:04:50.070 --> 00:04:55.669
更大的压力将其推回到后面

00:04:52.350 --> 00:05:00.060
飞机，所以这些像这样进去

00:04:55.669 --> 00:05:02.280
第一驱动器，它挤压正确

00:05:00.060 --> 00:05:04.320
进入第二个背板驱动器

00:05:02.280 --> 00:05:09.120
这两个4 TB只是因为这些

00:05:04.320 --> 00:05:11.960
是我以前备份的两极

00:05:09.120 --> 00:05:15.750
你会比我更好地看到

00:05:11.960 --> 00:05:17.729
在那里我们直接进入那里，然后

00:05:15.750 --> 00:05:26.340
这里的那个家伙会继续前进

00:05:17.729 --> 00:05:30.180
顶部和剪辑像这样，我想我已经

00:05:26.340 --> 00:05:31.770
几乎可以将它剪辑

00:05:30.180 --> 00:05:32.070
然后你关上门，你就很好

00:05:31.770 --> 00:05:33.600
去

00:05:32.070 --> 00:05:36.150
所以我们应该将其启动， 

00:05:33.600 --> 00:05:38.280
看看这将如何出现在我们的

00:05:36.150 --> 00:05:41.669
电脑，我的笔记本电脑在这里， 

00:05:38.280 --> 00:05:45.229
我要做的是让我们迅速

00:05:41.669 --> 00:05:48.570
首先放大并执行LS斜线

00:05:45.229 --> 00:05:50.220
我只想看看dev斜线SD星

00:05:48.570 --> 00:05:54.150
那里有什么，所以我只有一个很难

00:05:50.220 --> 00:05:57.120
驱动器在我的笔记本电脑上，那是我的SD 

00:05:54.150 --> 00:05:58.650
我们也要调教我要缩小

00:05:57.120 --> 00:06:01.860
在这里一点，我要长大

00:05:58.650 --> 00:06:03.660
 G Part II D只是为了让我们得到一个

00:06:01.860 --> 00:06:06.389
看看这是什么样子

00:06:03.660 --> 00:06:09.210
就硬盘驱动器而言，所以我的

00:06:06.389 --> 00:06:12.690
 SD a，那是唯一的硬盘驱动器

00:06:09.210 --> 00:06:14.930
在我的计算机中可用，以便为其供电

00:06:12.690 --> 00:06:20.250
上面只有一个电源按钮， 

00:06:14.930 --> 00:06:26.010
我所拥有的是USB 3.1 USB C 

00:06:20.250 --> 00:06:28.289
按照USB标准插入电缆

00:06:26.010 --> 00:06:29.729
我的笔记本电脑，那是

00:06:28.289 --> 00:06:31.820
我将使用相同的电缆

00:06:29.729 --> 00:06:34.370
连接到我的

00:06:31.820 --> 00:06:36.680
进入我的前任-您现在我刚刚听到

00:06:34.370 --> 00:06:38.000
在我的笔记本电脑上响，让我们看看是什么

00:06:36.680 --> 00:06:40.850
这里发生了什么

00:06:38.000 --> 00:06:44.090
所以在G part ed中，我们将看到什么

00:06:40.850 --> 00:06:47.930
在此处转到G部分II D更新设备

00:06:44.090 --> 00:06:51.010
现在我要3.6 4 TB的驱动器是

00:06:47.930 --> 00:06:52.790
它显示了两个未分配的空间

00:06:51.010 --> 00:06:55.340
那是好消息

00:06:52.790 --> 00:06:57.470
好的，在这里，让我们放大

00:06:55.340 --> 00:07:03.740
一点，让我们运行相同的

00:06:57.470 --> 00:07:08.480
命令，现在我们看到有DB SD c 

00:07:03.740 --> 00:07:11.780
 SD d和SD e现在我想我们是C 

00:07:08.480 --> 00:07:14.900
看到DD和SD e，所以了解这些

00:07:11.780 --> 00:07:18.380
驱动器分配方面

00:07:14.900 --> 00:07:20.810
 Linux对设备进行了细分，因此我们有了

00:07:18.380 --> 00:07:24.320
 SD a作为我实际的内部硬盘驱动器

00:07:20.810 --> 00:07:27.040
我的笔记本电脑SD B大概是第一个

00:07:24.320 --> 00:07:29.660
如果它们是顺序的，则在此插槽

00:07:27.040 --> 00:07:31.730
 SDC将是第二个SD d 

00:07:29.660 --> 00:07:33.860
第三和SD e将是第四

00:07:31.730 --> 00:07:36.470
如果我是对的，那么我们会发现

00:07:33.860 --> 00:07:39.880
我们能够做到，我的意思是我们可以确认

00:07:36.470 --> 00:07:42.850
再次进入G part ed 

00:07:39.880 --> 00:07:45.710
无论如何，这是一种确认的快速方法

00:07:42.850 --> 00:07:47.530
如果我知道密码并输入

00:07:45.710 --> 00:07:51.650
正确地

00:07:47.530 --> 00:07:55.910
是的数据库和SDC，因此数据库将是

00:07:51.650 --> 00:07:58.250
我在机箱SDC中的第一个驱动器

00:07:55.910 --> 00:08:00.080
将是我的第二个，我是什么

00:07:58.250 --> 00:08:03.650
首先要做好

00:08:00.080 --> 00:08:07.790
格式化这些XF屁股，所以我需要一个

00:08:03.650 --> 00:08:13.030
几个工具，所以sudo su和登录为

00:08:07.790 --> 00:08:15.290
超级用户，我要去更新

00:08:13.030 --> 00:08:18.170
为您移动一点

00:08:15.290 --> 00:08:21.820
家里的人我想接受这些吗

00:08:18.170 --> 00:08:21.820
更改为什么是的我这样做

00:08:24.460 --> 00:08:35.080
可以安装XFS布拉格的吗

00:08:32.650 --> 00:08:37.450
看看我已经知道了，所以

00:08:35.080 --> 00:08:39.880
您将考虑使用哪种文件系统

00:08:37.450 --> 00:08:44.020
您的Nass您可能会认为ext4您可能会

00:08:39.880 --> 00:08:47.680
甚至认为现在像黄油FS 

00:08:44.020 --> 00:08:49.630
我有几件事

00:08:47.680 --> 00:08:52.990
在创建这个时会考虑

00:08:49.630 --> 00:08:55.450
首先，数组X FS是一个现代文件

00:08:52.990 --> 00:08:58.390
几乎无限的系统

00:08:55.450 --> 00:09:02.100
我可以拥有的文件数

00:08:58.390 --> 00:09:03.250
纳斯在我的文件系统上是这样

00:09:02.100 --> 00:09:06.520
难以置信的

00:09:03.250 --> 00:09:09.640
就像^，我们什至无法计数

00:09:06.520 --> 00:09:11.920
这么高，它允许大量

00:09:09.640 --> 00:09:14.650
像是大容量驱动器

00:09:11.920 --> 00:09:17.890
现在有现代日记文件系统，但是

00:09:14.650 --> 00:09:20.680
我们的文件系统是我喜欢的一个很棒的文件系统

00:09:17.890 --> 00:09:24.880
黄油FS但是我仍然觉得

00:09:20.680 --> 00:09:28.990
有些担心，有些担心

00:09:24.880 --> 00:09:31.210
黄油FS具有意外的功率损耗，并且

00:09:28.990 --> 00:09:33.670
有时候我们可能会发生

00:09:31.210 --> 00:09:37.120
我们当地的停电

00:09:33.670 --> 00:09:39.990
断电的社区

00:09:37.120 --> 00:09:42.820
时间长到UPS最终放弃

00:09:39.990 --> 00:09:45.850
如果发生这种情况，我不想

00:09:42.820 --> 00:09:48.040
数据丢失或奇偶校验问题，因此X FS是

00:09:45.850 --> 00:09:53.440
能够很好地维护其文件系统

00:09:48.040 --> 00:09:56.230
因为黄油FS具有

00:09:53.440 --> 00:09:59.170
它实际上可能失去平价的问题

00:09:56.230 --> 00:10:00.640
数据，如果断电，那是

00:09:59.170 --> 00:10:02.860
我想避免的事情

00:10:00.640 --> 00:10:06.010
 myarray但因为我曾经丢失任何东西

00:10:02.860 --> 00:10:08.260
奇偶校验数据在我的阵列，然后如果一个驱动器

00:10:06.010 --> 00:10:10.030
失败的话我会有问题

00:10:08.260 --> 00:10:11.650
重建我的数据，我可以

00:10:10.030 --> 00:10:14.050
可能会有一些数据丢失，所以

00:10:11.650 --> 00:10:18.460
那正是我要避免的

00:10:14.050 --> 00:10:20.110
现在我已经安装了x FS Prague 

00:10:18.460 --> 00:10:23.290
这让我现在可以制作FS 

00:10:20.110 --> 00:10:25.300
分区我们的驱动器，然后注意我

00:10:23.290 --> 00:10:27.700
在我想要的终端人员中执行此操作

00:10:25.300 --> 00:10:30.760
在终端上执行此操作，以便您

00:10:27.700 --> 00:10:32.740
可以看到它实际上是如何完成的

00:10:30.760 --> 00:10:34.780
使用GUI，但我希望您成为

00:10:32.740 --> 00:10:37.060
能够在终端上做到这一点，所以之后

00:10:34.780 --> 00:10:37.810
我们知道它将是dev / s DB 

00:10:37.060 --> 00:10:40.660
那是我的

00:10:37.810 --> 00:10:44.380
第一个好吧，所以如果我做一个PI可以看到

00:10:40.660 --> 00:10:47.529
这是用于TB驱动器的

00:10:44.380 --> 00:10:49.540
它们是三点七个TB 

00:10:47.529 --> 00:10:53.100
那就像四点等等等等

00:10:49.540 --> 00:10:56.950
字节都四舍五入到102四

00:10:53.100 --> 00:10:58.990
所以我们要创建一个新分区

00:10:56.950 --> 00:11:03.010
现在，如果您需要帮助，只需按em和

00:10:58.990 --> 00:11:05.470
输入，因为M代表什么帮助

00:11:03.010 --> 00:11:06.520
这很有道理，但您会看到

00:11:05.470 --> 00:11:09.100
当然，我们的第一个命令

00:11:06.520 --> 00:11:11.529
新分区需要的是n 

00:11:09.100 --> 00:11:13.150
所以按n输入分区号

00:11:11.529 --> 00:11:15.610
只需按回车，然后先

00:11:13.150 --> 00:11:16.930
扇区输入，然后最后一个扇区输入

00:11:15.610 --> 00:11:18.550
因为我想用整个驱动器

00:11:16.930 --> 00:11:20.050
您要删除签名并

00:11:18.550 --> 00:11:23.110
那是什么问我嘿

00:11:20.050 --> 00:11:25.980
已经有一个文件系统，它是

00:11:23.110 --> 00:11:29.290
 Luc的加密加密签名

00:11:25.980 --> 00:11:31.930
可能是因为卢克的垃圾场

00:11:29.290 --> 00:11:33.370
已经知道了，因为那是我的老

00:11:31.930 --> 00:11:35.710
备份记得我提到过，但是我

00:11:33.370 --> 00:11:38.230
知道我现在有一个新的备份，所以

00:11:35.710 --> 00:11:39.820
这是多余的，不需要的，并且

00:11:38.230 --> 00:11:42.339
冗余到可以的程度

00:11:39.820 --> 00:11:43.930
毁了，我没有失去任何东西

00:11:42.339 --> 00:11:46.000
我要删除该签名吗

00:11:43.930 --> 00:11:49.000
好吧，我们去吧，我要写

00:11:46.000 --> 00:11:53.440
 W出来，如果我这样做，我现在就这样做了

00:11:49.000 --> 00:11:55.780
 F磁盘-L斜杠dev斜杠s DB I 

00:11:53.440 --> 00:11:58.300
应该看到我现在有一个数据库

00:11:55.780 --> 00:12:01.120
这是我在s DB上的第一个分区

00:11:58.300 --> 00:12:04.780
我机箱中的第一个驱动器，它是一个

00:12:01.120 --> 00:12:06.339
完整的3.7 TB，它设置为

00:12:04.780 --> 00:12:07.839
 Linux文件系统现在无法挂载

00:12:06.339 --> 00:12:12.370
但是因为没有文件

00:12:07.839 --> 00:12:14.410
系统，因此使FS，因此mkfs点x FS 

00:12:12.370 --> 00:12:17.860
因为我们选择了x FS文件系统

00:12:14.410 --> 00:12:20.560
也可以做X T4对，但我们要

00:12:17.860 --> 00:12:22.930
 x FS，我要去开发DB 

00:12:20.560 --> 00:12:27.070
现在其中一件事是真的

00:12:22.930 --> 00:12:29.650
关于x FS的好处是它的速度

00:12:27.070 --> 00:12:33.130
格式化驱动器，这是4 TB 

00:12:29.650 --> 00:12:35.080
开车，我会说可能

00:12:33.130 --> 00:12:38.290
将能够格式化该驱动器

00:12:35.080 --> 00:12:40.600
就像在十分之一的时间里

00:12:38.290 --> 00:12:45.279
将需要4 ext4或类似的东西

00:12:40.600 --> 00:12:47.500
到目前为止，我只有一个驱动器

00:12:45.279 --> 00:12:50.380
格式化x FS我已经对其进行了分区

00:12:47.500 --> 00:12:51.010
具有完整的4 TB分区，我们将

00:12:50.380 --> 00:12:53.170
说

00:12:51.010 --> 00:12:55.330
 7 TB，我正在对其进行格式化

00:12:53.170 --> 00:12:59.350
 XFS使用Linux终端，所以

00:12:55.330 --> 00:13:00.340
这可能是我的，也是我想要的一部分

00:12:59.350 --> 00:13:03.550
在终端给你看这个是

00:13:00.340 --> 00:13:05.860
因为这可能是我的X Xu 

00:13:03.550 --> 00:13:10.480
我可能是SSH使用者，而这可能是

00:13:05.860 --> 00:13:11.740
连接到外部USB 

00:13:10.480 --> 00:13:15.160
已经完成格式化

00:13:11.740 --> 00:13:17.770
 TB可以相信吗

00:13:15.160 --> 00:13:19.810
现在我可以挂载了，所以如果我

00:13:17.770 --> 00:13:24.190
创建了一个挂载点，让我们开始/ mnt 

00:13:19.810 --> 00:13:26.080
让我们在MNT中创建挂载点生成器

00:13:24.190 --> 00:13:29.350
我要叫这个我就叫它

00:13:26.080 --> 00:13:31.090
 DB one只是为了好玩，因为它很容易

00:13:29.350 --> 00:13:33.690
了解那意味着什么

00:13:31.090 --> 00:13:35.920
我想当我学习Linux时

00:13:33.690 --> 00:13:38.290
菜鸟Linux用户

00:13:35.920 --> 00:13:40.900
我认为挂载点是

00:13:38.290 --> 00:13:42.670
真的让我感到困惑，所以如果你已经

00:13:40.900 --> 00:13:44.380
之前从未使用过安装点

00:13:42.670 --> 00:13:47.530
终端或您不确定如何

00:13:44.380 --> 00:13:49.510
作品随时问问题，但

00:13:47.530 --> 00:13:51.460
我会尽力解释

00:13:49.510 --> 00:13:53.590
 Linux的工作方式与说的有很大不同

00:13:51.460 --> 00:13:55.030
 Windows Windows的使用方式类似于插入时

00:13:53.590 --> 00:13:57.070
在驱动器中就像您的C盘

00:13:55.030 --> 00:14:00.130
这是您的D驱动器这是您的II驱动器

00:13:57.070 --> 00:14:02.080
所以在现在的Linux上，您可以插入十个

00:14:00.130 --> 00:14:04.000
驱动器，但没有一个驱动器

00:14:02.080 --> 00:14:06.040
信，他们可以像其中之一

00:14:04.000 --> 00:14:07.900
可以作为您的靴子，其中之一

00:14:06.040 --> 00:14:09.850
可以是您的路线，其中之一可以是

00:14:07.900 --> 00:14:11.110
您的主文件夹可以是其中之一

00:14:09.850 --> 00:14:14.320
您的备份，它们都已连接

00:14:11.110 --> 00:14:15.820
通过文件系统结构这样

00:14:14.320 --> 00:14:20.080
这种情况下，我要把那个

00:14:15.820 --> 00:14:21.400
在/ mnt斜杠STB-1上驱动，因为我

00:14:20.080 --> 00:14:25.900
创建了一个挂载点

00:14:21.400 --> 00:14:28.120
 aka那个时候的文件夹，但是

00:14:25.900 --> 00:14:30.150
当我感到困惑时

00:14:28.120 --> 00:14:33.370
首先开始学习这个东西

00:14:30.150 --> 00:14:34.870
我现在会进入一个数据库吗

00:14:33.370 --> 00:14:36.610
我已经创建了这个文件夹，我可能会把

00:14:34.870 --> 00:14:38.800
那里有一些文件，但后来我不会

00:14:36.610 --> 00:14:41.350
甚至意识到驱动器不是

00:14:38.800 --> 00:14:45.330
当前挂载，所以我的任何文件

00:14:41.350 --> 00:14:48.070
放在那里，实际上是在我的SD上

00:14:45.330 --> 00:14:50.710
将内置硬盘写在我的

00:14:48.070 --> 00:14:53.770
笔记本电脑，因为我尚未连接

00:14:50.710 --> 00:14:56.110
该驱动器到该安装点，因此

00:14:53.770 --> 00:14:58.300
我要那样做的方式

00:14:56.110 --> 00:15:00.460
是永久地做到这一点的方法，但是

00:14:58.300 --> 00:15:04.329
暂时只是为了测试

00:15:00.460 --> 00:15:05.799
我要去斜线开发斜线SDP 

00:15:04.329 --> 00:15:07.749
一个，因为我们知道那是我们的

00:15:05.799 --> 00:15:10.480
我们在该驱动器上的第一个分区

00:15:07.749 --> 00:15:13.899
格式化的XFS，然后我要挂载

00:15:10.480 --> 00:15:16.679
 / mnt斜杠SD b1 

00:15:13.899 --> 00:15:21.399
所以我说的是挂载这个

00:15:16.679 --> 00:15:26.079
将开发中的SD b分区到此安装

00:15:21.399 --> 00:15:29.439
点AKA文件夹SD b一键输入

00:15:26.079 --> 00:15:32.110
如果我进入SD b1的话， 

00:15:29.439 --> 00:15:36.489
一样，但是我在这里所做的是

00:15:32.110 --> 00:15:39.879
实际在外部努力

00:15:36.489 --> 00:15:41.889
现在开车，如果我返回一个文件夹， 

00:15:39.879 --> 00:15:46.059
我卸载的命令是

00:15:41.889 --> 00:15:49.149
如果我去的话，实际上你现在挂载SD b1 

00:15:46.059 --> 00:15:49.509
回到stb-1并做一个LS看起来是

00:15:49.149 --> 00:15:51.819
空的

00:15:49.509 --> 00:15:54.309
好吧，我的文件去了哪里，因为正确

00:15:51.819 --> 00:15:57.369
现在我实际上在看SD，因为

00:15:54.309 --> 00:16:02.889
它没有安装回去再键入

00:15:57.369 --> 00:16:04.839
我的挂载命令现在返回

00:16:02.889 --> 00:16:09.129
看着外置硬盘

00:16:04.839 --> 00:16:13.149
这样我创建的测试文件就打开了

00:16:09.129 --> 00:16:15.220
我看到这讨厌的第一个驱动器

00:16:13.149 --> 00:16:19.259
我们机箱中的是外部机箱

00:16:15.220 --> 00:16:22.199
就在那里，如果没有安装我

00:16:19.259 --> 00:16:24.279
将无法访问这些文件

00:16:22.199 --> 00:16:25.929
我还有另一件事可以做

00:16:24.279 --> 00:16:29.799
这非常有帮助，因为

00:16:25.929 --> 00:16:33.279
可能发生，让我们卸下SD b1， 

00:16:29.799 --> 00:16:35.410
现在它还没有安装好，如果我能将SD设为一

00:16:33.279 --> 00:16:38.319
现在看看会发生什么

00:16:35.410 --> 00:16:41.230
触摸测试-好的，现在有一个文件

00:16:38.319 --> 00:16:42.819
如果我回去，我现在打电话给test2 

00:16:41.230 --> 00:16:44.220
运行我的mount命令，看能做什么

00:16:42.819 --> 00:16:46.869
发生

00:16:44.220 --> 00:16:52.600
你注意到好吗，所以测试两个

00:16:46.869 --> 00:16:55.329
现在进入SD b1并执行LS和

00:16:52.600 --> 00:16:59.049
在heck进行测试的地方测试得很好

00:16:55.329 --> 00:17:03.220
要走了，我已经丢失了文件，不，我没有

00:16:59.049 --> 00:17:05.260
因为测试2在SDA上，因为它

00:17:03.220 --> 00:17:07.329
没有安装，所以现在我很困惑

00:17:05.260 --> 00:17:10.809
这是我小时候的所在

00:17:07.329 --> 00:17:13.689
新手Linux用户，因为如果不是

00:17:10.809 --> 00:17:15.429
已安装，或者如果我忘记安装驱动器

00:17:13.689 --> 00:17:17.350
或者如果我没有正确安装它，或者我

00:17:15.429 --> 00:17:21.160
把它放到错误的地方

00:17:17.350 --> 00:17:22.390
我将文件放在未挂载的挂载点上

00:17:21.160 --> 00:17:24.460
这样他们就不会出现在我的外部

00:17:22.390 --> 00:17:27.190
开车，为什么这很重要

00:17:24.460 --> 00:17:30.640
如果我进行备份怎么办？ 

00:17:27.190 --> 00:17:34.420
备份我的SD硬盘到我的前蒂姆是

00:17:30.640 --> 00:17:37.270
 db1，但是没有挂载

00:17:34.420 --> 00:17:41.020
实际上是从我的SD复制文件

00:17:37.270 --> 00:17:42.820
 A到我的SD相同的硬盘驱动器，然后

00:17:41.020 --> 00:17:45.040
硬盘崩溃，我的备份是

00:17:42.820 --> 00:17:49.000
无用的，绝对无用的

00:17:45.040 --> 00:17:52.810
因此，如果我卸载，该如何解决呢？ 

00:17:49.000 --> 00:17:55.530
该驱动器，所以您挂载SD b1，因为

00:17:52.810 --> 00:17:59.590
我在安装文件夹中，回到那里

00:17:55.530 --> 00:18:05.230
我要删除test2，然后返回

00:17:59.590 --> 00:18:09.400
现在看这个chat不休的CH attr plus 

00:18:05.230 --> 00:18:13.360
我的意思是说让它变成一成不变

00:18:09.400 --> 00:18:17.710
这样就无法将其写入

00:18:13.360 --> 00:18:20.980
 SD b1好的，所以现在如果我进入stb-1并

00:18:17.710 --> 00:18:23.500
我再次尝试触摸测试2，它说不

00:18:20.980 --> 00:18:25.480
这样的文件或目录好吗

00:18:23.500 --> 00:18:29.200
知道该目录中有一个文件

00:18:25.480 --> 00:18:30.880
为什么我不能触摸我的文件哦，我没有

00:18:29.200 --> 00:18:33.430
土墩在我的目录中，但我还没有

00:18:30.880 --> 00:18:36.790
安装我的驱动器，因此

00:18:33.430 --> 00:18:40.030
这样做是因为现在我不能写

00:18:36.790 --> 00:18:41.920
任何东西到挂载点，所以现在

00:18:40.030 --> 00:18:45.460
只可以用我的备份

00:18:41.920 --> 00:18:47.890
如果安装驱动器，则在安装时起作用

00:18:45.460 --> 00:18:49.600
事实证明，所以让我们现在跳回到这里

00:18:47.890 --> 00:18:52.870
那是一成不变的，我无能为力

00:18:49.600 --> 00:18:55.240
在这里我不能在这里建立目录

00:18:52.870 --> 00:18:57.220
会说操作不允许它上升

00:18:55.240 --> 00:18:59.200
文件夹，现在让我们运行挂载

00:18:57.220 --> 00:19:00.960
再次命令，所以我推控制R 

00:18:59.200 --> 00:19:04.270
可以追溯到我的历史

00:19:00.960 --> 00:19:06.040
现在，如果我注意到它现在安装得很好

00:19:04.270 --> 00:19:08.530
我要回到STB-1 

00:19:06.040 --> 00:19:12.640
我现在要看我的测试文件

00:19:08.530 --> 00:19:16.330
让我们尝试触摸测试以触摸我不能

00:19:12.640 --> 00:19:18.790
打字和口语测试两个，我们去吧

00:19:16.330 --> 00:19:21.820
现在您注意到它确实起作用了，因为

00:19:18.790 --> 00:19:24.730
它已经安装好了，所以实际上

00:19:21.820 --> 00:19:27.160
 STB-1现在是外部硬盘驱动器

00:19:24.730 --> 00:19:29.710
如果您不确定是否已安装

00:19:27.160 --> 00:19:30.700
看这个坐骑，它给了我一个清单

00:19:29.710 --> 00:19:32.790
所有安装正确的驱动器

00:19:30.700 --> 00:19:37.000
那是一堆杂物，所以坐骑

00:19:32.790 --> 00:19:39.220
管道grep SD可以给我一个

00:19:37.000 --> 00:19:42.960
显示stb-1的那一行

00:19:39.220 --> 00:19:44.170
告诉我dev stb-1安装在

00:19:42.960 --> 00:19:46.450
 / mnt 

00:19:44.170 --> 00:19:49.510
大幅削减SDP如果我

00:19:46.450 --> 00:19:52.600
卸载并运行完全相同的

00:19:49.510 --> 00:19:55.330
命令没有输出，因为它不是

00:19:52.600 --> 00:19:58.390
目前已安装，所以我知道我需要

00:19:55.330 --> 00:20:02.050
安装它再做一次

00:19:58.390 --> 00:20:04.720
现在我们去运行该命令，那么

00:20:02.050 --> 00:20:06.460
它是不是在做它的坐骑

00:20:04.720 --> 00:20:09.040
我所有已安装东西的输出

00:20:06.460 --> 00:20:10.870
是的，但是我要抓紧的是

00:20:09.040 --> 00:20:14.050
基本上相当于Linux的嘿

00:20:10.870 --> 00:20:15.640
搜索该SD的输出为1并

00:20:14.050 --> 00:20:17.380
点击进入，这可能是我的一切

00:20:15.640 --> 00:20:18.880
可以搜索开发人员，它将给我

00:20:17.380 --> 00:20:20.890
包含dev一词的所有内容

00:20:18.880 --> 00:20:23.440
好吧，不，我不需要我只想要

00:20:20.890 --> 00:20:24.910
 SDP一个，这给了我，这是一个

00:20:23.440 --> 00:20:26.440
当我喜欢它时会有点混乱

00:20:24.910 --> 00:20:29.770
那但是你去那里所以你可以看到

00:20:26.440 --> 00:20:33.340
我已经在MN t / stb-1上开发了一个数据库DB 

00:20:29.770 --> 00:20:35.830
类型是我的文件XFS 

00:20:33.340 --> 00:20:39.480
系统，可以开始使用了，所以我有我的

00:20:35.830 --> 00:20:41.650
第一次开车准备去我的纳斯

00:20:39.480 --> 00:20:44.620
第二个驱动器将恰好是

00:20:41.650 --> 00:20:46.420
一样，除了我们知道这是我的SDC，所以

00:20:44.620 --> 00:20:49.840
您按顺序执行这些步骤

00:20:46.420 --> 00:20:54.190
现在创建它，因为这不是一个

00:20:49.840 --> 00:20:56.500
我可以放入4 TB驱动器的RAID单元

00:20:54.190 --> 00:20:58.740
我有2个4 TB的驱动器，我也可以

00:20:56.500 --> 00:21:02.320
除此之外，还要放入1 TB 

00:20:58.740 --> 00:21:05.560
我可以放500场演出，这样我就可以使用

00:21:02.320 --> 00:21:10.780
混合驱动器，每个驱动器

00:21:05.560 --> 00:21:15.070
将显示为TB SDC DE D 

00:21:10.780 --> 00:21:17.620
和E，然后您将拥有

00:21:15.070 --> 00:21:20.290
现在可以突袭他们

00:21:17.620 --> 00:21:21.730
当然如果你要四个TB 

00:21:20.290 --> 00:21:22.870
好吧，你可以将它们设置为突袭1 

00:21:21.730 --> 00:21:24.910
但是如果您有一个TB 

00:21:22.870 --> 00:21:26.710
足够的500 GB容量

00:21:24.910 --> 00:21:29.350
真正将它们连接在一起并使用

00:21:26.710 --> 00:21:31.630
他们我们将要做的事情

00:21:29.350 --> 00:21:34.360
本系列的课程是我们要

00:21:31.630 --> 00:21:37.989
展示我们如何实际使用

00:21:34.360 --> 00:21:40.929
这个单位或与此类似的单位

00:21:37.989 --> 00:21:44.679
为了使用Linux创建阵列

00:21:40.929 --> 00:21:46.570
可以让我混合的工具

00:21:44.679 --> 00:21:48.879
驱动器能够创建冗余

00:21:46.570 --> 00:21:51.009
我们将创造各种

00:21:48.879 --> 00:21:53.470
非常酷的东西，以便您可以

00:21:51.009 --> 00:21:55.269
了解底层文件系统

00:21:53.470 --> 00:21:57.039
特质，我想即使是今晚

00:21:55.269 --> 00:21:58.600
您可能已经学到了两件事

00:21:57.039 --> 00:22:00.519
请在下面发表评论让我知道

00:21:58.600 --> 00:22:03.129
你确实在这里学习，如果有的话

00:22:00.519 --> 00:22:06.700
我特别感兴趣

00:22:03.129 --> 00:22:07.690
今晚和通过

00:22:06.700 --> 00:22:09.279
该系列的课程，我们将成为

00:22:07.690 --> 00:22:12.970
学习各种各样的东西

00:22:09.279 --> 00:22:15.489
后面的小饰品

00:22:12.970 --> 00:22:19.509
我们习惯喜欢的用户界面

00:22:15.489 --> 00:22:21.849
像在Nass上的界面一样安装

00:22:19.509 --> 00:22:23.139
单位，我们所看到的只是网络

00:22:21.849 --> 00:22:24.489
界面很好，我们将继续工作

00:22:23.139 --> 00:22:26.830
在引擎盖下，以便我们了解如何

00:22:24.489 --> 00:22:29.139
一切正常，并确保我们的数据安全

00:22:26.830 --> 00:22:32.019
所以这很酷，嘿，我们必须

00:22:29.139 --> 00:22:34.769
休息片刻，我会是对的

00:22:32.019 --> 00:22:34.769
背贴

00:22:34.960 --> 00:22:42.739
 [音乐] 

00:22:48.370 --> 00:22:51.500
 [音乐] 

00:22:52.499 --> 00:22:58.419
欢迎回来，这是第五类

00:22:54.820 --> 00:22:59.619
科技电视现在我们的直播

00:22:58.419 --> 00:23:01.149
即使您一直在观看

00:22:59.619 --> 00:23:04.330
要求我们确实有一些疑问

00:23:01.149 --> 00:23:06.759
在我们不和谐聊天的第一个问题中

00:23:04.330 --> 00:23:08.919
来自沼泽男子，问我好吗

00:23:06.759 --> 00:23:10.389
我在连接上演示的笔记本电脑

00:23:08.919 --> 00:23:11.589
现在我已经在NASA上提到过

00:23:10.389 --> 00:23:14.229
节目的顶部，但您可能没有

00:23:11.589 --> 00:23:16.119
抓住它，抓住它，我会

00:23:14.229 --> 00:23:17.320
关闭电源，因为我已经卸载了

00:23:16.119 --> 00:23:18.639
它与你挂载命令，所以我

00:23:17.320 --> 00:23:20.229
只是要按住那个电源按钮

00:23:18.639 --> 00:23:21.579
关闭那些驱动器的电源，这样我就可以安全地

00:23:20.229 --> 00:23:23.619
将它移到那里

00:23:21.579 --> 00:23:24.940
记住，这些是旋转驱动器

00:23:23.619 --> 00:23:26.109
你不想移动这个

00:23:24.940 --> 00:23:27.969
他们在旋转，因为你可以

00:23:26.109 --> 00:23:30.070
实际造成身体伤害

00:23:27.969 --> 00:23:32.139
驱动器盘有针

00:23:30.070 --> 00:23:33.969
基本上我们会让他们想到

00:23:32.139 --> 00:23:37.299
像电唱机一样的老唱片

00:23:33.969 --> 00:23:39.249
 LPS，您的脑袋悬停在

00:23:37.299 --> 00:23:41.919
上方的空气垫很小

00:23:39.249 --> 00:23:44.739
非常敏感的磁碟，如果我

00:23:41.919 --> 00:23:48.579
在开机时移动这些

00:23:44.739 --> 00:23:52.509
盘片以7,200转旋转

00:23:48.579 --> 00:23:54.389
每分钟，所以如果我将其移动

00:23:52.509 --> 00:23:57.940
头碰盘子的方式

00:23:54.389 --> 00:24:00.279
可能会导致硬盘数据丢失

00:23:57.940 --> 00:24:03.129
失败，所以我总是关闭电源

00:24:00.279 --> 00:24:07.179
在我移动它之前，我如何连接它

00:24:03.129 --> 00:24:10.179
我只是在这里拔掉电源

00:24:07.179 --> 00:24:14.559
是单位的背面，我所拥有的

00:24:10.179 --> 00:24:18.549
是USBC电缆好吗，就是这样

00:24:14.559 --> 00:24:22.089
在此端，现在在笔记本端

00:24:18.549 --> 00:24:24.369
只是要拔掉插头，这就是

00:24:22.089 --> 00:24:27.999
同一根电缆的另一端，所以我

00:24:24.369 --> 00:24:30.789
 USB C，我有USB a，因此允许

00:24:27.999 --> 00:24:35.859
我将其插入笔记本电脑或其他任何设备

00:24:30.789 --> 00:24:37.989
 USB 3.0设备，这就是我的Odroid xu4 

00:24:35.859 --> 00:24:41.259
这就是我们希望实现的目标

00:24:37.989 --> 00:24:43.359
通过这个项目的过程

00:24:41.259 --> 00:24:44.529
是真正从一个电源

00:24:43.359 --> 00:24:46.749
登上电脑的原因

00:24:44.529 --> 00:24:47.800
选择xu4是因为它支持

00:24:46.749 --> 00:24:50.320
你asp 

00:24:47.800 --> 00:24:52.360
这是USB连接的模糊协议

00:24:50.320 --> 00:24:55.840
这意味着它将能够得到

00:24:52.360 --> 00:24:59.200
每秒5吉比特的数据传输

00:24:55.840 --> 00:25:01.240
与标准USB不同的是， 

00:24:59.200 --> 00:25:03.970
将会更快

00:25:01.240 --> 00:25:05.830
还要多一个合理的百分比，这样

00:25:03.970 --> 00:25:07.180
我被连接到这不是ssh 

00:25:05.830 --> 00:25:10.390
连接或类似的东西

00:25:07.180 --> 00:25:13.840
是直接USB连接，就像

00:25:10.390 --> 00:25:16.060
因为我们的Odroid xu 

00:25:13.840 --> 00:25:17.620
我不是在看Odroid xu 

00:25:16.060 --> 00:25:20.380
今晚，我实际上正在这样做

00:25:17.620 --> 00:25:23.250
完全是为了使用我的笔记本电脑

00:25:20.380 --> 00:25:26.500
在演示中，这是一系列的

00:25:23.250 --> 00:25:29.410
的示范和项目

00:25:26.500 --> 00:25:33.160
将会导致我们的地雷

00:25:29.410 --> 00:25:36.820
猫五点电视--就是这里

00:25:33.160 --> 00:25:39.550
会聚在一起，但徐4是

00:25:36.820 --> 00:25:41.620
将成为其中的步骤之一

00:25:39.550 --> 00:25:42.760
创建这个单位的过程，但我

00:25:41.620 --> 00:25:45.220
想告诉你那种

00:25:42.760 --> 00:25:46.720
潜在的我们

00:25:45.220 --> 00:25:49.600
设置好东西，我要你

00:25:46.720 --> 00:25:51.400
了解这些小东西中的一些

00:25:49.600 --> 00:25:52.660
 Linux命令在终端中的工作方式为

00:25:51.400 --> 00:25:54.520
好吧，因为一切都会做

00:25:52.660 --> 00:25:58.510
在终端中还有其他问题

00:25:54.520 --> 00:26:01.570
我们bp9您非常欢迎foo 

00:25:58.510 --> 00:26:03.940
叫这个-是的，现在在这个

00:26:01.570 --> 00:26:08.440
在这种情况下，此为

00:26:03.940 --> 00:26:10.600
直接连接存储的想法是

00:26:08.440 --> 00:26:14.710
我们将采取这个-单位和

00:26:10.600 --> 00:26:17.800
将其变成伪nas或备份

00:26:14.710 --> 00:26:20.290
系统使用Xu 4，所以Xu 4是

00:26:17.800 --> 00:26:21.820
将成为这个的大脑， 

00:26:20.290 --> 00:26:24.430
然后我将能够访问它

00:26:21.820 --> 00:26:25.930
作为网络附加存储，所以我不是

00:26:24.430 --> 00:26:27.820
必须将其插入我的笔记本电脑

00:26:25.930 --> 00:26:31.240
知道我将能够访问它

00:26:27.820 --> 00:26:33.010
通过Wi-Fi，通过以太网和其他

00:26:31.240 --> 00:26:34.870
我还想念其他事情吗

00:26:33.010 --> 00:26:37.170
现在的问题我在看聊天室

00:26:34.870 --> 00:26:40.150
在我的手机上，因此屏幕是

00:26:37.170 --> 00:26:42.400
比较小，如果事情做的话

00:26:40.150 --> 00:26:44.560
倾向于在屏幕旁边飞

00:26:42.400 --> 00:26:46.240
还有其他关于

00:26:44.560 --> 00:26:50.020
项目或我在这里教的内容

00:26:46.240 --> 00:26:53.500
今晚我很高兴看到

00:26:50.020 --> 00:26:56.590
大家都在这里，感谢您的光临

00:26:53.500 --> 00:27:02.170
在这里，我认为那真的是

00:26:56.590 --> 00:27:04.240
主要问题我是bp9是，所以你

00:27:02.170 --> 00:27:06.670
现在想知道我如何能够

00:27:04.240 --> 00:27:08.740
直接连接到NASS单元

00:27:06.670 --> 00:27:10.810
因为它不是驴子，完全像

00:27:08.740 --> 00:27:12.880
 foo说它是直接附加的

00:27:10.810 --> 00:27:15.580
在这种情况下的存储就是全部

00:27:12.880 --> 00:27:17.140
将会改变，如果

00:27:15.580 --> 00:27:19.810
您不熟悉X，因为您喜欢哦

00:27:17.140 --> 00:27:21.760
 Droid X you因为它是一台微型计算机，所以

00:27:19.810 --> 00:27:23.770
想起Raspberry Pi，这是非常非常

00:27:21.760 --> 00:27:26.710
小型计算机适合我的口袋

00:27:23.770 --> 00:27:29.410
在这里我希望我能随身携带，但在那里

00:27:26.710 --> 00:27:31.870
如果你能原谅我一个

00:27:29.410 --> 00:27:35.320
一会儿我就可以抓住我

00:27:31.870 --> 00:27:39.010
在这里离开这里，我们去，所以这是一个

00:27:35.320 --> 00:27:40.390
 Q没有机器人徐，Q代表

00:27:39.010 --> 00:27:43.750
安静，因为它有这么大

00:27:40.390 --> 00:27:46.720
散热器，所以这是板

00:27:43.750 --> 00:27:49.000
要为我们的nass单元供电， 

00:27:46.720 --> 00:27:51.580
这将成为一个屁股，这将是

00:27:49.000 --> 00:27:54.310
电脑将要去的大脑

00:27:51.580 --> 00:27:57.400
强大的功能Debian Linux Debian 10 

00:27:54.310 --> 00:27:59.560
现在在微型SD上

00:27:57.400 --> 00:28:01.660
将要在emmc上，然后我们要

00:27:59.560 --> 00:28:04.960
在安装某种形式的安装

00:28:01.660 --> 00:28:07.840
为了以这种方式隐藏它

00:28:04.960 --> 00:28:09.340
它会成为单元本身的一部分

00:28:07.840 --> 00:28:12.490
还有我们可以放进去的东西

00:28:09.340 --> 00:28:14.110
你知道你是否有一个房间

00:28:12.490 --> 00:28:15.640
壁橱或你可以设置的东西

00:28:14.110 --> 00:28:18.400
起来，然后运行以太网电缆

00:28:15.640 --> 00:28:20.290
拥有千兆以太网的

00:28:18.400 --> 00:28:21.730
可以让您完全访问所有

00:28:20.290 --> 00:28:23.560
文件并进行备份和

00:28:21.730 --> 00:28:27.610
一切都很好，谢谢

00:28:23.560 --> 00:28:29.230
大家都欢迎我的问题我

00:28:27.610 --> 00:28:33.130
欢迎您的问题，您可以发送电子邮件

00:28:29.230 --> 00:28:35.820
如果您住在五类点播电视

00:28:33.130 --> 00:28:35.820
有了

