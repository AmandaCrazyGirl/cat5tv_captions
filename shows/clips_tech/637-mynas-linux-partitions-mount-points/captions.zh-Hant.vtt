WEBVTT
Kind: captions
Language: zh-Hant

00:00:02.179 --> 00:00:09.389
在過去的幾周中，我和

00:00:05.549 --> 00:00:12.750
團隊一直在談論我們的

00:00:09.389 --> 00:00:17.580
我們會叫我的屁股你的屁股我的

00:00:12.750 --> 00:00:18.990
屁股，但吉五點電視--我在哪裡

00:00:17.580 --> 00:00:20.760
將把所有鏈接的產品

00:00:18.990 --> 00:00:23.460
我們將要看的是

00:00:20.760 --> 00:00:26.220
討論一直圍繞著

00:00:23.460 --> 00:00:29.550
決定好吧，我們採用USB 3.0嗎

00:00:26.220 --> 00:00:30.900
這樣我們也可以獲取eSATA端口

00:00:29.550 --> 00:00:32.520
最多可以給我們六個

00:00:30.900 --> 00:00:38.250
每秒千兆字節，還是我們直走

00:00:32.520 --> 00:00:41.399
到USB 3.1 Rev-理論上可以

00:00:38.250 --> 00:00:44.219
每秒最多可以給我們10吉比特

00:00:41.399 --> 00:00:45.570
但是關於這一點的一個警告是

00:00:44.219 --> 00:00:47.850
我們將要使用的設備

00:00:45.570 --> 00:00:50.700
在連接-這是一個奇怪的類固醇xu4 

00:00:47.850 --> 00:00:54.090
單板計算機只能

00:00:50.700 --> 00:00:56.760
帶ASP的USB 3.0，因此

00:00:54.090 --> 00:00:58.680
每秒5吉比特

00:00:56.760 --> 00:01:00.570
數字被扔在是的，這是一個

00:00:58.680 --> 00:01:02.969
老羅比的很多數字

00:01:00.570 --> 00:01:05.700
記住在這個光頭中，但是

00:01:02.969 --> 00:01:08.189
這一切對我來說都是明智的決定

00:01:05.700 --> 00:01:10.619
盡力做好未來準備

00:01:08.189 --> 00:01:15.570
 USB 3.1 Rev-我們將成為

00:01:10.619 --> 00:01:18.390
能夠在五點進入我們的納斯單元

00:01:15.570 --> 00:01:21.360
每秒的千兆比特數

00:01:18.390 --> 00:01:24.420
 Odroid xu4，但請記住我們的

00:01:21.360 --> 00:01:26.159
與我們的Nass的連接將會

00:01:24.420 --> 00:01:27.900
仍然基於千兆以太網

00:01:26.159 --> 00:01:31.680
因為該板上的以太網端口

00:01:27.900 --> 00:01:35.210
是每秒千兆位或

00:01:31.680 --> 00:01:37.409
無論如何，即使我喜歡

00:01:35.210 --> 00:01:39.780
與驅動器進行五點通信

00:01:37.409 --> 00:01:41.939
然後每秒通訊一次

00:01:39.780 --> 00:01:45.229
到xu4只會是一個

00:01:41.939 --> 00:01:47.820
千兆秒，所以理論上

00:01:45.229 --> 00:01:52.200
其結果是，溝通

00:01:47.820 --> 00:01:54.930
納斯人的大腦之間仍然

00:01:52.200 --> 00:01:58.049
速度是我們的五倍

00:01:54.930 --> 00:02:02.420
實際的吞吐量-和

00:01:58.049 --> 00:02:08.369
那個很好的單位本身，所以我有這個

00:02:02.420 --> 00:02:11.310
 Cat5點電視上的此設備/ 

00:02:08.369 --> 00:02:13.020
我的鼻孔，讓我們快速看一下

00:02:11.310 --> 00:02:15.600
現在我放了兩個驅動器

00:02:13.020 --> 00:02:18.750
在這裡開車顯然不是很穩定

00:02:15.600 --> 00:02:21.000
 II將在一秒鐘內完成該工作

00:02:18.750 --> 00:02:23.910
這個傢伙剛掉出來沒關係

00:02:21.000 --> 00:02:25.920
好，所以我有兩個4 TB的驅動器

00:02:23.910 --> 00:02:27.360
只是簡單地插入

00:02:25.920 --> 00:02:28.410
後背板，因為我很友善

00:02:27.360 --> 00:02:31.290
玩這個之前

00:02:28.410 --> 00:02:34.200
表演看它如何運作，我

00:02:31.290 --> 00:02:35.670
我什至沒有真正打開它

00:02:34.200 --> 00:02:37.860
希望看到我可以插入這些

00:02:35.670 --> 00:02:41.490
開車進入，看看它們如何連接，所以我

00:02:37.860 --> 00:02:45.510
我以前有兩個4 TB的驅動器

00:02:41.490 --> 00:02:48.060
備用單元，其背後的想法是

00:02:45.510 --> 00:02:51.390
我將能夠使用此設備

00:02:48.060 --> 00:02:54.060
基本上只是多個驅動器

00:02:51.390 --> 00:02:57.330
已連接到我的計算機，所以這是一個

00:02:54.060 --> 00:02:59.580
屁股包括一個屁股圍欄這是一個

00:02:57.330 --> 00:03:01.050
硬盤盒很大

00:02:59.580 --> 00:03:02.490
逛街時的差異

00:03:01.050 --> 00:03:05.910
對於這些事情，所以保持這個

00:03:02.490 --> 00:03:09.120
考慮到我們選擇了我選擇的東西

00:03:05.910 --> 00:03:12.300
因為不是一個屁屁單位，不是

00:03:09.120 --> 00:03:15.360
我們想要我們想要的設備能夠給我

00:03:12.300 --> 00:03:19.980
作為外部硬盤訪問這些驅動器

00:03:15.360 --> 00:03:22.590
驅動器，所以它有四個SATA背板

00:03:19.980 --> 00:03:26.880
背板最多需要四個SATA 

00:03:22.590 --> 00:03:30.810
驅動器，我將看到

00:03:26.880 --> 00:03:33.330
四個新硬盤就像我一樣

00:03:30.810 --> 00:03:36.030
插入USB外置硬盤

00:03:33.330 --> 00:03:39.239
我的電腦就是背後的理論

00:03:36.030 --> 00:03:41.940
所以這裡沒有突襲

00:03:39.239 --> 00:03:44.880
沒有鏡像就沒有

00:03:41.940 --> 00:03:48.390
只有四個驅動器連接到我的

00:03:44.880 --> 00:03:50.970
 Linux機器使用xu4，因此請使用

00:03:48.390 --> 00:03:53.400
 Linux隨附的出色軟件

00:03:50.970 --> 00:03:55.590
我可以，因為Linux是

00:03:53.400 --> 00:03:57.540
就像服務器操作系統一樣，我們將

00:03:55.590 --> 00:04:00.390
本週學習，我們從中學到了

00:03:57.540 --> 00:04:03.180
像Linux這樣的top500 

00:04:00.390 --> 00:04:05.549
在服務器上，因為他們要

00:04:03.180 --> 00:04:08.730
顯示為單個SATA 

00:04:05.549 --> 00:04:10.200
外部硬盤驅動器，我可以做什麼

00:04:08.730 --> 00:04:13.320
想要和他們在一起，所以我們要玩

00:04:10.200 --> 00:04:15.239
鏡像創建數組

00:04:13.320 --> 00:04:17.250
我們將檢查所有

00:04:15.239 --> 00:04:19.410
我們可以做的各種事情，但這

00:04:17.250 --> 00:04:20.310
設備最多需要四個驅動器，因此我們

00:04:19.410 --> 00:04:23.400
可以決定

00:04:20.310 --> 00:04:25.020
我們如何將數據分段

00:04:23.400 --> 00:04:26.040
那四個驅動器我只有兩個

00:04:25.020 --> 00:04:29.040
為了示範而開車

00:04:26.040 --> 00:04:33.270
今天，這就是它的樣子

00:04:29.040 --> 00:04:37.050
那裡我們有它，只是一個

00:04:33.270 --> 00:04:40.230
非常基本的SATA背板，這給了我

00:04:37.050 --> 00:04:42.389
盡可能遠地訪問這些驅動器

00:04:40.230 --> 00:04:44.310
坐騎真的沒有那裡

00:04:42.389 --> 00:04:46.350
沒有驅動器托盤或類似的東西

00:04:44.310 --> 00:04:48.330
這些小塑料傢伙

00:04:46.350 --> 00:04:50.070
那將去的前面

00:04:48.330 --> 00:04:52.350
只給它一點點的驅動器

00:04:50.070 --> 00:04:55.669
更大的壓力將其推回到後面

00:04:52.350 --> 00:05:00.060
飛機，所以這些像這樣進去

00:04:55.669 --> 00:05:02.280
第一驅動器，它擠壓正確

00:05:00.060 --> 00:05:04.320
進入第二個背板驅動器

00:05:02.280 --> 00:05:09.120
這兩個4 TB只是因為這些

00:05:04.320 --> 00:05:11.960
是我以前備份的兩極

00:05:09.120 --> 00:05:15.750
你會比我更好地看到

00:05:11.960 --> 00:05:17.729
在那裡我們直接進入那裡，然後

00:05:15.750 --> 00:05:26.340
這裡的那個傢伙會繼續前進

00:05:17.729 --> 00:05:30.180
頂部和剪輯像這樣，我想我已經

00:05:26.340 --> 00:05:31.770
幾乎可以將它剪輯

00:05:30.180 --> 00:05:32.070
然後你關上門，你就很好

00:05:31.770 --> 00:05:33.600
去

00:05:32.070 --> 00:05:36.150
所以我們應該將其啟動， 

00:05:33.600 --> 00:05:38.280
看看這將如何出現在我們的

00:05:36.150 --> 00:05:41.669
電腦，我的筆記本電腦在這裡， 

00:05:38.280 --> 00:05:45.229
我要做的是讓我們迅速

00:05:41.669 --> 00:05:48.570
首先放大並執行LS斜線

00:05:45.229 --> 00:05:50.220
我只想看看dev斜線SD星

00:05:48.570 --> 00:05:54.150
那裡有什麼，所以我只有一個很難

00:05:50.220 --> 00:05:57.120
驅動器在我的筆記本電腦上，那是我的SD 

00:05:54.150 --> 00:05:58.650
我們也要調教我要縮小

00:05:57.120 --> 00:06:01.860
在這裡一點，我要長大

00:05:58.650 --> 00:06:03.660
 G Part II D只是為了讓我們得到一個

00:06:01.860 --> 00:06:06.389
看看這是什麼樣子

00:06:03.660 --> 00:06:09.210
就硬盤驅動器而言，所以我的

00:06:06.389 --> 00:06:12.690
 SD a，那是唯一的硬盤驅動器

00:06:09.210 --> 00:06:14.930
在我的計算機中可用，以便為其供電

00:06:12.690 --> 00:06:20.250
上面只有一個電源按鈕， 

00:06:14.930 --> 00:06:26.010
我所擁有的是USB 3.1 USB C 

00:06:20.250 --> 00:06:28.289
按照USB標準插入電纜

00:06:26.010 --> 00:06:29.729
我的筆記本電腦，那是

00:06:28.289 --> 00:06:31.820
我將使用相同的電纜

00:06:29.729 --> 00:06:34.370
連接到我的

00:06:31.820 --> 00:06:36.680
進入我的前任-您現在我剛剛聽到

00:06:34.370 --> 00:06:38.000
在我的筆記本電腦上響，讓我們看看是什麼

00:06:36.680 --> 00:06:40.850
這裡發生了什麼

00:06:38.000 --> 00:06:44.090
所以在G part ed中，我們將看到什麼

00:06:40.850 --> 00:06:47.930
在此處轉到G部分II D更新設備

00:06:44.090 --> 00:06:51.010
現在我要3.6 4 TB的驅動器是

00:06:47.930 --> 00:06:52.790
它顯示了兩個未分配的空間

00:06:51.010 --> 00:06:55.340
那是好消息

00:06:52.790 --> 00:06:57.470
好的，在這裡，讓我們放大

00:06:55.340 --> 00:07:03.740
一點，讓我們運行相同的

00:06:57.470 --> 00:07:08.480
命令，現在我們看到有DB SD c 

00:07:03.740 --> 00:07:11.780
 SD d和SD e現在我想我們是C 

00:07:08.480 --> 00:07:14.900
看到DD和SD e，所以了解這些

00:07:11.780 --> 00:07:18.380
驅動器分配方面

00:07:14.900 --> 00:07:20.810
 Linux對設備進行了細分，因此我們有了

00:07:18.380 --> 00:07:24.320
 SD a作為我實際的內部硬盤驅動器

00:07:20.810 --> 00:07:27.040
我的筆記本電腦SD B大概是第一個

00:07:24.320 --> 00:07:29.660
如果它們是順序的，則在此插槽

00:07:27.040 --> 00:07:31.730
 SDC將是第二個SD d 

00:07:29.660 --> 00:07:33.860
第三和SD e將是第四

00:07:31.730 --> 00:07:36.470
如果我是對的，那麼我們會發現

00:07:33.860 --> 00:07:39.880
我們能夠做到，我的意思是我們可以確認

00:07:36.470 --> 00:07:42.850
再次進入G part ed 

00:07:39.880 --> 00:07:45.710
無論如何，這是一種確認的快速方法

00:07:42.850 --> 00:07:47.530
如果我知道密碼並輸入

00:07:45.710 --> 00:07:51.650
正確地

00:07:47.530 --> 00:07:55.910
是的數據庫和SDC，因此數據庫將是

00:07:51.650 --> 00:07:58.250
我在機箱SDC中的第一個驅動器

00:07:55.910 --> 00:08:00.080
將是我的第二個，我是什麼

00:07:58.250 --> 00:08:03.650
首先要做好

00:08:00.080 --> 00:08:07.790
格式化這些XF屁股，所以我需要一個

00:08:03.650 --> 00:08:13.030
幾個工具，所以sudo su和登錄為

00:08:07.790 --> 00:08:15.290
超級用戶，我要去更新

00:08:13.030 --> 00:08:18.170
為您移動一點

00:08:15.290 --> 00:08:21.820
家裡的人我想接受這些嗎

00:08:18.170 --> 00:08:21.820
更改為什麼是的我這樣做

00:08:24.460 --> 00:08:35.080
可以安裝XFS布拉格的嗎

00:08:32.650 --> 00:08:37.450
看看我已經知道了，所以

00:08:35.080 --> 00:08:39.880
您將考慮使用哪種文件系統

00:08:37.450 --> 00:08:44.020
您的Nass您可能會認為ext4您可能會

00:08:39.880 --> 00:08:47.680
甚至認為現在像黃油FS 

00:08:44.020 --> 00:08:49.630
我有幾件事

00:08:47.680 --> 00:08:52.990
在創建這個時會考慮

00:08:49.630 --> 00:08:55.450
首先，數組X FS是一個現代文件

00:08:52.990 --> 00:08:58.390
幾乎無限的系統

00:08:55.450 --> 00:09:02.100
我可以擁有的文件數

00:08:58.390 --> 00:09:03.250
納斯在我的文件系統上是這樣

00:09:02.100 --> 00:09:06.520
難以置信的

00:09:03.250 --> 00:09:09.640
就像^，我們什至無法計數

00:09:06.520 --> 00:09:11.920
這麼高，它允許大量

00:09:09.640 --> 00:09:14.650
像是大容量驅動器

00:09:11.920 --> 00:09:17.890
現在有現代日記文件系統，但是

00:09:14.650 --> 00:09:20.680
我們的文件系統是我喜歡的一個很棒的文件系統

00:09:17.890 --> 00:09:24.880
黃油FS但是我仍然覺得

00:09:20.680 --> 00:09:28.990
有些擔心，有些擔心

00:09:24.880 --> 00:09:31.210
黃油FS具有意外的功率損耗，並且

00:09:28.990 --> 00:09:33.670
有時候我們可能會發生

00:09:31.210 --> 00:09:37.120
我們當地的停電

00:09:33.670 --> 00:09:39.990
斷電的社區

00:09:37.120 --> 00:09:42.820
時間長到UPS最終放棄

00:09:39.990 --> 00:09:45.850
如果發生這種情況，我不想

00:09:42.820 --> 00:09:48.040
數據丟失或奇偶校驗問題，因此X FS是

00:09:45.850 --> 00:09:53.440
能夠很好地維護其文件系統

00:09:48.040 --> 00:09:56.230
因為黃油FS具有

00:09:53.440 --> 00:09:59.170
它實際上可能失去平價的問題

00:09:56.230 --> 00:10:00.640
數據，如果斷電，那是

00:09:59.170 --> 00:10:02.860
我想避免的事情

00:10:00.640 --> 00:10:06.010
 myarray但因為我曾經丟失任何東西

00:10:02.860 --> 00:10:08.260
奇偶校驗數據在我的陣列，然後如果一個驅動器

00:10:06.010 --> 00:10:10.030
失敗的話我會有問題

00:10:08.260 --> 00:10:11.650
重建我的數據，我可以

00:10:10.030 --> 00:10:14.050
可能會有一些數據丟失，所以

00:10:11.650 --> 00:10:18.460
那正是我要避免的

00:10:14.050 --> 00:10:20.110
現在我已經安裝了x FS Prague 

00:10:18.460 --> 00:10:23.290
這讓我現在可以製作FS 

00:10:20.110 --> 00:10:25.300
分區我們的驅動器，然後注意我

00:10:23.290 --> 00:10:27.700
在我想要的終端人員中執行此操作

00:10:25.300 --> 00:10:30.760
在終端上執行此操作，以便您

00:10:27.700 --> 00:10:32.740
可以看到它實際上是如何完成的

00:10:30.760 --> 00:10:34.780
使用GUI，但我希望您成為

00:10:32.740 --> 00:10:37.060
能夠在終端上做到這一點，所以之後

00:10:34.780 --> 00:10:37.810
我們知道它將是dev / s DB 

00:10:37.060 --> 00:10:40.660
那是我的

00:10:37.810 --> 00:10:44.380
第一個好吧，所以如果我做一個PI可以看到

00:10:40.660 --> 00:10:47.529
這是用於TB驅動器的

00:10:44.380 --> 00:10:49.540
它們是三點七個TB 

00:10:47.529 --> 00:10:53.100
那就像四點等等等等

00:10:49.540 --> 00:10:56.950
字節都四捨五入到102四

00:10:53.100 --> 00:10:58.990
所以我們要創建一個新分區

00:10:56.950 --> 00:11:03.010
現在，如果您需要幫助，只需按em和

00:10:58.990 --> 00:11:05.470
輸入，因為M代表什麼幫助

00:11:03.010 --> 00:11:06.520
這很有道理，但您會看到

00:11:05.470 --> 00:11:09.100
當然，我們的第一個命令

00:11:06.520 --> 00:11:11.529
新分區需要的是n 

00:11:09.100 --> 00:11:13.150
所以按n輸入分區號

00:11:11.529 --> 00:11:15.610
只需按回車，然後先

00:11:13.150 --> 00:11:16.930
扇區輸入，然後最後一個扇區輸入

00:11:15.610 --> 00:11:18.550
因為我想用整個驅動器

00:11:16.930 --> 00:11:20.050
您要刪除簽名並

00:11:18.550 --> 00:11:23.110
那是什麼問我嘿

00:11:20.050 --> 00:11:25.980
已經有一個文件系統，它是

00:11:23.110 --> 00:11:29.290
 Luc的加密加密簽名

00:11:25.980 --> 00:11:31.930
可能是因為盧克的垃圾場

00:11:29.290 --> 00:11:33.370
已經知道了，因為那是我的老

00:11:31.930 --> 00:11:35.710
備份記得我提到過，但是我

00:11:33.370 --> 00:11:38.230
知道我現在有一個新的備份，所以

00:11:35.710 --> 00:11:39.820
這是多餘的，不需要的，並且

00:11:38.230 --> 00:11:42.339
冗餘到可以的程度

00:11:39.820 --> 00:11:43.930
毀了，我沒有失去任何東西

00:11:42.339 --> 00:11:46.000
我要刪除該簽名嗎

00:11:43.930 --> 00:11:49.000
好吧，我們去吧，我要寫

00:11:46.000 --> 00:11:53.440
 W出來，如果我這樣做，我現在就這樣做了

00:11:49.000 --> 00:11:55.780
 F磁盤-L斜杠dev斜杠s DB I 

00:11:53.440 --> 00:11:58.300
應該看到我現在有一個數據庫

00:11:55.780 --> 00:12:01.120
這是我在s DB上的第一個分區

00:11:58.300 --> 00:12:04.780
我機箱中的第一個驅動器，它是一個

00:12:01.120 --> 00:12:06.339
完整的3.7 TB，它設置為

00:12:04.780 --> 00:12:07.839
 Linux文件系統現在無法掛載

00:12:06.339 --> 00:12:12.370
但是因為沒有文件

00:12:07.839 --> 00:12:14.410
系統，因此使FS，因此mkfs點x FS 

00:12:12.370 --> 00:12:17.860
因為我們選擇了x FS文件系統

00:12:14.410 --> 00:12:20.560
也可以做X T4對，但我們要

00:12:17.860 --> 00:12:22.930
 x FS，我要去開發DB 

00:12:20.560 --> 00:12:27.070
現在其中一件事是真的

00:12:22.930 --> 00:12:29.650
關於x FS的好處是它的速度

00:12:27.070 --> 00:12:33.130
格式化驅動器，這是4 TB 

00:12:29.650 --> 00:12:35.080
開車，我會說可能

00:12:33.130 --> 00:12:38.290
將能夠格式化該驅動器

00:12:35.080 --> 00:12:40.600
就像在十分之一的時間裡

00:12:38.290 --> 00:12:45.279
將需要4 ext4或類似的東西

00:12:40.600 --> 00:12:47.500
到目前為止，我只有一個驅動器

00:12:45.279 --> 00:12:50.380
格式化x FS我已經對其進行了分區

00:12:47.500 --> 00:12:51.010
具有完整的4 TB分區，我們將

00:12:50.380 --> 00:12:53.170
說

00:12:51.010 --> 00:12:55.330
 7 TB，我正在對其進行格式化

00:12:53.170 --> 00:12:59.350
 XFS使用Linux終端，所以

00:12:55.330 --> 00:13:00.340
這可能是我的，也是我想要的一部分

00:12:59.350 --> 00:13:03.550
在終端給你看這個是

00:13:00.340 --> 00:13:05.860
因為這可能是我的X Xu 

00:13:03.550 --> 00:13:10.480
我可能是SSH使用者，而這可能是

00:13:05.860 --> 00:13:11.740
連接到外部USB 

00:13:10.480 --> 00:13:15.160
已經完成格式化

00:13:11.740 --> 00:13:17.770
 TB可以相信嗎

00:13:15.160 --> 00:13:19.810
現在我可以掛載了，所以如果我

00:13:17.770 --> 00:13:24.190
創建了一個掛載點，讓我們開始/ mnt 

00:13:19.810 --> 00:13:26.080
讓我們在MNT中創建掛載點生成器

00:13:24.190 --> 00:13:29.350
我要叫這個我就叫它

00:13:26.080 --> 00:13:31.090
 DB one只是為了好玩，因為它很容易

00:13:29.350 --> 00:13:33.690
了解那意味著什麼

00:13:31.090 --> 00:13:35.920
我想當我學習Linux時

00:13:33.690 --> 00:13:38.290
菜鳥Linux用戶

00:13:35.920 --> 00:13:40.900
我認為掛載點是

00:13:38.290 --> 00:13:42.670
真的讓我感到困惑，所以如果你已經

00:13:40.900 --> 00:13:44.380
之前從未使用過安裝點

00:13:42.670 --> 00:13:47.530
終端或您不確定如何

00:13:44.380 --> 00:13:49.510
作品隨時問問題，但

00:13:47.530 --> 00:13:51.460
我會盡力解釋

00:13:49.510 --> 00:13:53.590
 Linux的工作方式與說的有很大不同

00:13:51.460 --> 00:13:55.030
 Windows Windows的使用方式類似於插入時

00:13:53.590 --> 00:13:57.070
在驅動器中就像您的C盤

00:13:55.030 --> 00:14:00.130
這是您的D驅動器這是您的II驅動器

00:13:57.070 --> 00:14:02.080
所以在現在的Linux上，您可以插入十個

00:14:00.130 --> 00:14:04.000
驅動器，但沒有一個驅動器

00:14:02.080 --> 00:14:06.040
信，他們可以像其中之一

00:14:04.000 --> 00:14:07.900
可以作為您的靴子，其中之一

00:14:06.040 --> 00:14:09.850
可以是您的路線，其中之一可以是

00:14:07.900 --> 00:14:11.110
您的主文件夾可以是其中之一

00:14:09.850 --> 00:14:14.320
您的備份，它們都已連接

00:14:11.110 --> 00:14:15.820
通過文件系統結構這樣

00:14:14.320 --> 00:14:20.080
這種情況下，我要把那個

00:14:15.820 --> 00:14:21.400
在/ mnt斜杠STB-1上驅動，因為我

00:14:20.080 --> 00:14:25.900
創建了一個掛載點

00:14:21.400 --> 00:14:28.120
 aka那個時候的文件夾，但是

00:14:25.900 --> 00:14:30.150
當我感到困惑時

00:14:28.120 --> 00:14:33.370
首先開始學習這個東西

00:14:30.150 --> 00:14:34.870
我現在會進入一個數據庫嗎

00:14:33.370 --> 00:14:36.610
我已經創建了這個文件夾，我可能會把

00:14:34.870 --> 00:14:38.800
那裡有一些文件，但後來我不會

00:14:36.610 --> 00:14:41.350
甚至意識到驅動器不是

00:14:38.800 --> 00:14:45.330
當前掛載，所以我的任何文件

00:14:41.350 --> 00:14:48.070
放在那裡，實際上是在我的SD上

00:14:45.330 --> 00:14:50.710
將內置硬盤寫在我的

00:14:48.070 --> 00:14:53.770
筆記本電腦，因為我尚未連接

00:14:50.710 --> 00:14:56.110
該驅動器到該安裝點，因此

00:14:53.770 --> 00:14:58.300
我要那樣做的方式

00:14:56.110 --> 00:15:00.460
是永久地做到這一點的方法，但是

00:14:58.300 --> 00:15:04.329
暫時只是為了測試

00:15:00.460 --> 00:15:05.799
我要去斜線開發斜線SDP 

00:15:04.329 --> 00:15:07.749
一個，因為我們知道那是我們的

00:15:05.799 --> 00:15:10.480
我們在該驅動器上的第一個分區

00:15:07.749 --> 00:15:13.899
格式化的XFS，然後我要掛載

00:15:10.480 --> 00:15:16.679
 / mnt斜杠SD b1 

00:15:13.899 --> 00:15:21.399
所以我說的是掛載這個

00:15:16.679 --> 00:15:26.079
將開發中的SD b分區到此安裝

00:15:21.399 --> 00:15:29.439
點AKA文件夾SD b一鍵輸入

00:15:26.079 --> 00:15:32.110
如果我進入SD b1的話， 

00:15:29.439 --> 00:15:36.489
一樣，但是我在這裡所做的是

00:15:32.110 --> 00:15:39.879
實際在外部努力

00:15:36.489 --> 00:15:41.889
現在開車，如果我返回一個文件夾， 

00:15:39.879 --> 00:15:46.059
我卸載的命令是

00:15:41.889 --> 00:15:49.149
如果我去的話，實際上你現在掛載SD b1 

00:15:46.059 --> 00:15:49.509
回到stb-1並做一個LS看起來是

00:15:49.149 --> 00:15:51.819
空的

00:15:49.509 --> 00:15:54.309
好吧，我的文件去了哪裡，因為正確

00:15:51.819 --> 00:15:57.369
現在我實際上在看SD，因為

00:15:54.309 --> 00:16:02.889
它沒有安裝回去再鍵入

00:15:57.369 --> 00:16:04.839
我的掛載命令現在返回

00:16:02.889 --> 00:16:09.129
看著外置硬盤

00:16:04.839 --> 00:16:13.149
這樣我創建的測試文件就打開了

00:16:09.129 --> 00:16:15.220
我看到這討厭的第一個驅動器

00:16:13.149 --> 00:16:19.259
我們機箱中的是外部機箱

00:16:15.220 --> 00:16:22.199
就在那裡，如果沒有安裝我

00:16:19.259 --> 00:16:24.279
將無法訪問這些文件

00:16:22.199 --> 00:16:25.929
我還有另一件事可以做

00:16:24.279 --> 00:16:29.799
這非常有幫助，因為

00:16:25.929 --> 00:16:33.279
可能發生，讓我們卸下SD b1， 

00:16:29.799 --> 00:16:35.410
現在它還沒有安裝好，如果我能將SD設為一

00:16:33.279 --> 00:16:38.319
現在看看會發生什麼

00:16:35.410 --> 00:16:41.230
觸摸測試-好的，現在有一個文件

00:16:38.319 --> 00:16:42.819
如果我回去，我現在打電話給test2 

00:16:41.230 --> 00:16:44.220
運行我的mount命令，看能做什麼

00:16:42.819 --> 00:16:46.869
發生

00:16:44.220 --> 00:16:52.600
你注意到好嗎，所以測試兩個

00:16:46.869 --> 00:16:55.329
現在進入SD b1並執行LS和

00:16:52.600 --> 00:16:59.049
在heck進行測試的地方測試得很好

00:16:55.329 --> 00:17:03.220
要走了，我已經丟失了文件，不，我沒有

00:16:59.049 --> 00:17:05.260
因為測試2在SDA上，因為它

00:17:03.220 --> 00:17:07.329
沒有安裝，所以現在我很困惑

00:17:05.260 --> 00:17:10.809
這是我小時候的所在

00:17:07.329 --> 00:17:13.689
新手Linux用戶，因為如果不是

00:17:10.809 --> 00:17:15.429
已安裝，或者如果我忘記安裝驅動器

00:17:13.689 --> 00:17:17.350
或者如果我沒有正確安裝它，或者我

00:17:15.429 --> 00:17:21.160
把它放到錯誤的地方

00:17:17.350 --> 00:17:22.390
我將文件放在未掛載的掛載點上

00:17:21.160 --> 00:17:24.460
這樣他們就不會出現在我的外部

00:17:22.390 --> 00:17:27.190
開車，為什麼這很重要

00:17:24.460 --> 00:17:30.640
如果我進行備份怎麼辦？ 

00:17:27.190 --> 00:17:34.420
備份我的SD硬盤到我的前蒂姆是

00:17:30.640 --> 00:17:37.270
 db1，但是沒有掛載

00:17:34.420 --> 00:17:41.020
實際上是從我的SD複製文件

00:17:37.270 --> 00:17:42.820
 A到我的SD相同的硬盤驅動器，然後

00:17:41.020 --> 00:17:45.040
硬盤崩潰，我的備份是

00:17:42.820 --> 00:17:49.000
無用的，絕對無用的

00:17:45.040 --> 00:17:52.810
因此，如果我卸載，該如何解決呢？ 

00:17:49.000 --> 00:17:55.530
該驅動器，所以您掛載SD b1，因為

00:17:52.810 --> 00:17:59.590
我在安裝文件夾中，回到那裡

00:17:55.530 --> 00:18:05.230
我要刪除test2，然後返回

00:17:59.590 --> 00:18:09.400
現在看這個chat不休的CH attr plus 

00:18:05.230 --> 00:18:13.360
我的意思是說讓它變成一成不變

00:18:09.400 --> 00:18:17.710
這樣就無法將其寫入

00:18:13.360 --> 00:18:20.980
 SD b1好的，所以現在如果我進入stb-1並

00:18:17.710 --> 00:18:23.500
我再次嘗試觸摸測試2，它說不

00:18:20.980 --> 00:18:25.480
這樣的文件或目錄好嗎

00:18:23.500 --> 00:18:29.200
知道該目錄中有一個文件

00:18:25.480 --> 00:18:30.880
為什麼我不能觸摸我的文件哦，我沒有

00:18:29.200 --> 00:18:33.430
土墩在我的目錄中，但我還沒有

00:18:30.880 --> 00:18:36.790
安裝我的驅動器，因此

00:18:33.430 --> 00:18:40.030
這樣做是因為現在我不能寫

00:18:36.790 --> 00:18:41.920
任何東西到掛載點，所以現在

00:18:40.030 --> 00:18:45.460
只可以用我的備份

00:18:41.920 --> 00:18:47.890
如果安裝驅動器，則在安裝時起作用

00:18:45.460 --> 00:18:49.600
事實證明，所以讓我們現在跳回到這裡

00:18:47.890 --> 00:18:52.870
那是一成不變的，我無能為力

00:18:49.600 --> 00:18:55.240
在這裡我不能在這裡建立目錄

00:18:52.870 --> 00:18:57.220
會說操作不允許它上升

00:18:55.240 --> 00:18:59.200
文件夾，現在讓我們運行掛載

00:18:57.220 --> 00:19:00.960
再次命令，所以我推控制R 

00:18:59.200 --> 00:19:04.270
可以追溯到我的歷史

00:19:00.960 --> 00:19:06.040
現在，如果我注意到它現在安裝得很好

00:19:04.270 --> 00:19:08.530
我要回到STB-1 

00:19:06.040 --> 00:19:12.640
我現在要看我的測試文件

00:19:08.530 --> 00:19:16.330
讓我們嘗試觸摸測試以觸摸我不能

00:19:12.640 --> 00:19:18.790
打字和口語測試兩個，我們去吧

00:19:16.330 --> 00:19:21.820
現在您注意到它確實起作用了，因為

00:19:18.790 --> 00:19:24.730
它已經安裝好了，所以實際上

00:19:21.820 --> 00:19:27.160
 STB-1現在是外部硬盤驅動器

00:19:24.730 --> 00:19:29.710
如果您不確定是否已安裝

00:19:27.160 --> 00:19:30.700
看這個坐騎，它給了我一個清單

00:19:29.710 --> 00:19:32.790
所有安裝正確的驅動器

00:19:30.700 --> 00:19:37.000
那是一堆雜物，所以坐騎

00:19:32.790 --> 00:19:39.220
管道grep SD可以給我一個

00:19:37.000 --> 00:19:42.960
顯示stb-1的那一行

00:19:39.220 --> 00:19:44.170
告訴我dev stb-1安裝在

00:19:42.960 --> 00:19:46.450
 / mnt 

00:19:44.170 --> 00:19:49.510
大幅削減SDP如果我

00:19:46.450 --> 00:19:52.600
卸載並運行完全相同的

00:19:49.510 --> 00:19:55.330
命令沒有輸出，因為它不是

00:19:52.600 --> 00:19:58.390
目前已安裝，所以我知道我需要

00:19:55.330 --> 00:20:02.050
安裝它再做一次

00:19:58.390 --> 00:20:04.720
現在我們去運行該命令，那麼

00:20:02.050 --> 00:20:06.460
它是不是在做它的坐騎

00:20:04.720 --> 00:20:09.040
我所有已安裝東西的輸出

00:20:06.460 --> 00:20:10.870
是的，但是我要抓緊的是

00:20:09.040 --> 00:20:14.050
基本上相當於Linux的嘿

00:20:10.870 --> 00:20:15.640
搜索該SD的輸出為1並

00:20:14.050 --> 00:20:17.380
點擊進入，這可能是我的一切

00:20:15.640 --> 00:20:18.880
可以搜索開發人員，它將給我

00:20:17.380 --> 00:20:20.890
包含dev一詞的所有內容

00:20:18.880 --> 00:20:23.440
好吧，不，我不需要我只想要

00:20:20.890 --> 00:20:24.910
 SDP一個，這給了我，這是一個

00:20:23.440 --> 00:20:26.440
當我喜歡它時會有點混亂

00:20:24.910 --> 00:20:29.770
那但是你去那裡所以你可以看到

00:20:26.440 --> 00:20:33.340
我已經在MN t / stb-1上開發了一個數據庫DB 

00:20:29.770 --> 00:20:35.830
類型是我的文件XFS 

00:20:33.340 --> 00:20:39.480
系統，可以開始使用了，所以我有我的

00:20:35.830 --> 00:20:41.650
第一次開車準備去我的納斯

00:20:39.480 --> 00:20:44.620
第二個驅動器將恰好是

00:20:41.650 --> 00:20:46.420
一樣，除了我們知道這是我的SDC，所以

00:20:44.620 --> 00:20:49.840
您按順序執行這些步驟

00:20:46.420 --> 00:20:54.190
現在創建它，因為這不是一個

00:20:49.840 --> 00:20:56.500
我可以放入4 TB驅動器的RAID單元

00:20:54.190 --> 00:20:58.740
我有2個4 TB的驅動器，我也可以

00:20:56.500 --> 00:21:02.320
除此之外，還要放入1 TB 

00:20:58.740 --> 00:21:05.560
我可以放500場演出，這樣我就可以使用

00:21:02.320 --> 00:21:10.780
混合驅動器，每個驅動器

00:21:05.560 --> 00:21:15.070
將顯示為TB SDC DE D 

00:21:10.780 --> 00:21:17.620
和E，然後您將擁有

00:21:15.070 --> 00:21:20.290
現在可以突襲他們

00:21:17.620 --> 00:21:21.730
當然如果你要四個TB 

00:21:20.290 --> 00:21:22.870
好吧，你可以將它們設置為突襲1 

00:21:21.730 --> 00:21:24.910
但是如果您有一個TB 

00:21:22.870 --> 00:21:26.710
足夠的500 GB容量

00:21:24.910 --> 00:21:29.350
真正將它們連接在一起並使用

00:21:26.710 --> 00:21:31.630
他們我們將要做的事情

00:21:29.350 --> 00:21:34.360
本系列的課程是我們要

00:21:31.630 --> 00:21:37.989
展示我們如何實際使用

00:21:34.360 --> 00:21:40.929
這個單位或與此類似的單位

00:21:37.989 --> 00:21:44.679
為了使用Linux創建陣列

00:21:40.929 --> 00:21:46.570
可以讓我混合的工具

00:21:44.679 --> 00:21:48.879
驅動器能夠創建冗餘

00:21:46.570 --> 00:21:51.009
我們將創造各種

00:21:48.879 --> 00:21:53.470
非常酷的東西，以便您可以

00:21:51.009 --> 00:21:55.269
了解底層文件系統

00:21:53.470 --> 00:21:57.039
特質，我想即使是今晚

00:21:55.269 --> 00:21:58.600
您可能已經學到了兩件事

00:21:57.039 --> 00:22:00.519
請在下面發表評論讓我知道

00:21:58.600 --> 00:22:03.129
你確實在這裡學習，如果有的話

00:22:00.519 --> 00:22:06.700
我特別感興趣

00:22:03.129 --> 00:22:07.690
今晚和通過

00:22:06.700 --> 00:22:09.279
該系列的課程，我們將成為

00:22:07.690 --> 00:22:12.970
學習各種各樣的東西

00:22:09.279 --> 00:22:15.489
後面的小飾品

00:22:12.970 --> 00:22:19.509
我們習慣喜歡的用戶界面

00:22:15.489 --> 00:22:21.849
像在Nass上的界面一樣安裝

00:22:19.509 --> 00:22:23.139
單位，我們所看到的只是網絡

00:22:21.849 --> 00:22:24.489
界面很好，我們將繼續工作

00:22:23.139 --> 00:22:26.830
在引擎蓋下，以便我們了解如何

00:22:24.489 --> 00:22:29.139
一切正常，並確保我們的數據安全

00:22:26.830 --> 00:22:32.019
所以這很酷，嘿，我們必須

00:22:29.139 --> 00:22:34.769
休息片刻，我會是對的

00:22:32.019 --> 00:22:34.769
背貼

00:22:34.960 --> 00:22:42.739
 [音樂] 

00:22:48.370 --> 00:22:51.500
 [音樂] 

00:22:52.499 --> 00:22:58.419
歡迎回來，這是第五類

00:22:54.820 --> 00:22:59.619
科技電視現在我們的直播

00:22:58.419 --> 00:23:01.149
即使您一直在觀看

00:22:59.619 --> 00:23:04.330
要求我們確實有一些疑問

00:23:01.149 --> 00:23:06.759
在我們不和諧聊天的第一個問題中

00:23:04.330 --> 00:23:08.919
來自沼澤男子，問我好嗎

00:23:06.759 --> 00:23:10.389
我在連接上演示的筆記本電腦

00:23:08.919 --> 00:23:11.589
現在我已經在NASA上提到過

00:23:10.389 --> 00:23:14.229
節目的頂部，但您可能沒有

00:23:11.589 --> 00:23:16.119
抓住它，抓住它，我會

00:23:14.229 --> 00:23:17.320
關閉電源，因為我已經卸載了

00:23:16.119 --> 00:23:18.639
它與你掛載命令，所以我

00:23:17.320 --> 00:23:20.229
只是要按住那個電源按鈕

00:23:18.639 --> 00:23:21.579
關閉那些驅動器的電源，這樣我就可以安全地

00:23:20.229 --> 00:23:23.619
將它移到那裡

00:23:21.579 --> 00:23:24.940
記住，這些是旋轉驅動器

00:23:23.619 --> 00:23:26.109
你不想移動這個

00:23:24.940 --> 00:23:27.969
他們在旋轉，因為你可以

00:23:26.109 --> 00:23:30.070
實際造成身體傷害

00:23:27.969 --> 00:23:32.139
驅動器盤有針

00:23:30.070 --> 00:23:33.969
基本上我們會讓他們想到

00:23:32.139 --> 00:23:37.299
像電唱機一樣的老唱片

00:23:33.969 --> 00:23:39.249
 LPS，您的腦袋懸停在

00:23:37.299 --> 00:23:41.919
上方的空氣墊很小

00:23:39.249 --> 00:23:44.739
非常敏感的磁碟，如果我

00:23:41.919 --> 00:23:48.579
在開機時移動這些

00:23:44.739 --> 00:23:52.509
盤片以7,200轉旋轉

00:23:48.579 --> 00:23:54.389
每分鐘，所以如果我將其移動

00:23:52.509 --> 00:23:57.940
頭碰盤子的方式

00:23:54.389 --> 00:24:00.279
可能會導致硬盤數據丟失

00:23:57.940 --> 00:24:03.129
失敗，所以我總是關閉電源

00:24:00.279 --> 00:24:07.179
在我移動它之前，我如何連接它

00:24:03.129 --> 00:24:10.179
我只是在這裡拔掉電源

00:24:07.179 --> 00:24:14.559
是單位的背面，我所擁有的

00:24:10.179 --> 00:24:18.549
是USBC電纜好嗎，就是這樣

00:24:14.559 --> 00:24:22.089
在此端，現在在筆記本端

00:24:18.549 --> 00:24:24.369
只是要拔掉插頭，這就是

00:24:22.089 --> 00:24:27.999
同一根電纜的另一端，所以我

00:24:24.369 --> 00:24:30.789
 USB C，我有USB a，因此允許

00:24:27.999 --> 00:24:35.859
我將其插入筆記本電腦或其他任何設備

00:24:30.789 --> 00:24:37.989
 USB 3.0設備，這就是我的Odroid xu4 

00:24:35.859 --> 00:24:41.259
這就是我們希望實現的目標

00:24:37.989 --> 00:24:43.359
通過這個項目的過程

00:24:41.259 --> 00:24:44.529
是真正從一個電源

00:24:43.359 --> 00:24:46.749
登上電腦的原因

00:24:44.529 --> 00:24:47.800
選擇xu4是因為它支持

00:24:46.749 --> 00:24:50.320
你asp 

00:24:47.800 --> 00:24:52.360
這是USB連接的模糊協議

00:24:50.320 --> 00:24:55.840
這意味著它將能夠得到

00:24:52.360 --> 00:24:59.200
每秒5吉比特的數據傳輸

00:24:55.840 --> 00:25:01.240
與標準USB不同的是， 

00:24:59.200 --> 00:25:03.970
將會更快

00:25:01.240 --> 00:25:05.830
還要多一個合理的百分比，這樣

00:25:03.970 --> 00:25:07.180
我被連接到這不是ssh 

00:25:05.830 --> 00:25:10.390
連接或類似的東西

00:25:07.180 --> 00:25:13.840
是直接USB連接，就像

00:25:10.390 --> 00:25:16.060
因為我們的Odroid xu 

00:25:13.840 --> 00:25:17.620
我不是在看Odroid xu 

00:25:16.060 --> 00:25:20.380
今晚，我實際上正在這樣做

00:25:17.620 --> 00:25:23.250
完全是為了使用我的筆記本電腦

00:25:20.380 --> 00:25:26.500
在演示中，這是一系列的

00:25:23.250 --> 00:25:29.410
的示範和項目

00:25:26.500 --> 00:25:33.160
將會導致我們的地雷

00:25:29.410 --> 00:25:36.820
貓五點電視--就是這裡

00:25:33.160 --> 00:25:39.550
會聚在一起，但徐4是

00:25:36.820 --> 00:25:41.620
將成為其中的步驟之一

00:25:39.550 --> 00:25:42.760
創建這個單位的過程，但我

00:25:41.620 --> 00:25:45.220
想告訴你那種

00:25:42.760 --> 00:25:46.720
潛在的我們

00:25:45.220 --> 00:25:49.600
設置好東西，我要你

00:25:46.720 --> 00:25:51.400
了解這些小東西中的一些

00:25:49.600 --> 00:25:52.660
 Linux命令在終端中的工作方式為

00:25:51.400 --> 00:25:54.520
好吧，因為一切都會做

00:25:52.660 --> 00:25:58.510
在終端中還有其他問題

00:25:54.520 --> 00:26:01.570
我們bp9您非常歡迎foo 

00:25:58.510 --> 00:26:03.940
叫這個-是的，現在在這個

00:26:01.570 --> 00:26:08.440
在這種情況下，此為

00:26:03.940 --> 00:26:10.600
直接連接存儲的想法是

00:26:08.440 --> 00:26:14.710
我們將採取這個-單位和

00:26:10.600 --> 00:26:17.800
將其變成偽nas或備份

00:26:14.710 --> 00:26:20.290
系統使用Xu 4，所以Xu 4是

00:26:17.800 --> 00:26:21.820
將成為這個的大腦， 

00:26:20.290 --> 00:26:24.430
然後我將能夠訪問它

00:26:21.820 --> 00:26:25.930
作為網絡附加存儲，所以我不是

00:26:24.430 --> 00:26:27.820
必須將其插入我的筆記本電腦

00:26:25.930 --> 00:26:31.240
知道我將能夠訪問它

00:26:27.820 --> 00:26:33.010
通過Wi-Fi，通過以太網和其他

00:26:31.240 --> 00:26:34.870
我還想念其他事情嗎

00:26:33.010 --> 00:26:37.170
現在的問題我在看聊天室

00:26:34.870 --> 00:26:40.150
在我的手機上，因此屏幕是

00:26:37.170 --> 00:26:42.400
比較小，如果事情做的話

00:26:40.150 --> 00:26:44.560
傾向於在屏幕旁邊飛

00:26:42.400 --> 00:26:46.240
還有其他關於

00:26:44.560 --> 00:26:50.020
項目或我在這裡教的內容

00:26:46.240 --> 00:26:53.500
今晚我很高興看到

00:26:50.020 --> 00:26:56.590
大家都在這裡，感謝您的光臨

00:26:53.500 --> 00:27:02.170
在這裡，我認為那真的是

00:26:56.590 --> 00:27:04.240
主要問題我是bp9是，所以你

00:27:02.170 --> 00:27:06.670
現在想知道我如何能夠

00:27:04.240 --> 00:27:08.740
直接連接到NASS單元

00:27:06.670 --> 00:27:10.810
因為它不是驢子，完全像

00:27:08.740 --> 00:27:12.880
 foo說它是直接附加的

00:27:10.810 --> 00:27:15.580
在這種情況下的存儲就是全部

00:27:12.880 --> 00:27:17.140
將會改變，如果

00:27:15.580 --> 00:27:19.810
您不熟悉X，因為您喜歡哦

00:27:17.140 --> 00:27:21.760
 Droid X you因為它是一台微型計算機，所以

00:27:19.810 --> 00:27:23.770
想起Raspberry Pi，這是非常非常

00:27:21.760 --> 00:27:26.710
小型計算機適合我的口袋

00:27:23.770 --> 00:27:29.410
在這裡我希望我能隨身攜帶，但在那裡

00:27:26.710 --> 00:27:31.870
如果你能原諒我一個

00:27:29.410 --> 00:27:35.320
一會兒我就可以抓住我

00:27:31.870 --> 00:27:39.010
在這裡離開這裡，我們去，所以這是一個

00:27:35.320 --> 00:27:40.390
 Q沒有機器人徐，Q代表

00:27:39.010 --> 00:27:43.750
安靜，因為它有這麼大

00:27:40.390 --> 00:27:46.720
散熱器，所以這是板

00:27:43.750 --> 00:27:49.000
要為我們的nass單元供電，所以當

00:27:46.720 --> 00:27:51.580
這將成為一個屁股，這將是

00:27:49.000 --> 00:27:54.310
電腦將要去的大腦

00:27:51.580 --> 00:27:57.400
強大的功能Debian Linux Debian 10 

00:27:54.310 --> 00:27:59.560
現在在微型SD上

00:27:57.400 --> 00:28:01.660
將要在emmc上，然後我們要

00:27:59.560 --> 00:28:04.960
在安裝某種形式的安裝

00:28:01.660 --> 00:28:07.840
為了以這種方式隱藏它

00:28:04.960 --> 00:28:09.340
它會成為單元本身的一部分

00:28:07.840 --> 00:28:12.490
還有我們可以放進去的東西

00:28:09.340 --> 00:28:14.110
你知道你是否有一個房間

00:28:12.490 --> 00:28:15.640
壁櫥或你可以設置的東西

00:28:14.110 --> 00:28:18.400
起來，然後運行以太網電纜

00:28:15.640 --> 00:28:20.290
具有千兆以太網的

00:28:18.400 --> 00:28:21.730
可以讓您完全訪問所有

00:28:20.290 --> 00:28:23.560
文件並進行備份和

00:28:21.730 --> 00:28:27.610
一切都很好，謝謝

00:28:23.560 --> 00:28:29.230
大家都歡迎我的問題我

00:28:27.610 --> 00:28:33.130
歡迎您的問題，您可以發送電子郵件

00:28:29.230 --> 00:28:35.820
如果您住在五類點播電視

00:28:33.130 --> 00:28:35.820
有了

