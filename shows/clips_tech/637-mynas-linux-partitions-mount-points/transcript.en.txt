over the past couple of weeks I and the
team have been speaking about our what
we're gonna call mine ass yourn ass mine
ass but Kat five dot TV / - is where I'm
gonna put all the links for the products
that we're gonna be looking at the
discussion has been surrounding the
decision okay well do we go with USB 3.0
so that we can also gain the eSATA port
which is going to give us up to six
gigabits per second or do we go straight
to USB 3.1 Rev - which theoretically can
can give us up to 10 gigabits per second
however the one caveat about that is
that the device that we're gonna be
connecting at - which is an odd roid xu4
single board computer is only capable of
USB 3.0 with you ASP so that's gonna be
five gigabits per second that's a lot of
numbers to be thrown out at yeah it's a
lot of numbers for old robbie to
remember in this baldhead it is but it
all makes sense to me the decision was
made though to go future-ready and go
with USB 3.1 Rev - so we're gonna be
able to access our Nass unit at five
gigabits per second from the from the
Odroid xu4 but keep in mind our
connectivity to our Nass is going to be
based on Gigabit Ethernet anyways
because the Ethernet port on that board
is is thousand megabits per second or
whatever so even though I can like
communicate with the drives at five
gigabits a second the communication then
to the xu4 is only going to be one
gigabit a second so the theoretical
result of that is that the communication
between the brains of our Nass is still
going to be five times as fast as our
actual throughput to that - and from
that nice unit itself so I've got this
this device at cat5 dot TV /
my Nass and let's get a quick look at it
now I've put the drives I've put two
drives in here obviously not very stable
II will work on that in just a second
this guy just fell right out that's okay
okay so I've got two 4 terabyte drives
that have just simply plugged into the
back backplane because I was just kind
of playing around with this just before
the show to see how it operated and I
didn't even really turn it on I just
wanted to see that I could plug these
drives in and see how they connect so I
have two 4 terabyte drives from my old
backup unit and the idea behind this is
I'm going to be able to use this device
as basically just multiple drives
connected to my computer so this is an
ass include an ass enclosure this is a
hard drive enclosure there's a big
difference when you're shopping around
for these kinds of things so keep this
in mind what we opted for what I opted
for is not an ass unit that's not what
we want we want a device that gives me
access to these drives as external hard
drives so this has four SATA back planes
the backplane will take up to four SATA
drives and with that I'm going to see
four new hard drives just like as if I
plugged in a USB external hard drive on
my computer that's the theory behind it
so there's no raid happening here
there's no mirroring there's nothing
it's just four drives connected to my
Linux machine the xu4 so then using the
amazing software that comes with Linux
I'm gonna be able to because Linux is
like the server OS right we're gonna
learn this week and we've learned from
the top500 that like Linux is where it's
at for servers so because they're gonna
be showing up as for individual SATA
external hard drives I can do whatever I
want with them so we're gonna play
around with mirroring creating arrays
we're gonna be checking out all the
various things that we can do but this
device will take up to four Drive so we
can decide
how we want to segment the data across
those four drives I've just got two
drives for the sake of the demonstration
today and this is what it looks like so
there we have it and it's just simply a
very basic SATA back plane that gives me
access to these drives so as far as the
mounting goes there is really no there's
no drive trays or anything like like
that there are these little plastic guys
that are gonna go on the front of the
drive which just gives it a little bit
more pressure to push it into the back
plane so these just go in like this
drive number one and that squeezes right
into the back plane drive number two
both four terabytes just because these
are poles from my my old backup see here
you can see that better than I can and
there we go straight in there and then
this guy here is just gonna go right on
top and clip in like so I think I've
almost got that it clips in anyways and
then you close the door and you're good
to go
so should we fire it up and just kind of
see how this is going to show up on our
computer I've got my laptop here and
what I'm gonna do is let's quickly let's
zoom in first of all and do a LS slash
dev slash SD star I just want to see
what's there so I only have one hard
drive in my laptop and that is my SD a
let's also bring up I'm gonna zoom out
here a little bit and I'm gonna bring up
G Part II D just so that we can get a
look at what this is going to look like
as far as hard drives go so there is my
SD a and that's the only hard drive
available in my computer so to power it
on there's just a power button here and
what I have is I've got USB 3.1 a USB C
to a USB standard a cable to plug into
my laptop and that is the same part of
me the same cable I'm going to use to
connect it into my
into my ex--you for now I just heard a
ding on my laptop so let's see what's
what's going on here
so in G part ed what do we see I'm gonna
go G part II D refresh devices over here
now I have to 3.6 4 terabyte drives is
what it's showing both unallocated space
that's good news
all right over here let's zoom in a
little bit and let's run that same
command and now we see we have s DB SD c
SD d and SD e now I imagine C we're
seeing s DD and SD e so understand these
are drive allocations as far as how
Linux segments the devices so we've got
SD a as my actual internal hard drive on
my laptop SD B is presumably the first
slot in this i if they are sequential
SDC would be the second SD d would be
the third and SD e would be the fourth
if I'm right then we're gonna find that
we're able to well I mean we can confirm
that again by going into G part ed
that's a quick way to confirm it anyways
well if I knew my password and entered
it correctly
yes s DB and SDC so s DB is going to be
my first drive in the in the chassis SDC
is going to be my second so what am I
gonna do well first of all I want to
format these XF ass so I'm gonna need a
couple of tools so sudo su and login as
super user and I'm gonna go apt update
move this over a little bit for you
folks at home do I want to accept these
changes why yes yes I do
all right apt install XFS Prague's yeah
look at that I've already got it okay so
what file system would you consider for
your Nass you might think ext4 you might
even think like maybe butter FS now
there's a couple of things that that I
would consider when I'm creating this
array first of all X FS is a modern file
system that has a virtually limitless
number of files that I can have on my
Nass so on my file system so it's
unbelievable
like it's like ^ we can't even count
that high it allows massive amount and
like massive capacity drives and it's a
modern journaling file system now but
our FS it's a great file system I love
butter FS however I still feel like
there is some concern some worried about
butter FS with unexpected power loss and
sometimes that can happen we've had
power outages here in our local
community where the Power has been out
so long that the UPS finally gives up
and if that happens I don't want to have
data loss or parity issues so X FS is
able to maintain its file system much
more adequately because butter FS has an
issue where it can actually lose parity
data if the power goes out so that's
something that I want to avoid in
myarray but cuz if I ever lost any
parity data in my array then if a drive
failed then I would have problems
rebuilding my data and I could
potentially have some data loss so
that's exactly what I want to avoid so
now that I have x FS Prague's installed
which gives me make FS now let's
partition our drive so and notice I'm
doing this in the terminal folks I want
to do this in the terminal so that you
can see how it's actually done we could
use the GUI but you I want you to be
able to do this in the terminal so after
we know that it's going to be dev /s DB
that's my
first one okay so if I do a P I can see
that this is for terabyte drive see
they're three point seven terabytes and
then it's like four point blah blah blah
bytes it's all like rounded to 102 four
so we're gonna create a new partition
now if you need help just push em and
enter because M stands for what help yes
that makes a lot of sense but you see of
course the first command that we're
going to need is n for a new partition
so press n enter partition number I'm
just gonna hit enter and then first
sector enter and then last sector enter
because I want to use the whole drive do
you want to remove the signature and
what's that ask me hey this drive
already has a filesystem on it and it is
a encrypted crypto Luc's signature
probably created with Luke's dump as you
are already aware because that's my old
backup remember I mentioned that but I
know that I have now got a new backup so
this one is redundant and not needed and
redundant to the point where it can be
destroyed and I'm not losing anything so
do I want to remove that signature yeah
okay there we go so I'm gonna write it
out with W and I'm done so now if I do
an F disk - L slash dev slash s DB I
should see that I now have s DB one
which is my first partition on s DB the
first drive in my chassis and it is a
full 3.7 terabyte and it's set up for a
Linux file system now I can't mount it
yet because there's there is no file
system so make FS so mkfs dot x FS
because we chose the x FS filesystem you
could also do X t4 right but we're gonna
do x FS and I'm gonna go dev s DB one
now one of the things is really really
nice about x FS is the speed at which it
formats the drive this is a 4 terabyte
drive and I would say it's probably
going to be able to format that drive
like in a tenth of the time that it
would take 4 ext4 or something similar
so so far I have one drive that is
formatting x FS I've partitioned it it
has a full 4 terabyte partition we'll
say
seven terabytes and I'm formatting it
with XFS using the Linux terminal so
this could be my and part of why I want
to show you this in the terminal is
because this could be my X Xu for which
I could be SSH tin to and this could be
connected to the the external USB that's
already finished formatting for
terabytes can you believe that done so
now I could actually mount that so if I
created a mount point so let's go /mnt
let's make a mount point make der in MNT
I'm gonna call this I'll just call it s
DB one just for fun because it's easy to
understand what that means
and I think when I was learning Linux as
a rookie Linux user
I think mount points were something that
really confused me and so if you've
never worked with mount points before in
the terminal or you're not sure how this
works feel free to ask questions but
I'll do my best to explain it
Linux works a lot different than say
Windows Windows uses like when you plug
in a drive it's like your C Drive
it's your D Drive it's your II drive and
so on now Linux you can plug in ten
drives and none of them have a drive
letter they can just be like one of them
can be your your boot and one of them
can be your route and one of them can be
your home folders one of them can be
your backup and they're all connected
through the file system structure so in
this case I'm gonna be putting that one
drive on /mnt slash stb-1 because I
created a mount point
aka a folder at that point but where
where it can get confusing is when I
first started learning this stuff I
would I would go into s DB one now that
I've created this folder and I might put
some files there but then I wouldn't
even realize that the drive is not
currently mounted so any files that I
put there are in fact going on my SD a
write the built-in hard drive on my
laptop because I have not yet connected
this drive to that mount point so the
way that I'm gonna do that and and there
are ways to permanently do that but to
temporarily do that just to test
I'm gonna go mount slash dev slash SDP
one because we know that that's our
first partition on that drive which we
formatted XFS and then i'm gonna mount
that to /mnt slash SD b1
so what i'm telling it is mount this
partition SD b one in dev to this mount
point AKA folder SD b one hit enter now
if I go into SD b1 it looks exactly the
same however I anything I do here is
actually going on the external hard
drive so now if I go back one folder and
I unmount that which is the command is
actually you mount SD b1 now if I go
back into stb-1 and do an LS look it's
empty
well where'd my files go because right
now I'm actually looking at SD a because
it's not mounted go back again and type
my mount command go back in now I am in
fact looking at the external hard drive
so that test file that I created is on
the very first drive in this nasty I see
in our chassis are external chassis
right there and if it's not mounted I
won't be able to access those files
there's one other thing that I can do
which is very very helpful because what
can happen let's unmount that SD b1 so
now it's not mounted okay SD be one if I
look now what can happen is I'm gonna
touch test - ok so now there's a file
called test2 now if I go back and I'd
run my mount command watch what can
happen
do you notice okay so test two is there
right now go into SD b1 and do an LS and
it's test well where the heck did test
to go I've lost my file no I haven't
because test 2 was on SDA because it
wasn't mounted so now I get confused
this is where I was at when I was just a
rookie Linux user because if it wasn't
mounted or if I forgot to mount my drive
or if I didn't mount it correctly or I
put it I mounted in the wrong place
I put files on the mount point unmounted
so they wouldn't end up on my external
drive so why does that matter
what if I ran a backup what if I was
backing up my sd a drive to my ex Tim is
db1 but it wasn't mounted I would
actually be copying the files from my sd
a to my sd a the same hard drive so then
that hard drive crashes my backup is
useless absolutely useless
so how can I fix that well if I unmount
that drive so you mount SD b1 because
I'm in the mount folder go back in there
I'm gonna remove test2 and now go back
and now watch this chatter CH attr plus
I that means make it immutable make it
so that it can't be written to and then
SD b1 okay so now if I go into stb-1 and
I try again to touch test 2 it says no
such file or directory what is it well I
know there's a file in that directory
why can't I touch my file oh I haven't
mound in my directory yet I haven't
mounted my my drive so it's important to
do that because now I can't write
anything to the mount point so now it
will only work my backup will only
function if the mount if the drive is in
fact mounted so let's jump back here now
that it is immutable I can't do anything
here I can't make a directory in here it
will say operation not permit it go up a
folder and now let's run our mount
command again so I'm pushing control R
to be able to go back in my history and
now if I notice it mounted just fine now
I'm gonna go back into stb-1
and I'm gonna now you see my test file
let's try touching test to touch I can't
type and talk test two there we go so
now you notice that it did work because
it is mounted alright so this is in fact
the stb-1 the external hard drive now
and if you're not sure if it's mounted
watch this mount it gives me a list of
all the drives that are mounted well
that's a whole bunch of cruft so mount
pipe grep SD be one that just gives me
the one line that shows stb-1 so this
shows me that dev stb-1 is mounted on
/mnt
slash SDP one well what happens if I
unmount it and run that exact same
command no output because it's not
currently mounted so I know I need to
mount it do it again
there we go now run that command so what
is it doing it's its mount which gives
me an output of all of the mounted stuff
right but then I'm grapping which is
basically the Linux equivalent of hey
search that output for this SD be 1 and
hit enter and that could be anything I
could search for dev and it will give me
everything that contains the word dev
well no I don't need that I just want
SDP one and that gives me and it's a
little bit cluttered when I have it like
that but there you go so you can see
that I have dev s DB one on MN t / stb-1
and the type is XFS that's my file
system and it's ready to go so I have my
first drive ready to go in my Nass
second drive is going to be exactly the
same except we know that it is my SDC so
you go through those same steps in order
to create that now because this is not a
raid unit I can put in 4 terabyte drives
I got my 2 4 terabyte drives I can also
put in a 1 terabyte in addition to that
and I can put in a 500 gig so I can use
a mix of drives and it's gonna each one
is going to show up as s TB SDC s de D
and E and and and then you're gonna have
access to each of them now with a raid
of course if you had to four terabytes
well you could set those up as a raid 1
but then if you had a one terabyte
enough and a 500 gigabyte you couldn't
really connect those together and use
them what we are going to be doing over
the course of this series is we're gonna
be demonstrating how we can actually use
this unit or a unit similar to this
in order to create arrays using Linux
tools that will allow me to intermix
drives to be able to create redundancy
we're gonna be creating all kinds of
really cool stuff so that you can
understand the underlying filesystem
idiosyncrasies and I think even tonight
you may have learned a couple of things
please comment below let me know what
you did learn here and and if anything
is of particular interest that I've
spoke on tonight and and through the
course of the series we're gonna be
learning all kinds of things like that
the little trinkets behind the like the
the UI that we're used to like we may
install like an interface on our Nass
unit and and all we ever see is the web
interface well we're gonna be working
under the hood so that we understand how
it all works and keeping our data safe
so that's pretty cool hey we've got to
take a really quick break I'll be right
back stick around
[Music]
welcome back this is category five
technology TV now our broadcast is live
even though you're watching this on
demand we do have some questions coming
in in our discord chat first question
comes from Marsh man asking ok how is my
laptop that I'm demonstrating on connect
it to the NASA now I mentioned it at the
top of the show but you may not have
catched it caught it and I'm just gonna
power this off because I have unmounted
it with the you mount command so I'm
just gonna hold in that power button to
power off those drives so I can safely
move it there it goes
remember that these are spinning drives
you don't want to move this while
they're spinning because you can
actually cause damage to the physical
platters of the drive there are needles
basically we're gonna call them think of
an old record right like a record player
LPS you've got heads that hover on a
very small cushion of air over top of
very sensitive magnetic platters so if I
move this while it is powered on those
platters are moving at 7,200 rotations
per minute and so if I move it in such a
way that the head touches the platter
scratch data loss possible hard drive
failure so I always power this off
before I move it how am i connecting it
I'm just unplugging the power here this
is the back of the unit and all I have
is a USBC cable okay so that's what it
is on this end now on the laptop end I'm
just gonna unplug that here this is the
other end of that same cable so I've got
USB C and I've got USB a so this allows
me to plug it into a laptop or any other
USB 3.0 device so that's my Odroid xu4
that's the what we hope to achieve
through the course of this this project
is to actually power this from a single
board computer the reason that I've
chosen the xu4 is because it supports
you asp
that's USB Attached scuzzy protocol
which means it's going to be able to get
five gigabits per second data transfer
to the device unlike standard USB it's
gonna be a lot faster you're looking at
a fair percentage more so so that's how
I was connected this was not an ssh
connection or anything like that this
was a direct USB connection exactly like
it will be with our Odroid xu for reason
I'm not looking at it on and Odroid xu
for tonight and I'm actually doing this
using my laptop is strictly for the sake
of the demonstration this is a series of
of demonstrations and projects that are
going to be leading to our mine ass so
cat five dot TV / - is where it's all
going to come together but the Xu 4 is
going to be one of the steps in the
process of creating this unit but I
wanted to show you the kind of
underlying we that we're gonna be
setting things up and I want you to
learn how some of these these little
Linux commands work in the terminal as
well because everything is gonna be done
in the terminal any other questions for
us bp9 you're very welcome the foo
calling this - yes right now in this
instant this in this instance this is
direct attached storage the idea is that
we're gonna be taking this - unit and
turning it into a pseudo nas or backup
system using an Xu 4 so the Xu 4 is
going to become the brains of this and
then I'm going to be able to access it
as network attached storage so I'm not
gonna have to plug it into my laptop
know I'm gonna be able to access it
through Wi-Fi through Ethernet and those
kinds of things did I miss any other
questions now I'm watching the chat room
on my phone and so the screen is
comparatively small and if things do
tend to kind of fly by the screen so if
there are any other questions about the
project or what I'm teaching here
tonight I'm wide open great to see
everybody here and appreciate you being
here I think that that was really the
the main question I bp9 yeah okay so you
get it now wondering how I was able to
connect directly to the NASS unit
because it's not an ass and exactly like
the foo says it's direct attached
storage in this instance that's all
going to be changing though and if
you're not familiar with an X you for Oh
Droid X you for it is a microcomputer so
think of a Raspberry Pi it's a very very
small computer fits in my pocket right
here I wish I had it with me but there I
actually if you can excuse me for one
moment I can grab one I have one just
off the set here here we go so this is a
no droid Xu for Q and the Q stands for
quiet because it has this massive
heatsink so this is the board that is
going to power our nass unit so when
this becomes an ass this is going to be
the computer the brains that is going to
power it it's got Debian Linux Debian 10
on here on a micro SD right now it's
going to be on emmc and then we're gonna
be setting up some form of mounting in
order to hide this in such a way that
it's going to be part of the unit itself
and something that we can just put into
a room in the you know if you have a
closet or something that you can set
that up and just run an ethernet cable
to this that has Gigabit Ethernet that's
gonna give you a full access to all the
files and make your backups and
everything else so alright thanks for
the questions everybody I I am welcome I
welcome your questions you can email
live at category-five dot TV if you
have anymore
