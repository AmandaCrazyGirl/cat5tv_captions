지난 몇 주 동안 나는
우리 팀이
우리는 내 엉덩이라고 불러
엉덩이하지만 Kat five dot TV /-내가있는 곳
제품에 대한 모든 링크를 넣어
우리가 볼 것입니다
토론은 주변을 둘러싼
결정은 잘 우리는 USB 3.0과 함께 가나 요
우리는 또한 eSATA 포트를 얻을 수 있도록
그것은 우리에게 최대 6을 줄 것입니다
초당 기가비트 또는 우리는 똑바로 가나 요
이론적으로 할 수있는 USB 3.1 Rev에
초당 최대 10 기가비트를 제공 할 수 있습니다.
그러나 이것에 대한 한가지주의 할 점은
우리가 될 장치
연결-이상한 홀수 xu4
싱글 보드 컴퓨터는
ASP가 포함 된 USB 3.0을 사용하면
초당 5 기가비트
에 던져 질 숫자는 그래
오래 된 로비에 대 한 많은 숫자
이 대머리에서 기억하지만 그것은
모든 결정은 나에게 의미가 있었다
미래를 준비하고 가고 있지만
USB 3.1 Rev를 사용하면
5시에 Nass 유닛에 접근 할 수 있습니다
에서 초당 기가비트
오드 로이드 xu4
우리의 Nass와의 연결성은
어쨌든 기가비트 이더넷 기반
해당 보드의 이더넷 포트
초당 천 메가 비트이거나
내가 좋아할지라도
5시에 드라이브와 통신
그런 다음 통신이 기가비트
xu4에 하나만 될 것입니다
기가비트이므로 이론적으로
그 결과는 통신
나스의 두뇌 사이는 여전히
우리보다 5 배 빠를 것입니다
실제 처리량-
그 좋은 단위 자체 그래서 나는 이것을 가지고
이 기기는 cat5 dot TV /
내 Nass를 살펴 보도록하겠습니다.
지금 나는 두 개의 드라이브를 넣어
여기에 분명히 안정적이지 않은 드라이브
II는 잠시 후에 그 일을 할 것입니다
이 녀석은 그냥 빠졌어 괜찮아
그래, 2 개의 4 테라 바이트 드라이브가 있습니다
방금 연결 한
내가 그냥 친절했기 때문에 백 백플레인
바로 전에 이것으로 놀아
그것이 어떻게 운영되는지보기위한 쇼
정말 켜지지 않았어요
내가 이것을 연결할 수 있음을보고 싶었다
운전하고 그들이 어떻게 연결되어 있는지 확인
예전의 2TB 드라이브가 2 개 있습니다
백업 장치와이 아이디어는
이 장치를 사용할 수있을 것입니다
기본적으로 단지 여러 드라이브
내 컴퓨터에 연결되어 있으므로
엉덩이 포함 엉덩이 인클로저이
하드 드라이브 인클로저는 큰
쇼핑 할 때의 차이
이런 종류의 것들을 위해 이것을 유지하십시오
내가 선택한 것을 염두에두고
무엇을하지 않는 엉덩이 단위가 아닙니다
우리는 나에게주는 장치를 원한다
외장 하드로 이러한 드라이브에 액세스
드라이브에 4 개의 SATA 후면 판이 있습니다.
후면 판에는 최대 4 개의 SATA가 사용됩니다
드라이브와 함께 내가 볼거야
마치 마치 4 개의 새로운 하드 드라이브
USB 외장 하드 드라이브에 연결
배후에있는 이론 인 내 컴퓨터
여기에 습격이 일어나지 않습니다
미러링이 없습니다. 아무것도 없습니다.
그것은 단지 네 개의 드라이브에 연결되어 있습니다
Linux 시스템에서 xu4를 사용하여
리눅스와 함께 제공되는 놀라운 소프트웨어
나는 리눅스가 가능하기 때문에 할 수있을거야
서버 OS처럼
이번 주에 배우고 우리는
리눅스를 좋아하는 상위 500 대
서버를 위해
개별 SATA와 같이 표시됩니다
내가 무엇이든 할 수있는 외장 하드 드라이브
그들과 함께 원해서 우리가 놀게
미러링으로 어레이 생성
우리는 모든 것을 확인합니다
우리가 할 수있는 다양한 일이지만
기기는 최대 4 개의 드라이브를 사용하므로
결정할 수있다
데이터를 분류하는 방법
내가 방금 두 개의 드라이브를 가지고
시연을 위해 드라이브
오늘은 이렇게 생겼습니다
우리는 그것을 가지고 있으며 그것은 단순히
나에게주는 매우 기본적인 SATA 백플레인
이 드라이브에 접근 할 수있는 한
장착은 실제로 없습니다.
드라이브 트레이 또는 이와 유사한 것 없음
이 작은 플라스틱 남자가
그 전면에 갈거야
조금만주는 드라이브
그것을 뒤쪽으로 밀어 더 많은 압력
비행기는 이것처럼 이렇게 들어갑니다
번호 하나를 드라이브와 바로 압착
후면 판 드라이브 번호 2로
이 때문에 4 테라 바이트 모두
내 오래된 백업의 기둥은 여기를 참조하십시오.
내가 할 수있는 것보다 더 잘 볼 수 있고
우리는 거기에 똑바로 가서
여기이 사람은 바로 갈거야
상단과 클립처럼
어쨌든 클립을 거의 얻었고
문을 닫으면 괜찮아
토고
그래서 우리는 그것을 발사하고 그냥
이게 어떻게 보일지 봅시다
컴퓨터 여기에 노트북이 있고
내가 할 일은 빨리하자
우선 확대하고 LS 슬래시
난 그냥보고 싶어 SD 슬래시 SD 스타
거기에 내가 단 하나 밖에 없어
내 노트북에 드라이브 내 SD입니다
축소하겠습니다.
여기 조금 있고 나는 떠날거야
G Part II D 우리가 얻을 수 있도록
이게 어떻게 생겼는지 봐
하드 드라이브까지는
SD와 그게 유일한 하드 드라이브
컴퓨터에서 전원을 공급할 수 있습니다
여기에 전원 버튼이 있고
내가 가지고있는 것은 USB 3.1 a USB C를 가지고 있다는 것입니다.
USB 표준에 연결하는 케이블
내 노트북과 같은 부분입니다
나에게 사용할 것과 같은 케이블
내 연결
내 전으로-당신은 지금 방금 들었어요
내 노트북에 딩이있어서 무엇을 보자
여기서 무슨 일이야
그래서 G part ed에서 우리는 내가 뭘보고 있는지
G 파트 II D 새로 고침 장치를 여기로 이동
이제는 4 테라 바이트 드라이브를 3.6
할당되지 않은 공간을 보여주는 것
좋은 소식이야
바로 여기 확대 해 봅시다
조금만 똑같이 봅시다
명령과 이제 우리는 s DB SD c
SD d와 SD e는 이제 우리가 C라고 상상합니다
DD와 SD를보고
드라이브 할당은
리눅스는 장치를 세분화하여
내 실제 내부 하드 드라이브로 SD a
내 노트북 ​​SD B는 아마도 첫 번째
순차적 인 경우이 i의 슬롯
SDC는 두 번째입니다. SD d는
세번째와 SD e는 네번째
내가 맞다면 우린 그걸 찾을거야
우린 잘할 수있어
다시 G part ed로 들어가서
그것은 어쨌든 그것을 확인하는 빠른 방법입니다
비밀번호를 알고 입력 한 경우에도
올바르게
예 s DB 및 SDC 그래서 s DB는
섀시 SDC에있는 첫 번째 드라이브
내 두 번째가 될거야 그래서 난 무엇인가
내가 원하는 모든 것을 먼저 할거야
이 XF 엉덩이를 포맷하여
도구 몇 가지 sudo su 및 다음으로 로그인
슈퍼 사용자와 나는 적절한 업데이트를 갈거야
이걸 조금 움직여
집에있는 사람들은 이것을 받아들이고 싶습니까?
왜 그래 그래 내가 변경
XPT 프라하를 설치해라
내가 벌써 가지고 있다고 봐
어떤 파일 시스템을 고려 하시겠습니까
당신의 Nass 당신은 당신이 생각하는 ext4를 생각할지도 모른다
버터 FS 같은 것 같아
내가 몇 가지가 있습니다
내가 이것을 만들 때 고려할 것입니다.
모든 X FS 중 첫 번째 배열은 최신 파일입니다
사실상 무한한 시스템
내가 가질 수있는 파일 수
Nass는 내 파일 시스템에 있으므로
믿을 수 없는
^처럼 우리도 셀 수 없어
그 높이는 엄청난 양을 허용하고
대용량 드라이브처럼
현대 저널링 파일 시스템이지만
우리의 FS 그것은 내가 좋아하는 훌륭한 파일 시스템입니다
버터 FS 그러나 나는 여전히 느낌
몇 가지 걱정이 몇 가지 있습니다
예상치 못한 전력 손실과 버터 FS
때때로 우리가 가진 일이 일어날 수 있습니다
우리 지역의 정전
힘이 나간 커뮤니티
UPS가 마침내 포기할 때까지
그런 일이 일어나고 싶지 않다면
데이터 손실 또는 패리티 문제이므로 X FS는
파일 시스템을 많이 유지할 수
버터 FS는
실제로 패리티를 잃을 수있는 문제
전원이 꺼지면 데이터가
내가 피하고 싶은 것
내가 잃어버린 경우 myarray 그러나 cuz
드라이브의 경우 내 배열의 패리티 데이터
실패하면 문제가 생길 것입니다
내 데이터를 다시 작성하면
잠재적으로 약간의 데이터 손실이 있으므로
바로 내가 피하고 싶은 것입니다
이제 x FS Prague가 설치되었으므로
이제 FS를 만들 수 있습니다.
드라이브를 분할하고
내가 원하는 터미널 사람들 에서이 작업을 수행
터미널 에서이 작업을 수행하여
실제로 어떻게했는지 볼 수 있습니다.
GUI를 사용하지만 당신이되고 싶어요
터미널 에서이 작업을 수행 할 수 있습니다.
우리는 그것이 dev / s DB가 될 것이라는 것을 알고 있습니다.
그건 내
첫 번째는 괜찮아요. PI를하면
이 테라 바이트 드라이브입니다 참조
그들은 3 포인트 7 테라 바이트이고
그때는 네 점 ㅋ ㅋ ㅋ ㅋ ㅋ
바이트는 모두 102로 반올림됩니다.
그래서 우리는 새로운 파티션을 만들 것입니다
지금 당신이 도움이 필요하면 그냥 밀어
M은 무슨 도움이 되었습니까?
많은 의미가 있지만
물론 우리가하는 첫 번째 명령
새로운 파티션에는 n이 필요합니다.
n을 누르면 파티션 번호를 입력합니다
그냥 Enter 키를 누른 다음
섹터 입력 후 마지막 섹터 입력
전체 드라이브를 사용하고 싶기 때문에
서명을 제거하고
저 한테이 드라이브를 물어봐
이미 파일 시스템이 있고
암호화 된 crypto Luc의 서명
아마 당신의 루크 덤프로 생성
그게 내 오래된 것이기 때문에 이미 알고 있습니다
백업 기억하지만 내가 언급
내가 지금 새로운 백업을 받았음을 알고
이것은 중복되며 필요하지 않으며
가능한 지점에 중복
나는 아무것도 잃지 않을 것입니다 파괴
그 서명을 제거하고 싶습니까?
알았어 우리가 갈거야 그래서 내가 쓸거야
W와 함께 나가면 그렇게하면 지금 끝났습니다.
F 디스크-L 슬래시 개발 슬래시 DB I
내가 지금 s DB 하나를 가지고 있음을 알아야한다
이것은 s DB의 첫 번째 파티션입니다.
내 섀시에서 첫 번째 드라이브이며
전체 3.7 테라 바이트이며
리눅스 파일 시스템 이제 마운트 할 수 없습니다
아직 파일이 없기 때문에
시스템은 FS를 mkfs 도트 x FS로 만듭니다.
x FS 파일 시스템을 선택했기 때문에
X t4도 제대로 할 수 있지만 우리는
x FS를 수행하고 dev s DB를 사용합니다.
지금 것 중 하나는 정말 정말
x FS에 대한 좋은 점은 그것이 속도입니다
드라이브를 4 테라 바이트로 포맷합니다
운전하고 아마 아마 말할 것입니다
해당 드라이브를 포맷 할 수있을 것입니다
10 분의 1의 시간처럼
4 ext4 또는 유사한 것을 취할 것
지금까지 나는 하나의 드라이브가 있습니다
x FS 포맷 나는 그것을 분할했습니다
전체 4 테라 바이트 파티션이 있습니다.
말하다
7 테라 바이트이고 포맷하고 있습니다
Linux 터미널을 사용하는 XFS
이것은 내가 원하는 이유의 일부가 될 수 있습니다.
터미널에서 이것을 보여주기 위해
이것은 내 X Xu가 될 수 있기 때문에
나는 SSH 주석이 될 수 있으며 이것은
외부 USB에 연결되어
이미 포맷 완료
테라 바이트 당신은 그렇게했다고 믿을 수 있습니까
이제 실제로 마운트 할 수 있습니다.
마운트 지점을 만들었으므로 / mnt
MNT에서 마운트 포인트를 만들자
내가 전화 할게 그냥 전화 할게
쉬운 일이기 때문에 재미를 위해 DB 하나
그 의미를 이해
저는 리눅스를 배우면서
신인 리눅스 사용자
마운트 포인트는
정말 혼란스러워서
전에 마운트 포인트로 작업 한 적이 없습니다
터미널 또는 어떻게 이것이 확실하지 않은지
작품은 질문을 자유롭게하지만
설명하기 위해 최선을 다하겠습니다
리눅스는 말과 다른 방식으로 작동합니다
연결시 Windows Windows가 사용
드라이브에서 그것은 C 드라이브와 같습니다
그것은 당신의 D 드라이브입니다 그것은 당신의 II 드라이브입니다
이제 리눅스에서는 10 개를 꽂을 수 있습니다
드라이브와 드라이브가없는 드라이브
편지 그들은 그들 중 하나처럼 될 수 있습니다
당신의 부츠와 그들 중 하나가 될 수 있습니다
당신의 경로가 될 수 있고 그들 중 하나가 될 수 있습니다
홈 폴더 중 하나가 될 수 있습니다
당신의 백업과 그들은 모두 연결되어 있습니다
파일 시스템 구조를 통해
이 경우 나는 그 하나를 넣어거야
내가 있기 때문에 / mnt 슬래시 stb-1에서 운전
마운트 포인트를 만들었습니다
그 시점에서 일명 폴더이지만
혼란 스러울 수있는 곳은 내가
처음이 물건을 배우기 시작했습니다
내가 지금 DB의 하나에 갈 것입니다
이 폴더를 만들었고
거기에 몇 가지 파일이 있지만 그렇지 않습니다.
심지어 드라이브가
현재 마운트되어있는 모든 파일
실제로 내 SD에 가고있다
내장 하드 드라이브를
아직 연결하지 않았기 때문에 노트북
이 드라이브를 마운트 지점으로
내가 그렇게 할 방법
영구적으로하는 방법이지만
일시적으로 테스트하기 만하면됩니다.
나는 슬래시 개발 슬래시 SDP를 마운트 갈거야
우리는 그것이 우리의 것임을 알고 있기 때문에
해당 드라이브의 첫 번째 파티션
XFS를 포맷 한 다음 마운트합니다
/ mnt 슬래시 SD b1
그래서 내가 말하고있는 것은 이것입니다.
이 마운트에 대한 파티션 SD b 하나
포인트 AKA 폴더 SD b 하나의 히트 지금 입력
SD b1에 들어가면 정확히 보입니다.
그러나 내가 여기서하는 일은
실제로 외부 하드에서 진행
하나의 폴더로 돌아 가면 지금 드라이브하십시오.
나는 명령이있는 것을 마운트 해제합니다.
내가 가면 실제로 SD b1을 마운트합니다
다시 stb-1로 돌아가서 LS를 봅니다.
빈
글쎄, 내 파일이 어디로 갔는지
지금은 실제로 SD를보고 있습니다.
다시 장착하고 입력하지 않습니다
내 마운트 명령이 다시 들어갑니다.
사실 외장 하드 드라이브를보고
내가 만든 테스트 파일이 켜져 있도록
내가 본이 불쾌한 첫 번째 드라이브
우리의 섀시에는 외부 섀시가 있습니다
바로 거기에 장착되어 있지 않으면
해당 파일에 액세스 할 수 없습니다
내가 할 수있는 또 다른 일이 있습니다
무엇 때문에 매우 도움이됩니다
SD b1을 마운트 해제하면
이제 괜찮다면 SD가 마운트되지 않습니다.
내가 지금 일어날 수있는 일을 봐
터치 테스트-이제 파일이 있습니다.
돌아가서 test2를 호출하면
마운트 명령을 실행하여
우연히 있다
테스트 2가 있는지 확인하십시오.
지금 SD b1로 가서 LS를 수행하고
도대체 어디에서 테스트했는지 잘 테스트합니다.
나는 내 파일을 잃어 버렸다
테스트 2는 SDA에 있었기 때문에
마운트되지 않았으므로 지금 혼란스러워합니다.
이게 내가 어렸을 때 있었던 곳이야
신인 리눅스 사용자가 아니었다면
마운트 또는 드라이브 마운트를 잊어 버린 경우
또는 올바르게 장착하지 않은 경우
내가 잘못된 곳에 설치했다
마운트 지점에 파일을 마운트 해제했습니다.
그래서 그들은 내 외부에 끝나지 않을 것입니다
왜 그렇게 중요합니까
백업을 실행하면 어떻게됩니까?
내 전 팀에 내 sd 드라이브를 백업
db1이지만 마운트되지 않았습니다.
실제로 내 SD에서 파일을 복사하고 있습니다.
내 SD에 같은 하드 드라이브 그래서
하드 드라이브가 내 백업과 충돌합니다.
쓸데없는 절대적으로 쓸모없는
마운트를 해제하면 어떻게 고칠 수 있습니까?
SD b1을 마운트하므로
마운트 폴더에 있습니다.
test2를 제거하고 다시 가겠습니다
이제이 채터 CH attr plus를보십시오
나는 그것을 불변으로 만든다는 것을 의미합니다.
그때 쓸 수 없도록
SD b1 괜찮아 이제 stb-1에 들어가면
나는 테스트 2를 다시 터치하려고 시도합니다.
그런 파일이나 디렉토리는 무엇입니까
해당 디렉토리에 파일이 있다는 것을 알고
왜 파일을 만질 수 없습니까?
내 디렉토리에 아직 마운드가 없습니다.
내 드라이브를 장착 했으므로
지금은 쓸 수 없기 때문에 그렇게
마운트 포인트에 대한 모든 것
내 백업 만 작동합니다
드라이브가 장착 된 경우 마운트 기능
사실 장착되었으므로 이제 여기로 돌아 갑시다
그것은 불변이다 나는 아무것도 할 수 없다
여기에 디렉토리를 만들 수 없습니다.
작업이 올라갈 수 없다고 말할 것입니다.
폴더와 이제 마운트를 실행하겠습니다
다시 명령 R을 추진하고 명령
내 역사로 돌아가서
이제 잘 고정 된 것을 확인하면
다시 stb-1로 갈 게요
이제 테스트 파일을 볼 수 있습니다
테스트를 터치하여 터치 할 수 없습니다
입력하고 대화 테스트 2를 진행합니다.
지금 당신은 그것이 작동했기 때문에 알 수 있습니다
제대로 장착되어 있으므로 실제로
stb-1 외부 하드 드라이브
마운트되어 있는지 확실하지 않은 경우
이 마운트를보고 그것은 나에게 목록을 제공합니다
잘 장착 된 모든 드라이브
그게 뭉개 지므로 마운트
파이프 그렙 SD 나에게주는 것
stb-1을 표시하는 한 줄이므로
dev stb-1이 마운트되었음을 ​​보여줍니다.
/ mnt
SDP 하나를 슬래시합니다.
마운트를 해제하고 똑같이 실행하십시오
출력되지 않기 때문에 명령이 출력되지 않습니다
현재 마운트되어 있으므로
다시 해봐
거기서 우리는 이제 그 명령을 실행합니다.
그것은 그것을 제공하는 마운트입니다
나에게 탑재 된 모든 것들의 결과물
맞아하지만 나는 어느
기본적으로 Linux와 동등한
이 SD의 출력을 1로 검색하고
Enter 키를 누르면 내가 될 수있는 것
dev를 검색하면 나에게 줄 것입니다.
dev라는 단어가 포함 된 모든 것
글쎄 아니, 난 내가 원하는 걸 필요 없어
SDP 하나 그리고 그것은 저를 제공합니다
내가 좋아할 때 약간 혼란
하지만 거기에 당신은 볼 수 있도록 이동
MN t / stb-1에 대한 DB 하나를 가지고 있다는 것을
유형은 내 파일 인 XFS입니다.
시스템과 갈 준비가되어 있으므로
내 Nass에 갈 준비가 된 첫 번째 드라이브
두 번째 드라이브는 정확히
우리는 그것이 내 SDC라는 것을 알고는
같은 단계를 순서대로 진행합니다
이것이 아니기 때문에 지금 만들려면
4 테라 바이트 드라이브에 넣을 수있는 공격대
나도 할 수있는 2 개의 테라 바이트 드라이브가 있습니다
그 외에 1 테라 바이트를 넣으십시오
500 기가를 넣어서 사용할 수 있습니다
드라이브의 믹스와 각각의 것
TB SDC s de D로 표시됩니다.
그리고 E 그리고 당신은
습격으로 그들 각각에 액세스
물론 4 테라 바이트가 필요하다면
잘 당신은 그들을 공격대로 설정할 수 있습니다 1
하지만 1 테라 바이트가 있다면
충분하지 않은 500 기가 바이트
정말로 그것들을 연결하고 사용하십시오
우리가 겪을 일
이 시리즈의 과정은 우리가
실제로 어떻게 사용할 수 있는지 시연
본 기기 또는 이와 유사한 기기
리눅스를 사용하여 배열을 만들려면
내가 섞을 수있는 도구
중복성을 만들 수있는 드라이브
우리는 온갖 종류를 창조 할 것입니다
당신이 할 수 있도록 정말 멋진 물건
기본 파일 시스템 이해
특질과 나는 오늘 밤 생각
몇 가지를 배웠을 수도 있습니다
아래에 의견을 남겨주세요
당신은 여기에서 그리고 무엇이든 배웠습니다
내가 관심을 가지고있는 것은
오늘 밤 그리고
우리는 시리즈의 과정
그런 것들을 배우는 것
같은 뒤에 작은 장신구
우리가 좋아하는 UI
Nass의 인터페이스처럼 설치
단위와 우리가 보는 모든 것은 웹입니다
인터페이스 잘 우리가 일 할거야
우리가 어떻게 이해할 수 있도록 후드 아래
모든 것이 작동하고 데이터를 안전하게 유지
꽤 멋지네요
정말 빨리 쉬어 내가 옳을거야
다시 스틱
[음악]
다시 환영합니다. 이것은 카테고리 5입니다.
테크놀로지 TV 지금 우리 방송은 생방송
이걸보고 있어도
몇 가지 질문이 있습니다
우리의 불화 채팅 첫 번째 질문에서
마쉬 맨은 어떻게 오냐고 묻습니다.
연결 시연중인 노트북
NASA에 지금은 그것을 언급했다
공연의 최고이지만 당신은 가지고 있지 않을 수도 있습니다
그것을 잡았다 그리고 난 그냥거야
내가 마운트 해제했기 때문에 전원을 끕니다
당신은 내가 마운트 명령으로 그것을
전원 버튼을 누르고
드라이브를 끄고 안전하게
거기로 이동
이들은 회전 드라이브임을 기억
당신은 이걸 움직이고 싶지 않아요
그들은 당신이 할 수 있기 때문에 회전
실제로 물리적 손상을 야기
드라이브의 플래터에는 바늘이 있습니다.
기본적으로 우리는 그들을 생각
레코드 플레이어와 같은 오래된 레코드
LPS 당신은 위에 떠오르는 머리를 가지고 있습니다.
위에 아주 작은 공기 쿠션
매우 민감한 자기 플래터이므로
전원이 켜져있는 동안 이동
플래터는 7,200 회전으로 움직입니다
분당 그래서 내가 그런 이동하면
머리가 플래터에 닿는 방식
스크래치 데이터 손실 가능 하드 드라이브
고장 난 항상 전원을 끕니다
이동하기 전에 어떻게 연결합니까
난 그냥 여기에 전원을 분리 해요
장치의 뒷면이며 내가 가진 모든 것
USBC 케이블은 괜찮습니다.
이 끝은 지금 랩톱 끝입니다
여기에서 플러그를 뽑을 것입니다.
같은 케이블의 다른 쪽 끝으로
USB C와 USB가있어서
랩톱이나 다른 장치에 연결해야합니다.
내 Odroid xu4 인 USB 3.0 장치
그것이 우리가 달성하고자하는 것입니다
이 프로젝트의 과정을 통해
실제로 이것을 단일 전원으로
내가 한 이유는 보드 컴퓨터
선택한 xu4는
당신은 asp
저것은 USB에 의하여 부착되는 수수께끼 같은 프로토콜입니다
그것은 얻을 수 있다는 것을 의미합니다
초당 5 기가비트 데이터 전송
표준 USB와 달리 장치에
당신이보고있는 것보다 훨씬 빨라질 것입니다
공정한 비율이 더 많으므로
나는 이것이 ssh가 아니라 연결되었다
연결 또는 이와 같은 것
바로 같은 USB 직접 연결
그것은 우리의 Odroid xu와 함께있을 것입니다.
나는 그것을 보지 않고 Odroid xu
오늘 밤 나는 실제로 이것을하고있다
내 노트북을 사용하는 것은 엄밀히 말해서
데모 중 이것은 일련의
시연 및 프로젝트
내 엉덩이로 이끄는
고양이 다섯 점 TV /-그것이 전부입니다
함께 올 수 있지만 Xu 4는
의 단계 중 하나가 될 것입니다
이 단위를 만드는 과정이지만
당신에게 종류를 보여주고 싶었다
우리가 될 기초
설정하고 난 당신이 원하는
이 작은 것의 일부를 배우십시오
리눅스 명령은 터미널에서 다음과 같이 작동합니다
모든 것이 끝날 것이기 때문에
터미널에서 다른 질문
우리 bp9 당신은 foo를 매우 환영합니다
이것을 호출-예 지금이
이 인스턴스에서 이것을 즉석에서
직접 연결된 스토리지 아이디어는
우리는 이것을 취할 것입니다-단위
의사 NAS 또는 백업으로 전환
Xu 4를 사용하는 시스템은 Xu 4가
이것의 두뇌가되고
그런 다음 액세스 할 수있게됩니다
네트워크 연결 스토리지로
내 노트북에 연결해야
내가 접근 할 수 있다는 걸 알아
이더넷을 통한 Wi-Fi 및
다른 것들을 그리워 했어
질문 이제 대화방을보고 있어요
내 휴대 전화에서 화면이
비교적 작은 경우
화면에 의해 날아가는 경향이 있으므로
에 대한 다른 질문이 있습니다
프로젝트 또는 내가 여기서 가르치는 것
오늘 밤 나는 크게 봤다.
여러분 모두 여기와 주셔서 감사합니다
여기 나는 그것이 정말로
주된 질문 I bp9 yeah okay so you
내가 어떻게 할 수 있었는지 궁금해
NASS 장치에 직접 연결
엉덩이가 아니기 때문에
foo는 직접 첨부되어 있다고 말합니다.
이 인스턴스의 스토리지는 모두
그래도 바뀌고
넌 X에 익숙하지 않아
Droid X는 마이크로 컴퓨터이므로
라즈베리 파이를 생각하면
작은 컴퓨터가 제 주머니에 딱 맞습니다
여기에 나와 함께 있었으면 좋겠지 만 거기에
실례지만 실례 할 수 있다면
순간 하나를 가질 수있어
여기에 세트에서 우리는 그래서이
Q에는 droid Xu가 없으며 Q는
이 거대한이 있기 때문에 조용
방열판 그래서 이것은 보드입니다
우리의 nass 유닛에 전원을 공급할 때
이것은이 될 엉덩이가된다
컴퓨터가 갈 두뇌
데비안 리눅스 데비안 10
여기에 마이크로 SD가 있습니다.
emmc에있을 것입니다 그리고 우리는거야
장착 형태를 설정하다
이런 식으로 숨기려면
그것은 유닛 자체의 일부가 될 것입니다
우리가 넣을 수있는 것
당신의 방은 당신이 알고
옷장이나 설정할 수있는 것
이더넷 케이블 만 연결하면됩니다
여기에 기가비트 이더넷이있는
당신에게 모든에 대한 모든 액세스 권한을 줄거야
파일을 백업하고
감사합니다
질문 다들 다 환영합니다 I
이메일로 질문을 환영합니다
만약 당신이 카테고리 5 도트 TV에 살고
더 이상 가지고
