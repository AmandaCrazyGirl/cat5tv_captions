WEBVTT
Kind: captions
Language: ja

00:00:02.270 --> 00:00:08.940
ウェブサイトで作業しているとき、または

00:00:05.790 --> 00:00:12.090
あらゆる種類のグラフィックプロジェクトに取り組んでいます

00:00:08.940 --> 00:00:14.730
かなり頻繁にベクター画像をリクエストします

00:00:12.090 --> 00:00:16.859
私のクライアントから、クライアントはああ言うかもしれません

00:00:14.730 --> 00:00:20.130
まあ私たちはそのようなものを持っていません

00:00:16.859 --> 00:00:22.920
さらに良いのは一体何がベクトルなのか

00:00:20.130 --> 00:00:24.359
画像が正しいので、多分それは

00:00:22.920 --> 00:00:28.529
最初に答えなければならない質問なので

00:00:24.359 --> 00:00:32.880
ラスター画像または次のような平坦化された画像

00:00:28.529 --> 00:00:34.890
 JPEGまたはペインティングまたはビットマップは

00:00:32.880 --> 00:00:39.780
ラスタライズ画像と呼ばれるものは

00:00:34.890 --> 00:00:43.829
画像は、 

00:00:39.780 --> 00:00:46.680
作成者はそれを保存したので、 

00:00:43.829 --> 00:00:48.989
ビデオは1920 x 1080ですので、 

00:00:46.680 --> 00:00:51.870
そのビデオのスクリーンショットのスクリーン

00:00:48.989 --> 00:00:55.379
ショットは、1920 x 1080になります

00:00:51.870 --> 00:00:57.210
それを縮小することができます

00:00:55.379 --> 00:01:00.390
あなたはそれを縮めることができて、それはつもりです

00:00:57.210 --> 00:01:01.949
しかし、あなたが試したことがあるなら素晴らしい

00:01:00.390 --> 00:01:05.369
大きくするために

00:01:01.949 --> 00:01:06.659
今では4kスクリーンにうまくフィットしたかった

00:01:05.369 --> 00:01:09.450
あなたがしていることはあなたがそれを取っていることです

00:01:06.659 --> 00:01:12.540
 1080個のスクリーンショットとあなたは

00:01:09.450 --> 00:01:14.460
それを伸ばすとどうやって

00:01:12.540 --> 00:01:17.220
コンピュータはそれをうまく伸ばします

00:01:14.460 --> 00:01:20.310
ストレッチするすべてのピクセルを再作成します

00:01:17.220 --> 00:01:22.799
それらと各ピクセルが引き伸ばされるので

00:01:20.310 --> 00:01:24.780
最終的にあなたが十分に大きくなったとき

00:01:22.799 --> 00:01:27.479
歪みが発生します

00:01:24.780 --> 00:01:30.659
ぼやけを取得し、これはあなたが

00:01:27.479 --> 00:01:32.939
ロゴを取ると、それは完璧な例です

00:01:30.659 --> 00:01:35.090
あなたはウェブサイトから小さなロゴを取ります

00:01:32.939 --> 00:01:37.619
そして、あなたは看板にそれを印刷しようとします

00:01:35.090 --> 00:01:39.420
よくそれは良く見えないだろうと

00:01:37.619 --> 00:01:42.030
品質管理のある人は

00:01:39.420 --> 00:01:44.220
あなたは私たちが必要とすることをしないと言います

00:01:42.030 --> 00:01:45.960
ベクトル画像

00:01:44.220 --> 00:01:51.659
画像どのようにベクトル画像を取得できますか

00:01:45.960 --> 00:01:55.530
大丈夫じゃないので

00:01:51.659 --> 00:01:57.479
グラフィックアイ私はグラフィックデザイナーではありません

00:01:55.530 --> 00:01:59.430
しかし、私はその用語を大まかに使用します

00:01:57.479 --> 00:02:00.960
あなたのグラフィックを取ります

00:01:59.430 --> 00:02:03.619
品質管理と私はそれを確認します

00:02:00.960 --> 00:02:07.039
ビルボードの準備が整いました

00:02:03.619 --> 00:02:10.459
何回もあなたを助けるために私は何ができますか

00:02:07.039 --> 00:02:13.760
ラスターとしてそれらのグラフィックにアクセスできます

00:02:10.459 --> 00:02:17.150
画像ですが、ベクトルではありません

00:02:13.760 --> 00:02:18.739
私が作るなら、それを拡大するとロゴです

00:02:17.150 --> 00:02:20.569
そのための小さなロゴ

00:02:18.739 --> 00:02:22.790
ウェブサイトとそれをビルボードに拡大

00:02:20.569 --> 00:02:25.129
それはすべて粒状になるだろうそれは得るだろう

00:02:22.790 --> 00:02:27.470
ぼやけてブロック状のようなものができます

00:02:25.129 --> 00:02:29.629
ピクセルでひどく見える

00:02:27.470 --> 00:02:32.090
あなたはそれをまったく避けたいので終わります

00:02:29.629 --> 00:02:35.930
コストベクトルはベクトルにある

00:02:32.090 --> 00:02:38.269
画像は基本的に違いです

00:02:35.930 --> 00:02:41.299
レンダリングされた画像の代わりに

00:02:38.269 --> 00:02:45.380
そのキャンバスに保存されたすべての種類のピクセル

00:02:41.299 --> 00:02:48.049
それはうまく指示するテキストファイルです

00:02:45.380 --> 00:02:50.780
ここにカーブがありますので、これが

00:02:48.049 --> 00:02:54.860
曲線が同じになる曲線

00:02:50.780 --> 00:02:55.430
あれでこんなに大きいか

00:02:54.860 --> 00:02:58.010
それ

00:02:55.430 --> 00:02:59.930
それが許すベクトルです

00:02:58.010 --> 00:03:01.879
あなたはそれを拡大し、曲線は

00:02:59.930 --> 00:03:04.430
画像が同じままになる

00:03:01.879 --> 00:03:07.489
あなたがそれを印刷するのと同じように良くなる

00:03:04.430 --> 00:03:08.989
 500フィートの看板と私

00:03:07.489 --> 00:03:11.180
そのようなものが存在するかどうかはわかりませんが、 

00:03:08.989 --> 00:03:13.160
ベクターで印刷できますか

00:03:11.180 --> 00:03:16.459
あなたがラスター画像を取り、それをした場合

00:03:13.160 --> 00:03:19.160
それは恐ろしいことですが、しばしば来る

00:03:16.459 --> 00:03:20.450
私の業界で、そしておそらくあなたは

00:03:19.160 --> 00:03:22.910
私がしないような場所でこれに遭遇しました

00:03:20.450 --> 00:03:25.069
ベクトルがあるので、何をするつもりですか

00:03:22.910 --> 00:03:29.079
今日はLinuxの使用方法を検討しています

00:03:25.069 --> 00:03:33.109
変換するためのフリーソフトウェア

00:03:29.079 --> 00:03:34.819
ラスター画像がベクターになりました

00:03:33.109 --> 00:03:37.459
これを可能にするオンラインツール

00:03:34.819 --> 00:03:39.200
それはクールですが、あなたが今までに見て

00:03:37.459 --> 00:03:41.239
あなたがそれを実現するソースコード

00:03:39.200 --> 00:03:44.569
これを無料で行うオンラインツール

00:03:41.239 --> 00:03:46.910
彼らがしているのは

00:03:44.569 --> 00:03:49.760
必然的にすべて彼らは常に、それはそうではありません

00:03:46.910 --> 00:03:53.630
常にそうですが、かなり頻繁にそれら

00:03:49.760 --> 00:03:55.549
無料のツールがそのラスター画像を取得しています

00:03:53.630 --> 00:03:58.370
そして彼らはそれをベクトルに入れて

00:03:55.549 --> 00:04:04.090
その後、彼らはラスター画像を埋め込みます

00:03:58.370 --> 00:04:06.290
まだラスターであるようにベクトルファイルに

00:04:04.090 --> 00:04:08.000
代わりに、私たちがやりたいことは

00:04:06.290 --> 00:04:11.180
その画像を撮って、トレースしたい

00:04:08.000 --> 00:04:12.370
すべての曲線の周りにあるので、 

00:04:11.180 --> 00:04:15.010
文字S 

00:04:12.370 --> 00:04:16.720
その手紙の周りをトレースしたいので

00:04:15.010 --> 00:04:20.560
スケールアップすると

00:04:16.720 --> 00:04:22.120
絶対に完璧に見える方法

00:04:20.560 --> 00:04:24.160
それは多くの仕事のように聞こえます

00:04:22.120 --> 00:04:26.530
私たちはラスター用語で考えているからです

00:04:24.160 --> 00:04:29.050
私たちはGNUイメージで考えています

00:04:26.530 --> 00:04:31.660
操作プログラムまたはPhotoshopおよび

00:04:29.050 --> 00:04:33.130
すべてを追跡する方法

00:04:31.660 --> 00:04:35.740
そしてそれはただ絶対に残忍です

00:04:33.130 --> 00:04:38.050
しかし、Linuxはそれをずっと簡単にします。 

00:04:35.740 --> 00:04:40.960
私が持って行くつもりの私の端末に飛び込む

00:04:38.050 --> 00:04:44.020
ここで私のコンピュータをアップし、必要なのは

00:04:40.960 --> 00:04:46.960
私がしようとしている簡単なプログラム

00:04:44.020 --> 00:04:48.940
最初にインストールしますが、次に取得します

00:04:46.960 --> 00:04:53.440
ロゴをウェブから切り離すので、 

00:04:48.940 --> 00:04:58.960
 rootになるので、Linux Mintではsudoです

00:04:53.440 --> 00:05:01.900
 suまたはsu do suこれらの純粋主義者のために

00:04:58.960 --> 00:05:04.810
私はあなたのパスワードを入力してください

00:05:01.900 --> 00:05:07.240
スーパーユーザーなので、私は今ルートユーザーです

00:05:04.810 --> 00:05:09.700
 apt updateと入力できます

00:05:07.240 --> 00:05:12.160
最新のリポジトリ情報を取得する

00:05:09.700 --> 00:05:14.080
これらはオンラインです

00:05:12.160 --> 00:05:16.419
利用可能なLinuxアプリケーションと私は

00:05:14.080 --> 00:05:21.090
 apt installに行くと

00:05:16.419 --> 00:05:23.950
ここでは本当に簡単なコマンドpo trace 

00:05:21.090 --> 00:05:26.590
それは私と呼ばれるプログラムをつかむつもりです

00:05:23.950 --> 00:05:29.410
 Poe traceと呼ばれるのかどうかわからない

00:05:26.590 --> 00:05:32.169
 PioトレースはPoeトレースと呼び、 

00:05:29.410 --> 00:05:36.070
インストールされたので、今はい

00:05:32.169 --> 00:05:38.979
 Poe traceと入力すると--助けて

00:05:36.070 --> 00:05:41.229
素晴らしいヘルプダイアログが表示されます

00:05:38.979 --> 00:05:43.060
申し分なく、今すぐインストールしました。 

00:05:41.229 --> 00:05:45.820
ウェブにジャンプしてみましょう

00:05:43.060 --> 00:05:49.450
ここで、実際にあなたに知らせましょう

00:05:45.820 --> 00:05:52.330
カテゴリー5ドットテレビをつかもう

00:05:49.450 --> 00:05:54.280
ロゴそれがどのように機能するかを見てみましょう

00:05:52.330 --> 00:05:56.860
それはウェブ上にあり、私が

00:05:54.280 --> 00:05:59.800
それを右クリックして画像を開き、 

00:05:56.860 --> 00:06:02.620
新しいタブをクリックしてみましょう

00:05:59.800 --> 00:06:04.510
私のイメージすごいそれは本当に小さいです

00:06:02.620 --> 00:06:07.389
それがどれだけうまくいくかわからない

00:06:04.510 --> 00:06:10.840
おそらくあなたはそれが私を作ることを知っています

00:06:07.389 --> 00:06:12.849
初期の品質管理について考える

00:06:10.840 --> 00:06:15.970
私たちはこれをやっているので、試してみたい

00:06:12.849 --> 00:06:18.220
できる最大の画像を取得する

00:06:15.970 --> 00:06:20.770
それを持っているものとしてそれを取得してみてください

00:06:18.220 --> 00:06:23.110
たとえばピンのようなアルファ層

00:06:20.770 --> 00:06:25.390
完璧だと思います

00:06:23.110 --> 00:06:26.260
以下の場合、可能な限り明確であることを確認してください

00:06:25.390 --> 00:06:29.410
そこにやった

00:06:26.260 --> 00:06:32.920
またはその背後にあるドロップシャドウではありません

00:06:29.410 --> 00:06:35.590
ベクトルとしてうまくレンダリングするつもりだから

00:06:32.920 --> 00:06:38.380
ベクトルは

00:06:35.590 --> 00:06:41.680
ラスター画像は色付けされていませんが、 

00:06:38.380 --> 00:06:43.840
彼らは同じように色付けすることができます

00:06:41.680 --> 00:06:45.430
大丈夫と言うことができるようにそれらを表示します

00:06:43.840 --> 00:06:46.930
まあその部分はこれになるだろう

00:06:45.430 --> 00:06:49.270
パントンとその部分は

00:06:46.930 --> 00:06:51.040
このパントンですが、それは大きく異なります

00:06:49.270 --> 00:06:51.850
同じように保存しないので

00:06:51.040 --> 00:06:54.550
ラスター

00:06:51.850 --> 00:06:57.610
画像なので、私がしたいことは

00:06:54.550 --> 00:06:59.980
表示されるカテゴリ5テレビネットワークのロゴ

00:06:57.610 --> 00:07:02.530
そこに私の画面に私がやりたいかもしれません

00:06:59.980 --> 00:07:04.030
マスターイメージをつかむようなもの

00:07:02.530 --> 00:07:06.520
それはいくつかのドロップを持っているように見える

00:07:04.030 --> 00:07:10.840
シャドーイングに行くと私はおそらく行くことができます

00:07:06.520 --> 00:07:15.220
 wikiドットカテゴリ5ドットTV以降

00:07:10.840 --> 00:07:18.370
私のウィキはブランディングを見つけて

00:07:15.220 --> 00:07:22.090
カテゴリ5のブランディングと私はつかむことができます

00:07:18.370 --> 00:07:23.890
これらの実物大の画像の1つなので、 

00:07:22.090 --> 00:07:26.230
このようなもう少し何か

00:07:23.890 --> 00:07:29.380
ここの一番下で私の好みになります

00:07:26.230 --> 00:07:31.570
ワードマークファイルがあります。 

00:07:29.380 --> 00:07:34.120
あなたが知っているのは

00:07:31.570 --> 00:07:36.400
 Google画像などを見つけて

00:07:34.120 --> 00:07:38.680
あなたがいる画像の大きな画像

00:07:36.400 --> 00:07:39.940
そのような何かを探して

00:07:38.680 --> 00:07:42.550
かなりよく見えますが、これが

00:07:39.940 --> 00:07:45.940
実際にはpingファイルです

00:07:42.550 --> 00:07:47.650
しかし、それはpingですので、保存しましょう

00:07:45.940 --> 00:07:50.320
それをデスクトップに投げて

00:07:47.650 --> 00:07:53.170
ワードマークアンダースコアライトと呼ばれます

00:07:50.320 --> 00:07:56.500
ドットpingを使用すると、すぐに確認できます

00:07:53.170 --> 00:07:59.440
そこにあるので、それはラスター画像です

00:07:56.500 --> 00:08:02.020
はい、たまたま70個ある

00:07:59.440 --> 00:08:04.350
 4 4 4 2 2 1 8 7 

00:08:02.020 --> 00:08:07.660
本当にうまくやるピクセル

00:08:04.350 --> 00:08:09.070
それは巨大なイメージですが、何

00:08:07.660 --> 00:08:12.390
あなたがのような何か他のものを持っているなら

00:08:09.070 --> 00:08:12.390
 Google画像に進む

00:08:13.110 --> 00:08:19.199
すぐに検索してみます

00:08:16.560 --> 00:08:22.770
ロゴを検索して、何を見てみましょう

00:08:19.199 --> 00:08:24.389
私たちは大丈夫だと思います

00:08:22.770 --> 00:08:28.770
バーガーキングマクドナルドを手に入れました

00:08:24.389 --> 00:08:31.020
イケアはイケアのロゴを手に入れましょう

00:08:28.770 --> 00:08:32.599
それを使用する権利がありますが、これは

00:08:31.020 --> 00:08:35.310
デモンストレーションのためにフェアユース

00:08:32.599 --> 00:08:37.860
私たちはあなたに方法を教えていると言います

00:08:35.310 --> 00:08:39.839
これがありますので、2つのロゴがあります

00:08:37.860 --> 00:08:42.419
デスクトップにはカテゴリ5があります

00:08:39.839 --> 00:08:46.019
テレビのロゴとイケアのロゴがあります

00:08:42.419 --> 00:08:48.750
このプログラムでとても良い音

00:08:46.019 --> 00:08:52.310
インストールされているので、PO tresがインストールされています

00:08:48.750 --> 00:08:54.990
そして今、私は私のデスクトップに行きます

00:08:52.310 --> 00:08:58.410
私が持っている画像を見て

00:08:54.990 --> 00:09:00.450
両方ともpingイメージになりました。 

00:08:58.410 --> 00:09:02.760
 PO Traceで必要なもの

00:09:00.450 --> 00:09:05.160
 POトレイのみ

00:09:02.760 --> 00:09:06.810
ビットマップ画像をサポートしているため、 

00:09:05.160 --> 00:09:09.660
デモンストレーションの

00:09:06.810 --> 00:09:12.720
使いやすさと親しみやすさのために

00:09:09.660 --> 00:09:14.100
 BMPファイルを使用してコンピューターに戻す

00:09:12.720 --> 00:09:16.620
 GNUイメージを表示します

00:09:14.100 --> 00:09:20.130
操作プログラムは私がやっていることを覚えている

00:09:16.620 --> 00:09:22.500
これはすべてLinuxからLinux Linuxは無料です

00:09:20.130 --> 00:09:25.199
オペレーティングシステムGNUイメージ

00:09:22.500 --> 00:09:27.209
操作プログラムは無料の画像です

00:09:25.199 --> 00:09:30.540
ここでやっていることはすべてエディターです

00:09:27.209 --> 00:09:33.420
誰でも絶対に無料で利用できます

00:09:30.540 --> 00:09:35.130
 Windowsを使用している場合にこれを実行したい

00:09:33.420 --> 00:09:36.630
ああ言って、どうやってこれをやるの？ 

00:09:35.130 --> 00:09:40.410
インストールできるものがわかっているウィンドウ

00:09:36.630 --> 00:09:42.779
 Linux、それがあなたができる一つの方法です

00:09:40.410 --> 00:09:45.930
これをすべて達成するので、私はするつもりです

00:09:42.779 --> 00:09:49.199
エクスポートするので、カテゴリ5のテレビがあります

00:09:45.930 --> 00:09:51.329
ロゴこれを次の形式でエクスポートします

00:09:49.199 --> 00:09:54.779
ビットマップなので、変更するだけです

00:09:51.329 --> 00:09:56.220
拡張BMPを押してEnterキーを押すと、 

00:09:54.779 --> 00:09:58.649
ここでいくつか質問します

00:09:56.220 --> 00:10:01.709
それは大丈夫な互換性を言うでしょう

00:09:58.649 --> 00:10:04.079
オプションを開いて確認します

00:10:01.709 --> 00:10:05.550
これがチェックされていないことを書きません

00:10:04.079 --> 00:10:08.910
色空間情報になりました

00:10:05.550 --> 00:10:12.209
色空間情報が絶対に必要

00:10:08.910 --> 00:10:14.839
それはPOトレースの要件です

00:10:12.209 --> 00:10:18.420
 16ビットを表示できる高度なオプション

00:10:14.839 --> 00:10:22.140
 24ビットおよび32ビット、デフォルトは32ビット

00:10:18.420 --> 00:10:25.900
アルファレッドグリーンを表すRGB 

00:10:22.140 --> 00:10:29.530
青今ではRGBが必要ですが、 

00:10:25.900 --> 00:10:30.910
 POトレースは32ビット

00:10:29.530 --> 00:10:33.370
おそらくそれで問題が発生するでしょう

00:10:30.910 --> 00:10:35.710
代わりに、24ビットRGBを使用します

00:10:33.370 --> 00:10:38.920
それをクリックします

00:10:35.710 --> 00:10:42.700
 RGB 24ビットが選択されているので、 

00:10:38.920 --> 00:10:45.070
エクスポートをクリックして、デスクトップiで

00:10:42.700 --> 00:10:48.400
ここに別のファイルが必要です

00:10:45.070 --> 00:10:51.250
ワードマークライトBMPおよびi 

00:10:48.400 --> 00:10:51.730
それが私のロゴの外観であることをダブルクリックします

00:10:51.250 --> 00:10:55.120
それで

00:10:51.730 --> 00:10:57.790
 iならば、それはまだラスター画像です

00:10:55.120 --> 00:10:59.740
スケールしすぎて始めよう

00:10:57.790 --> 00:11:02.140
品質を失う

00:10:59.740 --> 00:11:05.890
実際にあなたがそれを見ることができることを示します

00:11:02.140 --> 00:11:09.070
ズームインするとそれらが見えますか

00:11:05.890 --> 00:11:11.920
ピクセル化されたエッジは、粒子の粗さを示します

00:11:09.070 --> 00:11:13.810
それがラスターであることがどれほどブロック状か

00:11:11.920 --> 00:11:16.350
画像はすべて保存したため

00:11:13.810 --> 00:11:19.750
ピクセルなので、代わりに作成します

00:11:16.350 --> 00:11:21.610
そのファイルに基づくベクトルは覚えている

00:11:19.750 --> 00:11:24.460
最初のステップは、そのビットマップが必要なことです

00:11:21.610 --> 00:11:26.950
 pingソースかどうかに関係なくファイル

00:11:24.460 --> 00:11:28.900
 JPEGまたはあなたがたまたま何でも

00:11:26.950 --> 00:11:30.820
最初にビットマップに変換する必要があり、 

00:11:28.900 --> 00:11:32.850
 Poeトレースは

00:11:30.820 --> 00:11:35.410
それで、Poe traceと入力します。 

00:11:32.850 --> 00:11:38.410
そして今、あなたにはいくつかのことがあります

00:11:35.410 --> 00:11:40.570
できること--学習方法の詳細

00:11:38.410 --> 00:11:42.400
これは機能し、あなたがやりたいこと

00:11:40.570 --> 00:11:44.620
ここまでスクロールして何を見ることができます

00:11:42.400 --> 00:11:46.480
種類のオプションが利用可能ですが、 

00:11:44.620 --> 00:11:48.460
私が考えていることを伝えます

00:11:46.480 --> 00:11:50.530
私たちのためにうまく動作し、私たちはここに表示されます

00:11:48.460 --> 00:11:54.310
これがうまくいくなら空中で生きる

00:11:50.530 --> 00:11:58.330
私はやる-sそれは私がやるつもりだということを意味する

00:11:54.310 --> 00:12:02.200
これをSVGベクター画像として保存してから

00:11:58.330 --> 00:12:05.320
私は言う-グループと-グループの

00:12:02.200 --> 00:12:08.650
 SVGオプションであり、それがすることは

00:12:05.320 --> 00:12:12.390
関連するパスをグループ化するため、 

00:12:08.650 --> 00:12:17.470
それらすべてを単一にマージします

00:12:12.390 --> 00:12:19.420
基本的にトラバーサルポイントのようなベクトル

00:12:17.470 --> 00:12:21.760
専門用語はわかりませんが、 

00:12:19.420 --> 00:12:23.740
たくさんあるのではなく

00:12:21.760 --> 00:12:25.600
あなたのSVGファイルでそれを分けます

00:12:23.740 --> 00:12:27.010
それらを一緒にマージするので、 

00:12:25.600 --> 00:12:28.600
それらを一緒にグループ化して物事を良くします

00:12:27.010 --> 00:12:31.720
そしてきれいになりました

00:12:28.600 --> 00:12:36.070
出力このロゴドットをSVGと呼びます

00:12:31.720 --> 00:12:38.350
 SVGはスケーラブルなベクター形式であり、 

00:12:36.070 --> 00:12:40.330
次のこと

00:12:38.350 --> 00:12:45.160
これを行うことができますオプションですが、私はやるつもりです

00:12:40.330 --> 00:12:47.410
 --タイトなもの--タイトなのはそれ

00:12:45.160 --> 00:12:49.330
周りに空白がたくさんある場合

00:12:47.410 --> 00:12:50.620
使用しているロゴは

00:12:49.330 --> 00:12:53.440
基本的にそれを持ち込む

00:12:50.620 --> 00:12:54.640
あなたのためにそのベクトルを自動トリミングします

00:12:53.440 --> 00:12:56.830
あなたは空白の束を持っていません

00:12:54.640 --> 00:13:00.550
ベクトルの観点から私はそれがだと思う

00:12:56.830 --> 00:13:03.370
良いアイデアと次は

00:13:00.550 --> 00:13:08.650
そのファイルが呼び出された私の入力ファイル

00:13:03.370 --> 00:13:10.840
ワードマークライトドットBMP今私はちょうど

00:13:08.650 --> 00:13:13.570
エンターを打つと私が打つとすぐに

00:13:10.840 --> 00:13:17.140
すべてがああ何をしたかを入力してください

00:13:13.570 --> 00:13:21.010
 POトレース無効オプション--ゼロ

00:13:17.140 --> 00:13:25.120
ああ、なぜ私は想定されていたゼロを押したのですか

00:13:21.010 --> 00:13:27.790
そこに出力するためのOになります

00:13:25.120 --> 00:13:29.980
覚えて-ああ-矢印が入り、 

00:13:27.790 --> 00:13:33.070
それがどれほど速く現れたかを見ましたか

00:13:29.980 --> 00:13:35.290
デスクトップ上のロゴドットSVGファイル

00:13:33.070 --> 00:13:37.750
そのファイルをダブルクリックしてください

00:13:35.290 --> 00:13:40.990
カテゴリ5を参照してください。 

00:13:37.750 --> 00:13:44.350
緑色なので、私にとっては問題ですが

00:13:40.990 --> 00:13:46.900
これは実際にはベクトルなので、なぜそれをしたのか

00:13:44.350 --> 00:13:50.320
グレースケールである緑色を除去します

00:13:46.900 --> 00:13:51.880
そうだと思う

00:13:50.320 --> 00:13:53.860
あるオプションを見ることができます

00:13:51.880 --> 00:13:55.810
灰色かどうか見てみましょう

00:13:53.860 --> 00:13:58.150
スケーリングは、ある種のことを行います

00:13:55.810 --> 00:14:01.230
違いなので、出力を見てください

00:13:58.150 --> 00:14:03.940
ここのオプションを詳しく見てみましょう

00:14:01.230 --> 00:14:08.910
今までにどんな種類のオプションがあるのか​​見てみましょう

00:14:03.940 --> 00:14:12.100
色付けが進むにつれて

00:14:08.910 --> 00:14:14.470
解像度スケールストレッチ回転マージン

00:14:12.100 --> 00:14:17.080
左マージン下マージンページサイズすべて

00:14:14.470 --> 00:14:22.120
これらのものああ-色セット前景

00:14:17.080 --> 00:14:25.840
塗りつぶし色は不透明ですが、もしそうなら

00:14:22.120 --> 00:14:28.260
あなたはそれを行う方法があるかどうかわかりません

00:14:25.840 --> 00:14:30.250
あなたのためにそれをディザさせる方法があります

00:14:28.260 --> 00:14:32.260
しかし、私たちにできることはあります

00:14:30.250 --> 00:14:35.790
ここで、ビットマップを作成したことを忘れないでください

00:14:32.260 --> 00:14:40.570
私たち自身が正しいことを覚えて

00:14:35.790 --> 00:14:43.690
勝者は基本的に

00:14:40.570 --> 00:14:47.170
このファイルをもう一度エクスポートしましょう

00:14:43.690 --> 00:14:51.970
行う前に新しいエクスポートを作成しましょう

00:14:47.170 --> 00:14:57.100
私はイメージモードグレースケールに行きます

00:14:51.970 --> 00:14:58.750
そして、画像モードRGBをもう一度使用して、 

00:14:57.100 --> 00:14:59.800
ちょうどグレースケールされています

00:14:58.750 --> 00:15:04.420
私たちのためにやる

00:14:59.800 --> 00:15:06.610
私はまだそこに白いのがたくさんあります

00:15:04.420 --> 00:15:11.199
同じファイルセットを上書きします

00:15:06.610 --> 00:15:13.329
 24ビットに設定してエクスポートする設定

00:15:11.199 --> 00:15:15.389
大丈夫私はちょうど最小化するつもりだ

00:15:13.329 --> 00:15:18.670
それで、ここで何が起こるか見てみましょう。 

00:15:15.389 --> 00:15:21.300
詩人は再びそれをレースし、それが

00:15:18.670 --> 00:15:24.220
違いがありましたが、そうではありませんでした

00:15:21.300 --> 00:15:25.720
色はこれで問題を引き起こしています

00:15:24.220 --> 00:15:27.850
それがしようとしているため、特定のベクトル

00:15:25.720 --> 00:15:29.500
それらのエッジを取得し、それは黒を見ています

00:15:27.850 --> 00:15:31.810
でも緑は見えないので

00:15:29.500 --> 00:15:33.550
私はそれを修正し、白が見えない

00:15:31.810 --> 00:15:36.759
どちらかのように

00:15:33.550 --> 00:15:39.810
背景色はGIMPに戻ってGNU 

00:15:36.759 --> 00:15:42.970
オンにできる画像操作プログラム

00:15:39.810 --> 00:15:47.319
アルファを保持するため、これはアルファをロックします

00:15:42.970 --> 00:15:49.990
チャンネルを選択し、黒と右を選択します

00:15:47.319 --> 00:15:51.569
クリックして前景で塗りつぶしを編集します

00:15:49.990 --> 00:15:54.579
色なので、私はそれを

00:15:51.569 --> 00:15:58.540
完全に黒の画像になりました

00:15:54.579 --> 00:16:03.910
ワードマークライトドットBMPエクスポートとしてエクスポート

00:15:58.540 --> 00:16:06.879
設定を置き換えてエクスポートする

00:16:03.910 --> 00:16:11.139
だから今、私はビットマップである画像を持っています

00:16:06.879 --> 00:16:14.680
それはすべて黒なので、今それを実行すると

00:16:11.139 --> 00:16:16.800
もう一度命令する必要はありません

00:16:14.680 --> 00:16:19.779
実験して試してみるのが怖い

00:16:16.800 --> 00:16:23.259
これが実際のベクトルなので、これは

00:16:19.779 --> 00:16:24.579
ロゴSVGこれはロゴドットBMPです。 

00:16:23.259 --> 00:16:26.860
ロゴドットBMP付き

00:16:24.579 --> 00:16:34.720
 1を押すと、+を押す

00:16:26.860 --> 00:16:36.579
 1-1つズームインできます-Ctrl + 1 2 3 4 5 

00:16:34.720 --> 00:16:38.889
そして、私はヒットするつもりです

00:16:36.579 --> 00:16:41.259
ここに来るので、これはあなたがビットマップです

00:16:38.889 --> 00:16:46.600
それらのエッジを見る

00:16:41.259 --> 00:16:49.240
 1 2 3 4 5 

00:16:46.600 --> 00:16:52.240
正しいので、同じことをしましょう

00:16:49.240 --> 00:16:54.110
私たちが持っているSVGファイルに戻ります

00:16:52.240 --> 00:16:56.660
出力

00:16:54.110 --> 00:16:59.810
それにズームインして行きましょう

00:16:56.660 --> 00:17:02.120
何回もズームインして移動する

00:16:59.810 --> 00:17:04.940
ここで背景がなくなったことに注意してください

00:17:02.120 --> 00:17:06.830
そのエッジがどれだけきれいになっているかを見るために

00:17:04.940 --> 00:17:09.680
私たちは私が持っているベクトルファイルで作業しています

00:17:06.830 --> 00:17:11.930
 1,500にズームインしました

00:17:09.680 --> 00:17:15.050
回とあなたができるし、それは本当に本当に

00:17:11.930 --> 00:17:18.500
スクロールするのが難しい

00:17:15.050 --> 00:17:20.360
近いけど今は大丈夫です

00:17:18.500 --> 00:17:22.970
絶対である千回

00:17:20.360 --> 00:17:25.610
最大値とそのエッジを見ることができます

00:17:22.970 --> 00:17:28.130
ギザギザのエッジは絶対にありません

00:17:25.610 --> 00:17:31.460
何でもスケールアップできます

00:17:28.130 --> 00:17:33.350
私が何を望んでいてもそうではありません

00:17:31.460 --> 00:17:35.150
開くとギザギザになる

00:17:33.350 --> 00:17:37.910
 GNUイメージ操作プログラムを使用

00:17:35.150 --> 00:17:40.700
今ではSVGファイルなので、それは何ですか

00:17:37.910 --> 00:17:43.820
これはスケーラブルなレンダリングだと言って

00:17:40.700 --> 00:17:46.670
ベクターグラフィックこれは幅です

00:17:43.820 --> 00:17:48.680
身長と何をうまくやりたいですか

00:17:46.670 --> 00:17:52.820
ばかげた量にしましょう

00:17:48.680 --> 00:17:54.320
 3万ピクセル幅にします

00:17:52.820 --> 00:17:58.630
これは私のコンピューターをクラッシュさせると思う

00:17:54.320 --> 00:18:02.960
 OKを押して、コンピューターがクラッシュするかもしれません

00:17:58.630 --> 00:18:06.920
それは私たちが行くそこに途方もなく高い解像度です

00:18:02.960 --> 00:18:10.100
一度見てみて見ます

00:18:06.920 --> 00:18:12.920
それで実際にあるそれらのエッジを参照してください

00:18:10.100 --> 00:18:16.310
ロゴ内の文字の1つ

00:18:12.920 --> 00:18:18.980
ギザギザのエッジがまったくない

00:18:16.310 --> 00:18:21.350
これは合法的にベクトルだからです

00:18:18.980 --> 00:18:23.440
そして、私はそこにこれらのいくつかを言及しました

00:18:21.350 --> 00:18:25.970
無料でこれを行うオンラインツールは

00:18:23.440 --> 00:18:28.790
のようにさせる

00:18:25.970 --> 00:18:30.320
ベクタ内のラスタライズされた画像

00:18:28.790 --> 00:18:32.210
そのように拡大するつもりはありません

00:18:30.320 --> 00:18:34.520
実際にどのようにできるか見てみましょう

00:18:32.210 --> 00:18:36.860
で決定します

00:18:34.520 --> 00:18:41.540
実際にSVGファイルを開いてみましょう

00:18:36.860 --> 00:18:46.250
テキストエディタと私はそれらのSVGを見ることができます

00:18:41.540 --> 00:18:48.980
パスはPOトレースによってトレースされているため、 

00:18:46.250 --> 00:18:52.430
これらは実際にのパスです

00:18:48.980 --> 00:18:55.400
今ではない場合に表示されるものをベクトル

00:18:52.430 --> 00:18:56.990
偽のベクトルのような場合はベクトル

00:18:55.400 --> 00:19:01.190
あなたはそれがのように持っていることがわかります

00:18:56.990 --> 00:19:04.280
いくつかの痛みデータのようにこれを埋め込む

00:19:01.190 --> 00:19:06.890
本当のベクトルなので、そこにあります

00:19:04.280 --> 00:19:08.270
このIKEAのロゴについて言及したので

00:19:06.890 --> 00:19:10.130
ここで何が起こるか実際に見てみましょう

00:19:08.270 --> 00:19:12.410
見たいからイケアのロゴを

00:19:10.130 --> 00:19:15.170
これはそうではないことを知ってほしい

00:19:12.410 --> 00:19:18.050
ふりをしているもの

00:19:15.170 --> 00:19:21.820
それをエクスポートし、保存します

00:19:18.050 --> 00:19:25.160
私のデスクトップでは、dot what dot BMPとして

00:19:21.820 --> 00:19:26.570
互換性オプションを入力してください

00:19:25.160 --> 00:19:28.340
色空間情報が

00:19:26.570 --> 00:19:30.350
保存すると、クリックしようとしていることに気づきます

00:19:28.340 --> 00:19:32.900
詳細オプションで、それは許可されていません

00:19:30.350 --> 00:19:38.680
私はそれをうまくやる

00:19:32.900 --> 00:19:40.850
ここでキャンセルすると何かおかしい

00:19:38.680 --> 00:19:42.940
私はこれについて見ることができるものの一つ

00:19:40.850 --> 00:19:45.650
画像は、この特定の画像が

00:19:42.940 --> 00:19:47.600
インデックスカラー

00:19:45.650 --> 00:19:50.270
カテゴリー5のロゴに取り組んでいた

00:19:47.600 --> 00:19:51.860
私がRGBにうまく切り替えなければならなかった

00:19:50.270 --> 00:19:55.280
画像を右クリックして画像を表示します

00:19:51.860 --> 00:19:59.420
モードでは、それが選択されていることがわかります

00:19:55.280 --> 00:20:01.820
インデックスを作成して、RGBに変更しましょう

00:19:59.420 --> 00:20:07.850
ビットマップとしてエクスポートできるRGBであること

00:20:01.820 --> 00:20:11.000
 BMPに変更してエクスポートします

00:20:07.850 --> 00:20:13.070
私は私の高度を持っていることを見て

00:20:11.000 --> 00:20:15.350
戻ってオプションと私は24ビットをクリックすることができます

00:20:13.070 --> 00:20:16.970
これは、このロゴメイクのデフォルトでした

00:20:15.350 --> 00:20:19.310
色空間情報が

00:20:16.970 --> 00:20:22.550
保存してエクスポートするので、今すぐ

00:20:19.310 --> 00:20:24.830
デスクトップ私は素敵な小さな画像を持っています

00:20:22.550 --> 00:20:27.320
複製を提出します

00:20:24.830 --> 00:20:31.010
複製ですが、これはビットマップですので

00:20:27.320 --> 00:20:32.420
今、私の端末に戻ってそれを試してみましょう

00:20:31.010 --> 00:20:35.810
 1つなので、上矢印を押すだけです。 

00:20:32.420 --> 00:20:38.270
 Linuxキーボードで削除します

00:20:35.810 --> 00:20:40.940
最後のコマンドからのソース画像

00:20:38.270 --> 00:20:44.210
代わりにIKEAアンダースコアに変更してください

00:20:40.940 --> 00:20:48.170
 20:19ロゴドットBMPを押してEnterキーを押し、 

00:20:44.210 --> 00:20:50.300
すぐに新しいIKEAが見えます

00:20:48.170 --> 00:20:51.890
のためにロゴSVGとして保存-ああ

00:20:50.300 --> 00:20:52.900
コマンドはどのように見えるか見てみましょう

00:20:51.890 --> 00:20:56.830
多田

00:20:52.900 --> 00:20:59.930
イケアのロゴのベクトルです

00:20:56.830 --> 00:21:02.360
それはまさに私が望むものではありません

00:20:59.930 --> 00:21:04.880
ベクトルが色を保存していないことを忘れないでください

00:21:02.360 --> 00:21:06.020
正しいパスを保存している情報

00:21:04.880 --> 00:21:07.250
色情報は

00:21:06.020 --> 00:21:08.780
それはあなたがしていることです

00:21:07.250 --> 00:21:11.270
グラフィックデザイナーに提供します

00:21:08.780 --> 00:21:14.090
または多分あなたのロゴが全体を持っていない

00:21:11.270 --> 00:21:15.740
たくさんですが、これを見てください

00:21:14.090 --> 00:21:17.000
もう一度コマンドを追加します

00:21:15.740 --> 00:21:17.350
私はそれができるかどうかわからないそのコマンド

00:21:17.000 --> 00:21:20.440
で

00:21:17.350 --> 00:21:23.740
しかし、私はタイプするつもりです--反転し、今

00:21:20.440 --> 00:21:24.820
入力したこと--反転して開く

00:21:23.740 --> 00:21:28.000
その画像は再び違いを見て

00:21:24.820 --> 00:21:30.400
私と今の私のためにその反転したロゴ

00:21:28.000 --> 00:21:30.880
のような完璧なベクトルを持っている

00:21:30.400 --> 00:21:34.059
それ

00:21:30.880 --> 00:21:35.890
もう一度GNUイメージで開くと

00:21:34.059 --> 00:21:37.840
操作プログラムと私はやっている

00:21:35.890 --> 00:21:38.890
これはラスタープログラムだからです

00:21:37.840 --> 00:21:42.100
でもこれが

00:21:38.890 --> 00:21:44.309
確かに私はそれを取る場合、今ベクトル画像

00:21:42.100 --> 00:21:46.450
 5万ピクセル幅にします

00:21:44.309 --> 00:21:50.559
 18000 7 

00:21:46.450 --> 00:21:52.570
ピクセルが高い

00:21:50.559 --> 00:21:55.090
そのためのメモリは少し試してみましょう

00:21:52.570 --> 00:21:57.309
 GNUイメージ操作で小さくオープン

00:21:55.090 --> 00:22:01.360
あなたが見るプログラムはベクトルです

00:21:57.309 --> 00:22:04.750
幅1万ピクセルの3742を試してみましょう

00:22:01.360 --> 00:22:08.100
そこに高いピクセルは大丈夫ヒット1 

00:22:04.750 --> 00:22:11.169
そして、あなたはそれらのエッジが完璧であることを見ることができます

00:22:08.100 --> 00:22:15.270
丸い縁取りはどうですか

00:22:11.169 --> 00:22:19.450
ジャンプして、私の友達を見て

00:22:15.270 --> 00:22:22.299
絶対に美しい

00:22:19.450 --> 00:22:27.100
それが私たちが実際にできる一つの方法です

00:22:22.299 --> 00:22:30.159
 pingを非常に迅速に

00:22:27.100 --> 00:22:31.510
ビットマップは、それがグレースケールであることを確認するか、 

00:22:30.159 --> 00:22:33.850
色が変換されることを

00:22:31.510 --> 00:22:36.190
適切にベクトルに変換してから、実際に

00:22:33.850 --> 00:22:40.260
から入手できる無料のツールを使用する

00:22:36.190 --> 00:22:43.240
 aptを使用したリポジトリ-aptを使用しました

00:22:40.260 --> 00:22:45.549
アプリを使用できるpote Reisをインストール-get 

00:22:43.240 --> 00:22:47.440
 pote raceをインストールするか、yumを使用できます

00:22:45.549 --> 00:22:49.960
に応じてPO tresをインストールします

00:22:47.440 --> 00:22:53.049
ディストリビューション私はlinuxミントを使用しています

00:22:49.960 --> 00:22:54.640
 apt install po traceが私をそこに連れてきた

00:22:53.049 --> 00:22:56.760
私が持っているビットマップ画像を持っている限り

00:22:54.640 --> 00:23:02.020
それと互換性があります

00:22:56.760 --> 00:23:03.990
それを非常に非常に非常にベクトル画像に変換します

00:23:02.020 --> 00:23:07.780
すぐにやる前にやった

00:23:03.990 --> 00:23:09.640
手動で画像をリトレースして

00:23:07.780 --> 00:23:12.820
ベクトルを作成し、それは残忍です

00:23:09.640 --> 00:23:16.539
ライブで見たプロセス

00:23:12.820 --> 00:23:19.390
私たちはそれを取りました

00:23:16.539 --> 00:23:22.510
以下にコメントしてください

00:23:19.390 --> 00:23:24.760
ロゴ作成プロセスに関して

00:23:22.510 --> 00:23:25.990
画像をベクターに変換し、今あなたは

00:23:24.760 --> 00:23:30.610
それを取ることができます

00:23:25.990 --> 00:23:32.230
画像を作成し、必要なだけ拡大します

00:23:30.610 --> 00:23:34.570
あなたがしたいかどうかは関係ありません

00:23:32.230 --> 00:23:36.850
 500フィート幅に印刷します

00:23:34.570 --> 00:23:39.630
看板それはそれのために働くつもりだ

00:23:36.850 --> 00:23:39.630
幻想的になります

00:23:51.440 --> 00:23:54.479
 [音楽] 

