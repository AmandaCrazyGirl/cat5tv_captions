1
00:00:02,270 --> 00:00:08,940
ウェブサイトで作業しているとき、またはあらゆる種類のグラフィックプロジェクトで作業しているとき

2
00:00:08,940 --> 00:00:14,730
クライアントにベクター画像をリクエストすることがよくありますが、クライアントは「ああ」と言うかもしれません。

3
00:00:14,730 --> 00:00:20,130
まあ、私たちはそのようなものを持っていません、あるいはもっと良いのは一体何がベクトルであるか

4
00:00:20,130 --> 00:00:24,359
画像が正しいので、多分それは私が最初に答えなければならない質問です

5
00:00:24,359 --> 00:00:32,880
ラスター画像またはJPEGや絵画やビットマップのような平坦化された画像はそれです

6
00:00:32,880 --> 00:00:39,780
ラスタライズされた画像と呼ばれるもので、画像は

7
00:00:39,780 --> 00:00:46,680
作成者がそれを保存したので、ビデオが1920 x 1080であるとしましょう。

8
00:00:46,680 --> 00:00:51,870
そのビデオのスクリーンショットは、スクリーンショットが1920 x1080になる予定です。

9
00:00:51,870 --> 00:00:57,210
それを縮小することができ、それは見栄えがするでしょうあなたはそれを縮小することができますそしてそれは

10
00:00:57,210 --> 00:01:01,949
見た目は素晴らしいですが、大きくしようとしたことがある場合は、

11
00:01:01,949 --> 00:01:06,659
今あなたがしていることはあなたがそれを取っているということです

12
00:01:06,659 --> 00:01:12,540
1080ピースのスクリーンショットとあなたはそれを伸ばしています

13
00:01:12,540 --> 00:01:17,220
コンピューターは画像をうまく引き伸ばし、引き伸ばしたすべてのピクセルを再現します

14
00:01:17,220 --> 00:01:22,799
それらと各ピクセルが引き伸ばされるので、最終的には十分に大きくなると

15
00:01:22,799 --> 00:01:27,479
あなたは歪みを得るでしょうあなたはぼやけを得るでしょうそしてこれはあなたが

16
00:01:27,479 --> 00:01:32,939
ロゴを取るそれはあなたがウェブサイトから小さなロゴを取るときの完璧な例です

17
00:01:32,939 --> 00:01:37,619
見栄えが良くない看板にうまく印刷しようとすると

18
00:01:37,619 --> 00:01:42,030
品質管理をしている人は、私たちが必要だとあなたに言わないでしょう

19
00:01:42,030 --> 00:01:45,960
ベクター画像よくベクター画像とは何ですかベクター画像を取得するにはどうすればよいですか

20
00:01:45,960 --> 00:01:55,530
私はグラフィックデザイナーではないので、グラフィックアイとしての私は

21
00:01:55,530 --> 00:01:59,430
しかし、私はあなたのグラフィックを取り、私がするという点でその用語を大まかに使用します

22
00:01:59,430 --> 00:02:03,619
品質管理と私はそれがあなたの看板のためにあなたのために準備ができていることを確認します

23
00:02:03,619 --> 00:02:10,459
ラスターとしてこれらのグラフィックにアクセスできる多くの場合に役立つように、私は何ができますか

24
00:02:10,459 --> 00:02:17,150
画像ですが、ベクトルではないので、拡大するとロゴになります。

25
00:02:17,150 --> 00:02:20,569
ウェブサイト用の小さなロゴと看板にスケールアップ

26
00:02:20,569 --> 00:02:25,129
それはすべて粒子が粗くなるだろうそれはぼやけるだろうそれはブロック状のようなものになるだろう

27
00:02:25,129 --> 00:02:29,629
ピクセルそれは最終的にひどいように見えるので、あなたはそれをまったく避けたいです

28
00:02:29,629 --> 00:02:35,930
コストベクトルはそれがベクトル画像にあるところです基本的に違いは

29
00:02:35,930 --> 00:02:41,299
そのキャンバスにすべての種類のピクセルが保存されているレンダリング画像の代わりに

30
00:02:41,299 --> 00:02:48,049
これはテキストファイルであり、ここに曲線があります。これが

31
00:02:48,049 --> 00:02:54,860
その曲線は、これほど大きいか、これほど大きいかで同じになります。

32
00:02:54,860 --> 00:02:58,010
それはそれが許可するつもりのベクトルです

33
00:02:58,010 --> 00:03:01,879
スケールアップすると、曲線は画像と同じままになります

34
00:03:01,879 --> 00:03:07,489
500フィートの看板に印刷した場合と同じように見栄えがします。

35
00:03:07,489 --> 00:03:11,180
そのようなものが存在するかどうかはわかりませんが、存在する場合は、ベクトルで印刷できます

36
00:03:11,180 --> 00:03:16,459
あなたがラスター画像を撮ってそれをしたならそれは恐ろしいでしょうがそれはしばしば来る

37
00:03:16,459 --> 00:03:20,450
私の業界で、そしておそらくあなたは私がそうではないようにこれに遭遇したことがあります

38
00:03:20,450 --> 00:03:25,069
ベクトルがあるので、今日はLinuxの使い方を見ていきます。

39
00:03:25,069 --> 00:03:33,109
ラスター画像をベクターに変換するためのフリーソフトウェアがあります

40
00:03:33,109 --> 00:03:37,459
あなたがこれを行うことを可能にするオンラインツールはクールですが、あなたが今まで見たことがあれば

41
00:03:37,459 --> 00:03:41,239
これを無料で行うオンラインツールに気付くソースコード

42
00:03:41,239 --> 00:03:46,910
彼らがしていることは、必ずしもすべてではないことがよくあります。

43
00:03:46,910 --> 00:03:53,630
常にそうですが、それらの無料ツールがそのラスター画像を取得していることがよくあります

44
00:03:53,630 --> 00:03:58,370
それをベクトルに入れて、ラスター画像を埋め込んでいます

45
00:03:58,370 --> 00:04:06,290
ベクターファイルに変換して、ラスターのままにします。代わりに、やりたいことは

46
00:04:06,290 --> 00:04:11,180
その画像を撮り、すべての曲線の周りをトレースしたいので、

47
00:04:11,180 --> 00:04:15,010
文字Sその文字の周りをトレースしたいので

48
00:04:15,010 --> 00:04:20,560
スケールアップすると、完全に完璧に見えるようになります。

49
00:04:20,560 --> 00:04:24,160
ラスター用語で考えているので、それは大変な作業のように聞こえます

50
00:04:24,160 --> 00:04:29,050
まさに私たちはGNU画像操作プログラムまたはPhotoshopで考えていますそして

51
00:04:29,050 --> 00:04:33,130
どのようにすべてを追跡する必要があり、それは絶対に残忍なことです

52
00:04:33,130 --> 00:04:38,050
しかし、Linuxはそれをはるかに簡単にするので、私が持ってくるつもりの私のターミナルに飛び込みましょう

53
00:04:38,050 --> 00:04:44,020
ここに私のコンピューターを置いて、必要なのは私が行く簡単なプログラムだけです

54
00:04:44,020 --> 00:04:48,940
最初にインストールしますが、次にWebからロゴを取得するので、

55
00:04:48,940 --> 00:04:58,960
Linux Mintではrootになるので、これらの純粋主義者にとってはsudosuまたはsudosuです。

56
00:04:58,960 --> 00:05:04,810
私がスーパーユーザーになったのでパスワードを入力して、ルートユーザーになりました

57
00:05:04,810 --> 00:05:09,700
apt updateと入力すると、最新のリポジトリ情報を取得できます

58
00:05:09,700 --> 00:05:14,080
Webから、これらはオンラインで利用可能なLinuxアプリケーションであり、私は

59
00:05:14,080 --> 00:05:21,090
apt installに行くつもりで、ここに本当に簡単なコマンドがありますpo trace

60
00:05:21,090 --> 00:05:26,590
それは私がそれがポートレースと呼ばれるかどうかわからないというプログラムをつかむつもりですか

61
00:05:26,590 --> 00:05:32,169
PioトレースをPoeトレースと呼びます。インストールされているので、「はい」と言いました。

62
00:05:32,169 --> 00:05:38,979
Poe traceと入力すると、ヘルプダイアログが表示されます。

63
00:05:38,979 --> 00:05:43,060
了解しました。インストールしました。Webにジャンプして、取得します。

64
00:05:43,060 --> 00:05:49,450
ここで実際にあなたが知っていることをしましょうカテゴリー5ドットテレビをつかみましょう

65
00:05:49,450 --> 00:05:54,280
ロゴそれがどのように機能するか見てみましょうそれはウェブ上にありますそして私が

66
00:05:54,280 --> 00:05:59,800
それを右クリックして画像を開き、新しいタブをクリックしてみましょう。

67
00:05:59,800 --> 00:06:04,510
私の画像は本当に小さいですすごいそれがどれほどうまくスケーリングするかわかりません

68
00:06:04,510 --> 00:06:10,840
あなたはおそらくあなたは私に最初の品質管理について考えさせることを知っています

69
00:06:10,840 --> 00:06:15,970
これを行っているときに、私たちが望むことができる最大の画像を取得しようとしています

70
00:06:15,970 --> 00:06:20,770
たとえば、ピンのようなアルファ層を持つものとして取得してみてください

71
00:06:20,770 --> 00:06:25,390
完璧であり、私たちはそれが可能な限り明確であることを確認したい

72
00:06:25,390 --> 00:06:29,410
それはそこで行われたか、その背後にあるドロップシャドウはそうではありません

73
00:06:29,410 --> 00:06:35,590
ベクトルはベクトルとは完全に異なるため、ベクトルとして適切にレンダリングされます。

74
00:06:35,590 --> 00:06:41,680
ラスター画像は色付けされていませんが、次の場合に色付けすることができます

75
00:06:41,680 --> 00:06:45,430
あなたはそれらを表示するので、あなたは大丈夫と言うことができますその部分はこれになるでしょう

76
00:06:45,430 --> 00:06:49,270
Pantoneとその部分はこのPantoneになりますが、それは大きく異なります

77
00:06:49,270 --> 00:06:51,850
同じラスターとして保存されていないため

78
00:06:51,850 --> 00:06:57,610
あなたが見る私のカテゴリー5のテレビネットワークのロゴで私がしたいと思うかもしれない画像

79
00:06:57,610 --> 00:07:02,530
画面にマスター画像を取得するようなことをしたいと思うかもしれません

80
00:07:02,530 --> 00:07:06,520
それはいくつかのドロップシャドウイングが起こっているように見えます、そして私はおそらく行くことができました

81
00:07:06,520 --> 00:07:15,220
ウィキドットカテゴリへ-5ドットTVと私のウィキで私はブランディングを見つけてに行くことができました

82
00:07:15,220 --> 00:07:22,090
カテゴリ5のブランディングと私はこれらの本格的な画像の1つをつかむことができるので多分

83
00:07:22,090 --> 00:07:26,230
もう少しこのようなものが私の好みになりますので、ここの下部にあります

84
00:07:26,230 --> 00:07:31,570
私はワードマークファイルを持っています、そしてあなたはただ乗っているだけでもあなたが知っていることによってそれをすることができます

85
00:07:31,570 --> 00:07:36,400
グーグル画像か何かとあなたがいる画像のためのより大きな画像を見つける

86
00:07:36,400 --> 00:07:39,940
そのようなものを探しているとかなり見栄えがしますが、これは

87
00:07:39,940 --> 00:07:45,940
実際にはpingファイルです。拡張性は良好ですが、pingなので、保存しましょう。

88
00:07:45,940 --> 00:07:50,320
それを私のデスクトップに投げるつもりで、それはワードマークアンダースコアライトと呼ばれています

89
00:07:50,320 --> 00:07:56,500
ドットpingを実行すると、すぐに表示されるので、ラスターイメージになります。

90
00:07:56,500 --> 00:08:02,020
はい私はたまたま74、2、1、8、7の1つを持っています

91
00:08:02,020 --> 00:08:07,660
ピクセルそれは巨大な画像であるにもかかわらず、それは本当に本当にうまくいくでしょうが、何

92
00:08:07,660 --> 00:08:12,390
あなたが何か他のものを持っているなら、Google画像検索に行きましょう

93
00:08:13,110 --> 00:08:19,199
簡単に検索して、ロゴを検索して、何を見てみましょう。

94
00:08:19,199 --> 00:08:24,389
バーガーキングを手に入れましたマクドナルドを手に入れました

95
00:08:24,389 --> 00:08:31,020
IKEA使用する権利がないIKEAロゴを取得しましょう。

96
00:08:31,020 --> 00:08:35,310
デモンストレーションのために、フェアユースはちょっと私たちがあなたに行う方法を示していると言います

97
00:08:35,310 --> 00:08:39,839
これで、デスクトップに2つのロゴがあり、カテゴリ5があります。

98
00:08:39,839 --> 00:08:46,019
TVロゴとIKEAロゴの音が良いのでこのプログラムで

99
00:08:46,019 --> 00:08:52,310
インストールされているので、PO tresをインストールしました。次に、デスクトップに移動して、

100
00:08:52,310 --> 00:08:58,410
私がそこに持っている画像を見てください、そしてそれらの両方は今1つのping画像です

101
00:08:58,410 --> 00:09:02,760
PO Traceで覚えておく必要があるのは、POトレイのみです。

102
00:09:02,760 --> 00:09:06,810
ビットマップ画像をサポートしているので、デモンストレーションのために、

103
00:09:06,810 --> 00:09:12,720
使いやすさと親しみやすさのためにBMPファイルを使用したいのでコンピューターに戻ります

104
00:09:12,720 --> 00:09:16,620
私がやっていることを覚えて、GNU画像操作プログラムを立ち上げるつもりです

105
00:09:16,620 --> 00:09:22,500
これはすべてLinuxからのものですLinuxは無料のオペレーティングシステムですGNUイメージ

106
00:09:22,500 --> 00:09:27,209
操作プログラムは無料の画像エディタです私がここでやっていることはすべて

107
00:09:27,209 --> 00:09:33,420
Windowsを使用している場合、これを実行したい人は誰でも完全に無料で利用できます

108
00:09:33,420 --> 00:09:36,630
ああ言って、しかし私はあなたが何をインストールできるか知っているWindowsでこれをどのように行うのですか？

109
00:09:36,630 --> 00:09:42,779
Linuxとそれはあなたがこれを大丈夫に達成することができる1つの方法ですので私は行きます

110
00:09:42,779 --> 00:09:49,199
カテゴリ5のTVロゴがあるのでエクスポートします。これを次のようにエクスポートします。

111
00:09:49,199 --> 00:09:54,779
ビットマップなので、拡張子BMPを変更して、Enterキーを押します。

112
00:09:54,779 --> 00:09:58,649
ここでいくつかのことを私に尋ねるつもりですそれはOKの互換性を言うつもりです

113
00:09:58,649 --> 00:10:04,079
オプションはそれを開いて、これがチェックされていないことを確認しましょう書き込みません

114
00:10:04,079 --> 00:10:08,910
色空間情報今、私たちは絶対に色空間情報を必要としています

115
00:10:08,910 --> 00:10:14,839
これは、16ビットで確認できる詳細オプションのPOトレースの要件です。

116
00:10:14,839 --> 00:10:22,140
24ビットおよび32ビットのデフォルトは32ビットRGBで、アルファレッドグリーンを表します。

117
00:10:22,140 --> 00:10:29,530
青今はRGBが必要ですが、POトレースは

118
00:10:29,530 --> 00:10:33,370
おそらくそれで問題が発生するでしょう代わりに24ビットRGBを使用します

119
00:10:33,370 --> 00:10:38,920
それをクリックして、RGB24ビットを選択します。

120
00:10:38,920 --> 00:10:45,070
[エクスポート]をクリックすると、デスクトップに別のファイルが表示されます。

121
00:10:45,070 --> 00:10:51,250
ワードマークライトBMPとそれをダブルクリックすると、それは私のロゴの外観です

122
00:10:51,250 --> 00:10:55,120
その時点で、i ifiの場合はまだラスターイメージです

123
00:10:55,120 --> 00:10:59,740
スケールが大きすぎると品質が低下し始めます

124
00:10:59,740 --> 00:11:05,890
実際に、ズームインするとそれらが表示されることがわかります。

125
00:11:05,890 --> 00:11:11,920
ピクセル化されたエッジは、それがどれほど粒子が粗く、それがラスターであるかを確認します

126
00:11:11,920 --> 00:11:16,350
画像はすべてのピクセルを保存したので、代わりに作成します

127
00:11:16,350 --> 00:11:21,610
そのファイルに基づくベクトル最初のステップは、そのビットマップが必要なことです。

128
00:11:21,610 --> 00:11:26,950
ファイルなので、pingソースであろうとJPEGであろうと、あなたがたまたま何であろうと

129
00:11:26,950 --> 00:11:30,820
最初にビットマップに変換する必要があります。そうすれば、Poeトレースが機能します。

130
00:11:30,820 --> 00:11:35,410
ポートレースを入力します。いくつかのことがあります。

131
00:11:35,410 --> 00:11:40,570
できること----これがどのように機能し、あなたが何をしたいのかをもっと知るのに役立ちます

132
00:11:40,570 --> 00:11:44,620
ここを上にスクロールして、利用できるオプションの種類を確認できますが、

133
00:11:44,620 --> 00:11:48,460
私たちにとってうまくいくと思うことをお話しします。ここで説明します

134
00:11:48,460 --> 00:11:54,310
これがうまくいくなら、放送中に生きる私がやるつもりだ-sつまり私がやるつもりだ

135
00:11:54,310 --> 00:12:02,200
これをSVGベクター画像として保存すると、-グループと-グループは

136
00:12:02,200 --> 00:12:08,650
はSVGオプションであり、それは関連するパスをグループ化するので、

137
00:12:08,650 --> 00:12:17,470
これらすべてを基本的にトラバーサルポイントのようなベクトルにマージします

138
00:12:17,470 --> 00:12:21,760
私は専門用語を知りませんが、たくさん持っているのではなく

139
00:12:21,760 --> 00:12:25,600
SVGファイル内の物を分けて、それらをマージするので、

140
00:12:25,600 --> 00:12:28,600
それらをグループ化して、物事をきれいに保ちます。

141
00:12:28,600 --> 00:12:36,070
出力このロゴドットSVGSVGをスケーラブルなベクター形式と呼びます。

142
00:12:36,070 --> 00:12:40,330
これを行うことができる次のことはオプションですが、私はするつもりです

143
00:12:40,330 --> 00:12:47,410
---タイトで何が---タイトなのは周りにたくさんの空白がある場合です

144
00:12:47,410 --> 00:12:50,620
あなたが使用しているあなたのロゴはそれを持ち込むつもりですそれは基本的に

145
00:12:50,620 --> 00:12:54,640
空白がたくさんないように、そのベクトルを自動トリミングします

146
00:12:54,640 --> 00:13:00,550
ベクトルの観点からは、それは良い考えだと思います。次は

147
00:13:00,550 --> 00:13:08,650
私の入力ファイルは、ファイルがワードマークライトドットBMPと呼ばれるようになりました。

148
00:13:08,650 --> 00:13:13,570
エンターを押すつもりで、エンターを押すとすぐにすべてが

149
00:13:13,570 --> 00:13:21,010
POトレースが無効なオプションと表示されます---ゼロああ、なぜ私は想定されていたゼロをプッシュしたのですか？

150
00:13:21,010 --> 00:13:27,790
そこに出力するためのOになるには、覚えておいてください-ああ、そうではありません-矢印が入り、

151
00:13:27,790 --> 00:13:33,070
デスクトップにロゴドットSVGファイルがどれだけ早くポップアップするかわかりましたか？

152
00:13:33,070 --> 00:13:37,750
そのファイルをダブルクリックすると、カテゴリ5が表示され、削除されます。

153
00:13:37,750 --> 00:13:44,350
緑なのでそれは私にとって問題ですが、これは実際にはベクトルなので、なぜそれをしたのですか？

154
00:13:44,350 --> 00:13:50,320
緑をよく剥がしてグレースケールにしますので多分私はそれで作業することができます

155
00:13:50,320 --> 00:13:53,860
私が利用できるオプションを見ることができます灰色かどうか見てみましょう

156
00:13:53,860 --> 00:13:58,150
スケーリングすると何らかの違いが生じるので、出力を見てください

157
00:13:58,150 --> 00:14:03,940
ここのオプションを詳しく見て、これまでにどのようなオプションがあるかを見てみましょう

158
00:14:03,940 --> 00:14:12,100
カラー化が進むにつれて、解像度スケールストレッチ回転マージンがあります

159
00:14:12,100 --> 00:14:17,080
左マージン下マージンページサイズこれらすべてのものああ-カラーセット前景

160
00:14:17,080 --> 00:14:25,840
カラーフィルカラー不透明ですが、確信が持てない場合は、それを行う方法があります

161
00:14:25,840 --> 00:14:30,250
あなたのためにそれをディザリングさせる方法はありますが、私たちにできることがあります

162
00:14:30,250 --> 00:14:35,790
ここで、ビットマップを自分で作成したことを覚えておいてください。

163
00:14:35,790 --> 00:14:43,690
victor isは基本的にこのファイルのアウトラインなので、もう一度エクスポートしましょう

164
00:14:43,690 --> 00:14:51,970
画像モードのグレースケールに移行する前に、新しいエクスポートを作成しましょう

165
00:14:51,970 --> 00:14:58,750
次に、画像モードRGBをもう一度グレースケールしたので、それがそうであるかどうかを確認しましょう

166
00:14:58,750 --> 00:15:04,420
私たちのためにそれをするつもりです私はまだそこにたくさんの白があります

167
00:15:04,420 --> 00:15:11,199
そのファイルを上書きして、24ビットにしたいのと同じ設定を設定してエクスポートします

168
00:15:11,199 --> 00:15:15,389
それを最小限に抑えて、ここで何が起こるか見てみましょう。

169
00:15:15,389 --> 00:15:21,300
詩人はそれをもう一度レースし、それが何か違いを生んだかどうかを確認しますが、そうではありません

170
00:15:21,300 --> 00:15:25,720
色は、この特定のベクトルで問題を引き起こしています。

171
00:15:25,720 --> 00:15:29,500
それらのエッジを取得し、それは黒に見えますが、緑には見えないので、どうすればよいですか？

172
00:15:29,500 --> 00:15:33,550
私はそれを修正しました、そしてそれは白を見ていませんそれはそれのように見られています

173
00:15:33,550 --> 00:15:39,810
背景色なのでGIMPに戻ってGNU画像操作プログラムをオンにできます

174
00:15:39,810 --> 00:15:47,319
アルファホールドなので、これはアルファチャンネルにロックされ、黒と右を選択します

175
00:15:47,319 --> 00:15:51,569
クリックして前景色で塗りつぶしを編集するので、それを

176
00:15:51,569 --> 00:15:58,540
完全に黒い画像になりました。ワードマークライトドットBMPエクスポートとしてファイルエクスポートを実行できます。

177
00:15:58,540 --> 00:16:06,879
設定を置き換えてエクスポートするので、ビットマップの画像が得られます

178
00:16:06,879 --> 00:16:14,680
それはすべて黒なので、そのコマンドをもう一度実行する場合は、

179
00:16:14,680 --> 00:16:19,779
実際のベクトルであるものを実験して試すことを恐れているので、これは

180
00:16:19,779 --> 00:16:24,579
ロゴSVGこれはロゴドットBMPなので、ロゴドットBMPを使用します

181
00:16:24,579 --> 00:16:34,720
1を押してから+1を押します-1つにズームインできますか-ctrl + 1 2 3 4 5

182
00:16:34,720 --> 00:16:38,889
それから私はヒットするつもりです私はここに来るつもりなのでこれはあなたのビットマップです

183
00:16:38,889 --> 00:16:46,600
それらのエッジを見るどうすればそれらがひどいのか12 3 45ギザギザのエッジを見る

184
00:16:46,600 --> 00:16:52,240
同じことをしましょう。これまでのSVGファイルに戻りましょう。

185
00:16:52,240 --> 00:16:56,660
出力して、それにズームインして行きましょう

186
00:16:56,660 --> 00:17:02,120
何度もズームインしてここに移動すると、背景が消えていることに注意してください

187
00:17:02,120 --> 00:17:06,830
今、私が行ったベクターファイルで作業しているので、そのエッジがどれほどきれいかを確認します

188
00:17:06,830 --> 00:17:11,930
ズームインして115百回、できます。本当に本当に

189
00:17:11,930 --> 00:17:18,500
非常に近くに拡大縮小されているため、スクロールするのは難しいですが、今は2つに拡大されています

190
00:17:18,500 --> 00:17:22,970
絶対最大値である千回そしてあなたはそのエッジを見ることができます

191
00:17:22,970 --> 00:17:28,130
ギザギザのエッジがまったくないので、スケールアップすることもできません

192
00:17:28,130 --> 00:17:33,350
私がそれを何にしたいかは関係ありません、そして私がそれを開いてもそれはギザギザのエッジになることはありません

193
00:17:33,350 --> 00:17:37,910
GNU画像操作プログラムではSVGファイルになっているので、それは何ですか

194
00:17:37,910 --> 00:17:43,820
これはレンダリングスケーラブルベクターグラフィックですこれは幅であり、

195
00:17:43,820 --> 00:17:48,680
高さとあなたは何をうまくやりたいですかそれをばかげた量にしましょう

196
00:17:48,680 --> 00:17:54,320
幅を3万ピクセルにすると、これでコンピュータがクラッシュすると思います

197
00:17:54,320 --> 00:18:02,960
OKを押してみましょうそれは私たちが行く途方もなく高解像度である私のコンピュータをクラッシュさせるかもしれません

198
00:18:02,960 --> 00:18:10,100
私はそれを一度に見て、実際にあるそれらのエッジを見るつもりです

199
00:18:10,100 --> 00:18:16,310
私たちのロゴの文字の1つは完全に完璧でギザギザのエッジはありません

200
00:18:16,310 --> 00:18:21,350
これは合法的にベクトルであり、私はそこでこれらのいくつかについて言及したので

201
00:18:21,350 --> 00:18:25,970
これを無料で行うオンラインツールを使用すると、

202
00:18:25,970 --> 00:18:30,320
そのようにスケールアップしないベクトル内のラスタライズされた画像

203
00:18:30,320 --> 00:18:34,520
だから、実際にそれを決定する方法を見てみましょう。

204
00:18:34,520 --> 00:18:41,540
実際にテキストエディタでSVGファイルを開いてみましょう。これらのSVGがわかります。

205
00:18:41,540 --> 00:18:48,980
パスはPOトレースによってトレースされているため、これらは実際にはのパスです。

206
00:18:48,980 --> 00:18:55,400
ベクトル今、それが偽のベクトルのようである場合、それがベクトルではない場合に表示されるもの

207
00:18:55,400 --> 00:19:01,190
これは、いくつかの痛みのデータが埋め込まれているように見えることです。

208
00:19:01,190 --> 00:19:06,890
は真のベクトルなので、あなたはそれを持っています、そして私はこのIKEAロゴについて言及しました

209
00:19:06,890 --> 00:19:10,130
見たいので、IKEAのロゴで実際に何が起こるか見てみましょう

210
00:19:10,130 --> 00:19:15,170
これは私が自分のふりをしているだけのものではないことを知ってほしい

211
00:19:15,170 --> 00:19:21,820
それをエクスポートして、デスクトップにdot what dotBMPとして保存します。

212
00:19:21,820 --> 00:19:26,570
互換性オプションを入力して、色空間情報が

213
00:19:26,570 --> 00:19:30,350
保存しましたが、[詳細オプション]をクリックしようとしていますが、

214
00:19:30,350 --> 00:19:38,680
キャンセルしても大丈夫なのはなぜですか

215
00:19:38,680 --> 00:19:42,940
この画像について私が見ることができることの1つは、この特定の画像が

216
00:19:42,940 --> 00:19:47,600
インデックスカラー私がカテゴリー5のロゴに取り組んでいたときのことを覚えていますか

217
00:19:47,600 --> 00:19:51,860
画像を右クリックして画像に移動すると、RGBにうまく切り替える必要がありました

218
00:19:51,860 --> 00:19:59,420
インデックス付きとして選択されていることがわかるモード今すぐRGBに変更しましょう

219
00:19:59,420 --> 00:20:07,850
RGBであることをビットマップとしてエクスポートできるので、BMPに変更してエクスポートします。

220
00:20:07,850 --> 00:20:13,070
詳細オプションが戻ってきて、24ビットをクリックできることを確認してください

221
00:20:13,070 --> 00:20:16,970
これはこのロゴのデフォルトでしたが、色空間情報が

222
00:20:16,970 --> 00:20:22,550
保存してエクスポートを押すと、デスクトップに素敵な小さな画像が表示されます

223
00:20:22,550 --> 00:20:27,320
複製をファイルする複製のように見えますが、これはビットマップなので、

224
00:20:27,320 --> 00:20:32,420
ターミナルに戻ったら、それを試してみましょう。上矢印を押すだけです。

225
00:20:32,420 --> 00:20:38,270
Linuxキーボードで、最後のコマンドからソースイメージを削除し、

226
00:20:38,270 --> 00:20:44,210
代わりに、それをIKEAアンダースコア20:19ロゴドットBMPに変更し、Enterキーを押して

227
00:20:44,210 --> 00:20:50,300
すぐに新しいIKEAが表示されます。-ああ、ロゴSVGとして保存されました。

228
00:20:50,300 --> 00:20:52,900
コマンドそれが多田のように見えるか見てみましょう

229
00:20:52,900 --> 00:20:59,930
だからそれはIKEAロゴのベクトルですそれは私が望んでいるものではありません

230
00:20:59,930 --> 00:21:04,880
ベクトルが色情報を保存していないことを覚えておいてくださいそれはパスを正しく保存しています

231
00:21:04,880 --> 00:21:07,250
色情報は分離されますそれはあなたがしていることです

232
00:21:07,250 --> 00:21:11,270
あなたのグラフィックデザイナーに提供するつもりですまたは多分あなたのロゴは全体を持っていません

233
00:21:11,270 --> 00:21:15,740
たくさんですが、これを見てください。そのコマンドをもう一度実行すると、に追加します。

234
00:21:15,740 --> 00:21:17,350
そのコマンドで私がそれを行うことができるかどうかはわかりません

235
00:21:17,350 --> 00:21:23,740
しかし、私は入力するつもりです---反転し、今入力したので---反転して開きます

236
00:21:23,740 --> 00:21:28,000
その画像は、私と今私のためにそのロゴを反転させた違いをもう一度見てください

237
00:21:28,000 --> 00:21:30,880
そのような完璧なベクトルを持っている

238
00:21:30,880 --> 00:21:35,890
それをGNU画像操作プログラムで開いて、それをやっているだけなら

239
00:21:35,890 --> 00:21:38,890
これはラスタープログラムだからですが、これが

240
00:21:38,890 --> 00:21:44,309
確かに、それを取り、幅を5万ピクセルにすると、ベクター画像になります。

241
00:21:44,309 --> 00:21:50,559
高さ18.778ピクセルそれは私が十分ではないと言います

242
00:21:50,559 --> 00:21:55,090
そのためのメモリGNU画像操作で少し小さく開いてみましょう

243
00:21:55,090 --> 00:22:01,360
あなたがそれがベクトルであることがわかるプログラム幅1万ピクセルを試してみましょう3742

244
00:22:01,360 --> 00:22:08,100
そこの高さのピクセルは大丈夫1をヒットし、それらのエッジが完璧であることがわかります

245
00:22:08,100 --> 00:22:15,270
さて、丸いエッジはどうですか？私の友達を見てジャンプしましょう

246
00:22:15,270 --> 00:22:22,299
そこには絶対に美しいので、それは私たちが実際にできる一つの方法です

247
00:22:22,299 --> 00:22:30,159
非常に迅速にpingをビットマップに変換し、グレースケールであることを確認します。

248
00:22:30,159 --> 00:22:33,850
色が適切にベクトルに変換され、実際に変換されること

249
00:22:33,850 --> 00:22:40,260
aptを使用したリポジトリから入手できる無料のツールを使用します-aptを使用しました

250
00:22:40,260 --> 00:22:45,549
アプリを使用できるpoteReisをインストールします-poteraceをインストールするか、yumを使用できます

251
00:22:45,549 --> 00:22:49,960
ディストリビューションに応じてPOtresをインストールします。Linuxmintなどを使用しています。

252
00:22:49,960 --> 00:22:54,640
apt install po traceは私をそこに連れて行きました、そして私がビットマップイメージを持っている限り

253
00:22:54,640 --> 00:23:02,020
それと互換性があります私はそれを非常に非常にベクター画像に変換することができます

254
00:23:02,020 --> 00:23:07,780
手動で画像をリトレースする前に、すぐにそれを実行しました。

255
00:23:07,780 --> 00:23:12,820
ベクトルを作成し、それはあなたがそれがどれくらい長く生きているのを見た残忍なプロセスです

256
00:23:12,820 --> 00:23:19,390
それがあなたをどのように助けたかを以下のコメントで知らせてください

257
00:23:19,390 --> 00:23:24,760
あなたのロゴ作成プロセスが画像をベクターに変換する限り、そして今あなたは

258
00:23:24,760 --> 00:23:30,610
その画像を撮り、好きなだけ大きくすることができます

259
00:23:30,610 --> 00:23:34,570
500フィート幅で印刷するかどうかは関係ありません

260
00:23:34,570 --> 00:23:39,630
ビルボードそれはそれのために働くだろうそれは幻想的に見えるだろう

261
00:23:51,440 --> 00:23:54,479
[音楽]

