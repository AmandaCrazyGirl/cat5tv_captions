WEBVTT
Kind: captions
Language: be

00:00:01.520 --> 00:00:07.200
 зараз, калі вы ніколі не далучыліся да нас на кава-паўзе з катэгорыяй 5, вы атрымаеце 

00:00:07.200 --> 00:00:11.490
 даведайцеся больш пра гэта ў катэгорыі пяць кропкавых тэлевізараў, проста пракруціце ўніз на галоўнай старонцы 

00:00:11.490 --> 00:00:15.570
 і вы ўбачыце кава-паўзу ў супольнасці з нашым графікам, калі 

00:00:15.570 --> 00:00:19.920
 мы будзем рабіць наступнае: гэта штотыднёвае мерапрыемства, якое мы праводзім на маштабе " 

00:00:19.920 --> 00:00:23.430
 і гэта магчымасць для нашай супольнасці сабрацца разам і нават 

00:00:23.430 --> 00:00:29.189
 хаця мы ўсе перажываем тое, што перажываем у нашым свеце сёння 

00:00:29.189 --> 00:00:35.370
 скарыстаўся падыходам, а не казаў пра рэчы 

00:00:35.370 --> 00:00:40.260
 якія збіваюць нас зараз, давайце паглядзім на гэта і скажам, што мы ўсе 

00:00:40.260 --> 00:00:47.039
 Застаўшыся ў гэтай сітуацыі, што гэта такое, што я раблю, гэта мяне ўсхвалявала 

00:00:47.039 --> 00:00:52.010
 што я эксперыментую з тэхналогіяй, што ёсць на самай справе 

00:00:52.010 --> 00:00:56.489
 цікава мне і дапамагае мне займаць час, будзь я затрымаўся дома 

00:00:56.489 --> 00:01:03.989
 прама зараз ці ў любым выпадку, таму тэма пра github узнікла, таму што 

00:01:03.989 --> 00:01:10.380
 мы гаворым пра праграмаванне, і Пётр амаль кожны раз сустракаецца там 

00:01:10.380 --> 00:01:14.580
 Перапынак на каву ў супольнасці, і Пётр добра пытаўся, як вы добра карыстаецеся github 

00:01:14.580 --> 00:01:18.750
 На самай справе яны не тое, што мы можам паказаць ці пагаварыць, вы ведаеце, ходзяць па вас 

00:01:18.750 --> 00:01:22.799
 праз перапынак на каву, але прыйшло так добра, што было б сапраўды 

00:01:22.799 --> 00:01:27.330
 добрая тэма для абмеркавання на пяці катэгорыі тэхналогій тэлевізара і прычына яго 

00:01:27.330 --> 00:01:34.350
 Першапачаткова прыдумалі таму, што, калі Microsoft купляла github, яны захоўвалі яго 

00:01:34.350 --> 00:01:39.570
 адбываецца нейкае статус-кво, як яно было, і вы павінны былі плаціць за пэўныя функцыі, але 

00:01:39.570 --> 00:01:48.240
 потым раптам зусім нядаўна сказаў Microsoft, і ўсе тыя, хто плаціў за функцыі, не 

00:01:48.240 --> 00:01:51.899
 усе яны, затое шмат тых, хто заплаціў за функцыі, якія вы раней плацілі 

00:01:51.899 --> 00:01:55.500
 Цяпер яны бясплатныя, таму яны бяруць на сябе паслугу, і яны ў асноўным 

00:01:55.500 --> 00:02:00.659
 прадастаўляючы прэміум-сэрвіс абсалютна бясплатна на github com, і што 

00:02:00.659 --> 00:02:06.600
 github таксама github падобны на пастаўшчыка хмарных паслуг, пакуль ён не патрэбны 

00:02:06.600 --> 00:02:10.800
 распрацоўшчыкам ён дапамагае нам мець магчымасць кіраваць нашымі праектамі, каб вы маглі ісці 

00:02:10.800 --> 00:02:15.050
 назад у мінулым у асноўным з кодам, і гэта сапраўды карысна, каб мець магчымасць 

00:02:15.050 --> 00:02:20.540
 паглядзіце гэтыя абавязкі і паглядзіце, як змены паўплывалі на ваш праект 

00:02:20.540 --> 00:02:26.330
 выдатны механізм захоўвання вашага кода, таму што вы можаце ім падзяліцца 

00:02:26.330 --> 00:02:30.350
 іншыя людзі, калі вы хочаце зараз, вядома, Microsoft робіць гэта бясплатна 

00:02:30.350 --> 00:02:37.640
 Цяпер вы можаце мець бясплатныя прыватныя сховішчы, і вы можаце наладзіць 

00:02:37.640 --> 00:02:41.300
 столькі каманд, колькі вы хочаце супрацоўнічаць з іншымі праграмістамі, але 

00:02:41.300 --> 00:02:45.920
 па сутнасці, для мяне гэта дазваляе мне дзяліцца сваім кодам у Інтэрнэце 

00:02:45.920 --> 00:02:49.459
 такім чынам, што іншыя людзі могуць выкарыстоўваць яго з адкрытым зыходным кодам, яны могуць яго складаць ці выкарыстоўваць 

00:02:49.459 --> 00:02:55.459
 гэта альбо запусціце яго на ўласных кампутарах, і тады, калі яны вырашаюць, добра, я б лепш 

00:02:55.459 --> 00:02:59.510
 гэта працуе такім чынам, а можа, вось памылка, і я магу выправіць, што яны могуць рабіць 

00:02:59.510 --> 00:03:05.390
 называецца запыт на выцягванне, таму ў асноўным яны кланіруюць маё сховішча github 

00:03:05.390 --> 00:03:10.730
 код яны выпраўляюць гэта на сваім кампутары, і тады яны робяць запыт на цягу, які штурхае 

00:03:10.730 --> 00:03:16.100
 назад, пакуль яны адштурхоўваюць яго да відэльцы, і тады ён стварае запыт на выцягванне 

00:03:16.100 --> 00:03:21.709
 для мяне, так што я бачу, што эй Джо будзе падарваць над імі выправіць гэтую памылку з маёй 

00:03:21.709 --> 00:03:26.720
 праграмнае забеспячэнне Я магу націснуць кнопку, і гэта будзе імпартаваць гэта выпраўленне ў маё праграмнае забеспячэнне 

00:03:26.720 --> 00:03:33.890
 У гэтым ёсць шмат, і гэта сапраўды вельмі магутна 

00:03:33.890 --> 00:03:37.519
 блытаюць асабліва, калі вы трапляеце ў раздушванне і зліццё іх і тых 

00:03:37.519 --> 00:03:41.390
 такія рэчы, якія мы сёння не збіраемся, але што я хачу 

00:03:41.390 --> 00:03:47.150
 пакажа вам, як адбываецца самае асноўнае веданне пра тое, як гэта адбываецца 

00:03:47.150 --> 00:03:53.720
 дазваляюць эфектыўна выкарыстоўваць Github, думайце пра тое, што вы знаходзіцеся 

00:03:53.720 --> 00:03:58.519
 ставіць свой код там як праграмнае забеспячэнне з адкрытым зыходным кодам і не павінна быць 

00:03:58.519 --> 00:04:03.470
 калі вы хочаце, вы можаце мець яго прыватнае, але ў маім выпадку я хачу, што я раблю 

00:04:03.470 --> 00:04:07.130
 Часам людзі са мной супрацоўнічаюць, магчыма, яны будуць публікаваць праблемы 

00:04:07.130 --> 00:04:10.430
 калі яны знойдуць памылку, і тады я ўсё яшчэ чалавек, які павінен яе выправіць, але не 

00:04:10.430 --> 00:04:15.590
 прынамсі мая суполка ўваходзіць у маё сховішча праграмнага забеспячэння і гаворыць пра гэта 

00:04:15.590 --> 00:04:21.769
 праблема, і вам трэба выправіць усё ў парадку, так што спакой Github - гэта тое, куды вы ідзяце - знак 

00:04:21.769 --> 00:04:26.360
 для вашага бясплатнага ўліковага запісу ўсё, што вам трэба зрабіць, гэта націснуць на спасылку і націснуць 

00:04:26.360 --> 00:04:30.080
 зарэгіструйцеся, у мяне ўжо ёсць уліковы запіс, таму я буду ўваходзіць як асабіста 

00:04:30.080 --> 00:04:37.789
 і ўвайдзіце, каб вы бачылі тут, што калі я пайду ў свае сховішчы, так што, калі скачу 

00:04:37.789 --> 00:04:47.569
 дадому і ідзі, каб загрузіць сюды, хай добра загружаецца, я проста пайду 

00:04:47.569 --> 00:04:56.000
 прама да тэлевізара Cat 5 - гэта месца, дзе я вяду ўсю сваю праграмную праграму, каб вы пайшлі туды 

00:04:56.000 --> 00:04:58.909
 github.com слэш cat 5 TV і паглядзіш, як гэта працуе 

00:04:58.909 --> 00:05:02.779
 так што вы бачыце, што ў мяне ёсць мноства сховішчаў праграмнага забеспячэння, і ўсе яны ёсць 

00:05:02.779 --> 00:05:07.099
 розныя праекты: усе розныя рэчы, якія я рабіў, альбо якія я працягваю 

00:05:07.099 --> 00:05:12.889
 рабіць, і там ёсць старонкі і старонкі, і іх старонкі, так што толькі калі ў вас ёсць свой github 

00:05:12.889 --> 00:05:19.340
 ўліковага запісу, вы можаце ўвайсці ў тое, што вы бачыце тут, але гэта мой спіс сховішчаў, але 

00:05:19.340 --> 00:05:23.090
 пры першай рэгістрацыі вы не будзеце мець усё, што вам трэба стварыць 

00:05:23.090 --> 00:05:26.750
 ваша першае сховішча, так што я зразумею, што зараз я буду рабіць гэта 

00:05:26.750 --> 00:05:33.289
 Не патрабуецца github, забудзь, добра, і git не супадае з github 

00:05:33.289 --> 00:05:39.919
 Інтэрнэт-сэрвіс і думайце пра гэта як аблокі для захоўвання, забудзьце, добра, гэта не тое самае 

00:05:39.919 --> 00:05:46.400
 Справа ў тым, што гэта Інтэрнэт-сховішча для гэтага інструмента кіравання пакетам з адкрытым зыходным кодам 

00:05:46.400 --> 00:05:50.960
 інструмент кіравання праектамі, так што тут, на github, яны зрабілі гэта сапраўды вельмі 

00:05:50.960 --> 00:05:55.400
 проста сказаць проста новае сховішча, таму я пайшоў у свае сховішчы, і я 

00:05:55.400 --> 00:05:59.360
 націснуў на новае, і тады я пайду, каб назваць яго, я гэта называю 

00:05:59.360 --> 00:06:07.419
 адзін мой тэст падкрэслівання і дадатковы апісанне - гэта тэст для шоў 

00:06:07.419 --> 00:06:12.800
 хочаце вы, каб ён быў дзяржаўным ці прыватным, а затым ініцыялізаваць яго з дапамогай а 

00:06:12.800 --> 00:06:17.029
 readme, заўсёды лепш зрабіць, каб гэта зрабіла так, каб людзі маглі атрымаць доступ да яго 

00:06:17.029 --> 00:06:20.839
 адразу, уключаючы сябе, вы хочаце дадаць ліцэнзію, хочаце дадаць 

00:06:20.839 --> 00:06:24.740
 git ігнараваць Я пакіну абодва пустыя вы адкрыеце, што гэта значыць 

00:06:24.740 --> 00:06:30.680
 будучыню і стварыце сваё сховішча, таму зараз у мяне ёсць назва пад тэстам падкрэслівання 

00:06:30.680 --> 00:06:34.459
 але нічога там няма, і я скончыў з браўзэрам, так што цяпер я іду 

00:06:34.459 --> 00:06:39.830
 зрабіць, я збіраюся ўзяць свой тэрмінал і ў свой тэрмінал я збіраюся 

00:06:39.830 --> 00:06:43.320
 тып добра, каб вы бачылі, што я 

00:06:43.320 --> 00:06:48.330
 я ўжо ўсталяваў яго, калі ў вас няма ўстаноўкі, таму я ў Linux 

00:06:48.330 --> 00:06:53.460
 Debian Linux тут вы можаце ўводзіць apt install git - гэта тое, што вы збіраецеся 

00:06:53.460 --> 00:07:05.640
 тып, я не груба су, так як увайшоў, гэта рок добра, магла ўсталяваць, але ўсё гэта будзе сказаць 

00:07:05.640 --> 00:07:09.660
 мне, што ў мяне ўжо ёсць ток ой, няма не, я ўжо гэта атрымаў 

00:07:09.660 --> 00:07:13.500
 Для мяне ёсць і іншыя абнаўленні, але атрымаецца - гэта самая новая версія 

00:07:13.500 --> 00:07:17.430
 калі ў вас яго няма, вам трэба ўсталяваць яго, калі вы працуеце на абароце 

00:07:17.430 --> 00:07:22.980
 сістэма будзе yum install git, і вы можаце знайсці яго ў сваім графічным інтэрфейсе 

00:07:22.980 --> 00:07:28.740
 менеджэр сховішчаў, менеджэр пакетаў альбо ўсё, што вы выкарыстоўваеце, як нейкі сінаптык 

00:07:28.740 --> 00:07:33.750
 Напрыклад, напрыклад, пасля ўстаноўкі зрабіце тэчку 

00:07:33.750 --> 00:07:41.100
 верагодна, у вашай хатняй тэчцы, і мы назавем гэта сховішча проста так, каб я 

00:07:41.100 --> 00:07:46.290
 ёсць месца, дзе я заўсёды ведаю, што мой код правільны, так што гэта будзе 

00:07:46.290 --> 00:07:52.650
 лакальная копія майго сховішча Git, таму зараз я збіраюся набраць клон Git і мы 

00:07:52.650 --> 00:08:00.210
 скапіруйце гэты URL-адрас github.com слэш-кот 5 ТБ націшце мой тэст падкрэслівання, каб я мог 

00:08:00.210 --> 00:08:08.010
 скапіруйце, што проста з дапамогай ctrl C, вы звыкнецеся проста ўводзіць яго 

00:08:08.010 --> 00:08:13.560
 імя карыстальніка скараціць ваша сховішча, і таму, калі я паглядзець на сваю файлавую сістэму, гэта так 

00:08:13.560 --> 00:08:20.760
 кланаваны атрымаць клон, а затым назва або URL рэпазітара так зараз 

00:08:20.760 --> 00:08:25.920
 калі я перайду да маёй хатняй тэчкі, а потым у сховішчы заўважу, што ёй належыць корань 

00:08:25.920 --> 00:08:31.740
 таму што я бачу супер карыстальніка, каб падаць у суд, таму зараз ёсць тэчка пад назвай " 

00:08:31.740 --> 00:08:38.250
 у маім тэсце ёсць файл пад назвай readme MD, таму ў гэтай тэчцы я знаходжуся 

00:08:38.250 --> 00:08:43.250
 збіраюся пайсці ў мой тэст, і я хачу стварыць новы файл 

00:08:43.250 --> 00:08:50.970
 nano test dot SH, і мы створым хуткі файл SH для запуску bash script і 

00:08:50.970 --> 00:08:55.640
 Я збіраюся набраць рэха, прывітанне, як гэта, на самой справе 

00:08:55.640 --> 00:09:00.970
 прытрымлівацца нормы прывітанне свет, як усё ў парадку 

00:09:00.970 --> 00:09:05.690
 таму я напісаў гэта і закрыў, таму зараз вы бачыце файл з назвай 

00:09:05.690 --> 00:09:13.910
 Праверце кропку з Н зараз, калі я перадаю файл да github, то дазволы ёсць 

00:09:13.910 --> 00:09:18.500
 збіраюся быць уключаны ў гэты штуршок, так што, калі я раблю кропку слэш-тэсту, вы з вамі 

00:09:18.500 --> 00:09:23.360
 апавяшчэнне кажа, што ў дазволе адмоўлена мне трэба зрабіць гэта выканаўчым выканаўчым all chmod 

00:09:23.360 --> 00:09:30.680
 плюс х тэставая кропка з Н таму зараз, калі я набяру тэст з пункту гледжання прывітанне свету, так што я зараз 

00:09:30.680 --> 00:09:35.510
 гатовы мой самы першы сцэнарый, каб перайсці на github, гэта частка маёй 

00:09:35.510 --> 00:09:41.870
 сховішча на маім лакальным кампутары, але яшчэ не ў github, таму калі вы паглядзіце 

00:09:41.870 --> 00:09:45.500
 github Я буду абнавіць толькі каб даказаць, што вы бачыце свой спіс файлаў тут і 

00:09:45.500 --> 00:09:50.390
 ёсць яшчэ толькі рэдмей, добра, таму зараз у маім акне тэрмінала я збіраюся 

00:09:50.390 --> 00:09:56.330
 зноў скарыстаюся гэтай камандай git. Я пайду, каб дадаць зорку ў сховішчах 

00:09:56.330 --> 00:10:01.270
 папка, якая кажа, знайдзіце любыя файлы, якія змяніліся, і дадайце іх нармальна 

00:10:01.270 --> 00:10:09.680
 здзейсніць - я, а потым у двукоссях дайце назву здзейсніць так, што я скажу 

00:10:09.680 --> 00:10:14.480
 мой першы сцэнар, і гэта толькі кароткія апісанні і націсніце Enter і 

00:10:14.480 --> 00:10:19.220
 зараз гэта кажаце, эй, вы павінны сказаць нам, хто вы, таму што вы ніколі не былі 

00:10:19.220 --> 00:10:24.380
 запусціце Git на гэтым кампутары раней, таму вам трэба запусціць гэтыя дзве каманды даволі 

00:10:24.380 --> 00:10:29.030
 проста атрымаць канфігурацыю - - глабальны вы толькі павінны 

00:10:29.030 --> 00:10:33.350
 зрабіце гэта адзін раз, не хвалюйцеся, калі карыстальнік не расставіць электронную пошту, і калі ў вас паўстануць праблемы з уводам гэтага паведамлення 

00:10:33.350 --> 00:10:39.980
 скапіруйце гэта нармальна, а потым у двукоссях я збіраюся паставіць Робі ў катэгорыю ТБ 5, і ўсё 

00:10:39.980 --> 00:10:48.890
 проста кажу гэта мой адрас электроннай пошты, то я пайду імя карыстальніка, я не ведаю 

00:10:48.890 --> 00:10:52.550
 калі вы гэта чуеце, але гэта сапраўды дрэнная бура па-за межамі нашай студыі 

00:10:52.550 --> 00:10:56.720
 сёння настолькі мільгаюць агеньчыкі некалькі разоў, але я думаю, што мы атрымаем 

00:10:56.720 --> 00:11:02.090
 праз яго ўсё роўна так усё добра выдаліце ​​і змяніце маё імя на Робі 

00:11:02.090 --> 00:11:06.710
 Фергюсан увайсці ў парадку, так што я павінен зрабіць гэта толькі раз, так што цяпер сцэна 

00:11:06.710 --> 00:11:11.420
 наступны раз, калі я запускаю гэты git počin - я гэта проста дадаю 

00:11:11.420 --> 00:11:15.050
 таму я дадаў яго і бачыць, што адзін файл змяніўся, ёсць два 

00:11:15.050 --> 00:11:20.270
 ўстаўкі і праверкі SH з'яўляецца новым, таму ён будзе ствараць гэта, так што цяпер фінал 

00:11:20.270 --> 00:11:26.450
 каманда, якую мне трэба ўвесці, гэта атрымаць паходжанне push, і я збіраюся паказаць 

00:11:26.450 --> 00:11:32.360
 майстар, які з'яўляецца майстрам філіяла, так паходжанне майстра, і зараз гэта адбываецца 

00:11:32.360 --> 00:11:35.720
 спытайцеся ў майго імя карыстальніка і пароля, які я ўвёў, калі стварыў сваё 

00:11:35.720 --> 00:11:44.360
 уліковы запіс, таму cat5 TV - гэта маё імя карыстальніка і пароль, які я выкарыстоўваю LastPass і ствараю новы 

00:11:44.360 --> 00:11:49.430
 Паролі ўвесь час, і яны масіўныя і вар'яты, таму я скапіраваў пароль 

00:11:49.430 --> 00:11:57.500
 а потым я ўклеіў яго і там ідзе яго загрузка гэтых маіх дадзеных 

00:11:57.500 --> 00:12:02.840
 сховішча, і гэта робіцца так, каб абнавіць f5, і вы павінны ўбачыць тэст SH 

00:12:02.840 --> 00:12:09.200
 зараз з'яўляецца часткай майго сховішча github і там ён ёсць, і гэта паказвае, што гэта 

00:12:09.200 --> 00:12:17.330
 прывітальны свет прывітанне, таму зараз таму, таму давайце рабіць выгляд, што я ўнёс змены 

00:12:17.330 --> 00:12:20.750
 у іншым месцы, таму на іншым кампутары, і я збіраюся зрабіць гэта праз браўзэр 

00:12:20.750 --> 00:12:29.270
 проста каб паказаць вам, каб у гэтай сістэме я збіраюся зноў прывітацца, усё ў парадку 

00:12:29.270 --> 00:12:33.680
 Я зберагу гэтыя змены, я не буду называць гэта імя і што-небудзь падобнае 

00:12:33.680 --> 00:12:37.340
 гэта апісанне, я толькі пацверджу, таму зараз сцэнар выглядае так, што бачыце 

00:12:37.340 --> 00:12:41.600
 як я гэта змяняю ў браўзэры, вы можаце зрабіць гэта з любога месца, так што зараз, калі 

00:12:41.600 --> 00:12:47.510
 Я гляджу на свой файл лакальна на маім кампутары ў сховішчы, там мы яго яшчэ захоўваем 

00:12:47.510 --> 00:12:53.630
 проста кажа, прывітанне, усё ў парадку, так што я збіраюся зноў усё цягнуць і раблю ўсё гэта 

00:12:53.630 --> 00:12:58.700
 у маёй тэчцы падкрэслівання тэсту, каб пацягнуць, трэба шукаць любы 

00:12:58.700 --> 00:13:02.510
 змены, якія былі ўнесены ў іншым месцы, і цягнуць іх да майго кампутара так 

00:13:02.510 --> 00:13:07.460
 гэта заўсёды сінхранізуе гэтыя змены, таму зараз, калі я адкрыю Nano і адкрыю гэты файл 

00:13:07.460 --> 00:13:14.000
 вы бачыце, што новае прывітанне зноў з'яўляецца часткай гэтага, таму я вам пакажу рэха 

00:13:14.000 --> 00:13:20.270
 прывітанне тры разы, і я збіраюся гэта захаваць, і зараз я пайду дакладна 

00:13:20.270 --> 00:13:22.400
 тое ж самае, але пакажу, як гэта па-іншаму 

00:13:22.400 --> 00:13:28.490
 Я ўжо ўказаў сваё імя і свой адрас электроннай пошты, каб атрымаць Star Star здзейсніць - 

00:13:28.490 --> 00:13:39.410
 я канчатковае абнаўленне get push origin master cap 5 гэта маё імя карыстальніка і мой пароль 

00:13:39.410 --> 00:13:50.120
 гэта радок каля 64 знакаў, выбраных выпадковым чынам, і я збіраюся ўставіць 

00:13:50.120 --> 00:13:56.060
 што туды і сюды мы ідзем, так што ўсё, што адбываецца зараз, падштурхоўвае мае змены 

00:13:56.060 --> 00:14:00.680
 лакальна на серверы github, каб ён зноў падзяліўся ім з усімі іншымі альбо 

00:14:00.680 --> 00:14:05.510
 з маімі іншымі сістэмамі, калі я раблю гэта, я раблю гэта 

00:14:05.510 --> 00:14:09.980
 прабачце, я клон нешта кланаваць, і гэта не павінна быць маім 

00:14:09.980 --> 00:14:14.690
 чужое сховішча github да таго часу, пакуль яно публічнае, але я магу зрабіць 

00:14:14.690 --> 00:14:19.070
 змены ў ім на маёй лакальнай машыне, і тады я магу зрабіць штуршок, зараз вам трэба валодаць 

00:14:19.070 --> 00:14:24.710
 сховішча для таго, каб зрабіць штуршок, каб зрабіць спосаб унесці змены ў каго-небудзь 

00:14:24.710 --> 00:14:29.570
 сховішча іншага - гэта раскашэліцца, калі вы заходзіце ў сховішча, націскаеце на яго 

00:14:29.570 --> 00:14:34.040
 кнопка называецца відэльцам, і яна ў асноўным робіць яе копію ва ўласным уліковым запісе 

00:14:34.040 --> 00:14:37.550
 каб вы маглі ўнесці змены, і тады вы можаце рабіць запыты 

00:14:37.550 --> 00:14:41.000
 але гэта асновы, каб пачаць, што дазволіць вам 

00:14:41.000 --> 00:14:45.680
 ствараць рэпазітары, загружаць файлы, загружаць свой код, можна маніпуляваць 

00:14:45.680 --> 00:14:49.250
 гэта з любой сістэмы, так што вы можаце праверыць яго на Raspberry Pi на вашай машыне Windows 

00:14:49.250 --> 00:14:54.410
 на працоўным стале Linux на любым месцы, а потым націсніце ўсе гэтыя змены на 

00:14:54.410 --> 00:14:59.030
 сервер, каб іх можна было загрузіць альбо перацягнуць ва ўсе вашы сістэмы 

00:14:59.030 --> 00:15:01.810
 усё ёсць для гэтага 

00:15:07.430 --> 00:15:10.480
 [Музыка] 

