WEBVTT
Kind: captions
Language: cs

00:00:01.520 --> 00:00:07.200
 nyní, pokud jste se k nám nikdy nepřipojili na komunitní přestávku v kategorii 5, budete 

00:00:07.200 --> 00:00:11.490
 Více se o tom dozvíte na televizi s pěti tečkami, jen přejděte dolů na domovskou stránku 

00:00:11.490 --> 00:00:15.570
 a uvidíte komunitní přestávku na kávu spolu s naším plánem, kdy 

00:00:15.570 --> 00:00:19.920
 uděláme další, jedná se o týdenní událost, kterou pořádáme na přiblížení 

00:00:19.920 --> 00:00:23.430
 a je to příležitost pro naši komunitu, aby se spojila a dokonce 

00:00:23.430 --> 00:00:29.189
 i když všichni dnes zažíváme to, co v našem světě zažíváme 

00:00:29.189 --> 00:00:35.370
 zvolil přístup a neřekl o těchto věcech věci 

00:00:35.370 --> 00:00:40.260
 které nás právě teď stahují, pojďme se na to podívat a řekni, že jsme všichni 

00:00:40.260 --> 00:00:47.039
 uvízl v této situaci, co je to, co dělám, a to mě vzrušilo 

00:00:47.039 --> 00:00:52.010
 co to je, že experimentuji s technologicky, to je opravdu 

00:00:52.010 --> 00:00:56.489
 zajímavé pro mě a pomáhají mi zabírat čas, ať už jsem doma doma 

00:00:56.489 --> 00:01:03.989
 právě teď, ať už se jedná o jakýkoli případ, téma vyšlo o githubu, protože 

00:01:03.989 --> 00:01:10.380
 mluvíme o programování a Peter je tam téměř pokaždé a 

00:01:10.380 --> 00:01:14.580
 komunitní přestávka na kávu a Peter se dobře ptal, jak dobře používáte github 

00:01:14.580 --> 00:01:18.750
 ne ve skutečnosti to, co můžeme ukázat nebo mluvit, víte, vás chodí 

00:01:18.750 --> 00:01:22.799
 přes přestávku na kávu, ale vyšlo najevo, že hej, to by bylo opravdu 

00:01:22.799 --> 00:01:27.330
 dobré téma k diskusi o kategorii pět technologie TV a důvod, proč to 

00:01:27.330 --> 00:01:34.350
 přišel původně proto, že když Microsoft koupil github, nechali si ho 

00:01:34.350 --> 00:01:39.570
 jaksi to bylo a museli jste za určité funkce platit, ale 

00:01:39.570 --> 00:01:48.240
 pak najednou Microsoft nedávno řekl a všichni ti za funkce neplatili 

00:01:48.240 --> 00:01:51.899
 všechny, ale mnoho z nich zaplatilo za funkce, které jste museli platit 

00:01:51.899 --> 00:01:55.500
 protože jsou nyní zdarma, takže berou službu a jsou v podstatě 

00:01:55.500 --> 00:02:00.659
 rozdávání jejich prémiové služby zcela zdarma na github com, tak co je 

00:02:00.659 --> 00:02:06.600
 github no github je zatím jako poskytovatel cloudových služeb 

00:02:06.600 --> 00:02:10.800
 vývojářům nám pomáhá řídit naše projekty, abyste mohli jít 

00:02:10.800 --> 00:02:15.050
 zpět v čase v podstatě s kódem a je opravdu užitečné mít možnost 

00:02:15.050 --> 00:02:20.540
 podívejte se na tyto závazky a podívejte se, jak změny ovlivnily váš projekt 

00:02:20.540 --> 00:02:26.330
 skvělý mechanismus úložiště pro váš kód, protože s ním můžete sdílet 

00:02:26.330 --> 00:02:30.350
 další lidé, pokud chcete nyní, samozřejmě, společnost Microsoft ji zdarma 

00:02:30.350 --> 00:02:37.640
 Nyní můžete mít také soukromé soukromé úložiště a můžete je nastavit 

00:02:37.640 --> 00:02:41.300
 tolik týmů, kolik chcete, pokud chcete spolupracovat s jinými programátory, ale 

00:02:41.300 --> 00:02:45.920
 v podstatě to, co pro mě dělá, je to, že mi umožňuje sdílet svůj kód online v systému Windows 

00:02:45.920 --> 00:02:49.459
 tak, že ostatní lidé mohou používat open source, mohou je kompilovat nebo používat 

00:02:49.459 --> 00:02:55.459
 nebo jej spusťte na vlastních počítačích a pokud se rozhodnou dobře, raději bych 

00:02:55.459 --> 00:02:59.510
 funguje to tak nebo možná tady je chyba a já mohu opravit, že dokážou dělat, co je 

00:02:59.510 --> 00:03:05.390
 volal žádost o vyžádání, takže v podstatě klonují můj githubový úložiště můj software 

00:03:05.390 --> 00:03:10.730
 kód opraví na svém počítači a poté udělají požadavek na vyžádání, který tlačí 

00:03:10.730 --> 00:03:16.100
 to zpět, zatímco oni tlačí to zpět na jejich vidličku a pak to vytvoří požadavek na vyžádání 

00:03:16.100 --> 00:03:21.709
 pro mě, abych viděl, že hej, Joe vyhodí tuto chybu s mojí 

00:03:21.709 --> 00:03:26.720
 software mohu kliknout na tlačítko a bude importovat tuto opravu do mého softwaru 

00:03:26.720 --> 00:03:33.890
 je toho hodně a je to opravdu moc silné, jak to může být 

00:03:33.890 --> 00:03:37.519
 matoucí, zejména když se dostanete do rozmačkání a jejich sloučení s těmi 

00:03:37.519 --> 00:03:41.390
 druhy věcí, do kterých se dnes nedostaneme, ale to, co chci 

00:03:41.390 --> 00:03:47.150
 Ukážu vám, jak se dostanou k nejzákladnějším znalostem o tom, jak to funguje 

00:03:47.150 --> 00:03:53.720
 vám umožní používat github efektivním způsobem, přemýšlejte o tom jako o tom, kde jste 

00:03:53.720 --> 00:03:58.519
 dát svůj kód tam jako open source software a nemusí být 

00:03:58.519 --> 00:04:03.470
 můžete to mít soukromé, pokud chcete, ale v mém případě to dělám, co chci 

00:04:03.470 --> 00:04:07.130
 lidé, kteří se mnou příležitostně spolupracují, možná zveřejní problémy 

00:04:07.130 --> 00:04:10.430
 pokud najdou chybu a pak jsem stále ten, kdo to musí opravit, ale na 

00:04:10.430 --> 00:04:15.590
 nejméně moje komunita přichází do mého softwarového úložiště a říká, že je to 

00:04:15.590 --> 00:04:21.769
 problém a musíte to opravit v pořádku, takže github klid je tam, kam jdete, je znamení 

00:04:21.769 --> 00:04:26.360
 pro svůj účet zdarma stačí kliknout na odkaz a kliknout 

00:04:26.360 --> 00:04:30.080
 zaregistrujte se, již mám účet, takže se přihlásím jako já 

00:04:30.080 --> 00:04:37.789
 a přihlaste se, abyste zde viděli, že pokud půjdu do svých úložišť, tak pokud skočím 

00:04:37.789 --> 00:04:47.569
 domů tady a jdi nechat to načíst tady nechat to načíst v pořádku Jdu jen jít 

00:04:47.569 --> 00:04:56.000
 přímo na kočku 5 TV je místo, kde hostuji veškerý svůj software, takže tam chodíte 

00:04:56.000 --> 00:04:58.909
 github.com slash cat 5 TV a uvidíte, jak to funguje 

00:04:58.909 --> 00:05:02.779
 takže vidíte, že mám spoustu softwarových úložišť a že jsou všichni 

00:05:02.779 --> 00:05:07.099
 různé projekty všechny různé věci, které jsem udělal nebo že pokračuji 

00:05:07.099 --> 00:05:12.889
 dělat a tam jsou stránky a stránky a stránky toho, takže jakmile budete mít svůj github 

00:05:12.889 --> 00:05:19.340
 účet se můžete přihlásit k tomu, co zde vidíte, což je můj seznam úložišť, ale 

00:05:19.340 --> 00:05:23.090
 když se poprvé zaregistrujete, nebudete mít všechny z nich, co musíte vytvořit 

00:05:23.090 --> 00:05:26.750
 vaše první úložiště tak, aby tomu nyní rozuměl způsob, jakým to udělám 

00:05:26.750 --> 00:05:33.289
 github není nutné zapomenout ok a git není totéž jako github github je 

00:05:33.289 --> 00:05:39.919
 online služby a přemýšlejte o tom, že cloudové úložiště zapomíná ok, není to stejné 

00:05:39.919 --> 00:05:46.400
 je to online úložiště pro tento nástroj pro správu balíků s otevřeným zdrojovým kódem nebo 

00:05:46.400 --> 00:05:50.960
 nástroj pro správu projektů, takže tady na githubu to opravdu dokázali 

00:05:50.960 --> 00:05:55.400
 snadné jednoduše říct nové úložiště, takže jsem šel do svých úložišť a já 

00:05:55.400 --> 00:05:59.360
 klikl na nový a pak mu dám jméno, které tomu budu říkat 

00:05:59.360 --> 00:06:07.419
 jeden můj podtržítko a volitelný popis je to test pro show 

00:06:07.419 --> 00:06:12.800
 zda chcete, aby byl veřejný nebo soukromý, a poté jej inicializujte pomocí 

00:06:12.800 --> 00:06:17.029
 readme, vždy je nejlepší udělat to, že to dělá to, aby k němu lidé měli přístup 

00:06:17.029 --> 00:06:20.839
 ihned včetně sebe, které chcete přidat licenci, chcete přidat 

00:06:20.839 --> 00:06:24.740
 git ignorovat Nechám oba ty prázdné, zjistíš, co to znamená 

00:06:24.740 --> 00:06:30.680
 budoucnost a vytvořte si své úložiště, takže nyní mám jedno, které se nazývá moje podtržítka 

00:06:30.680 --> 00:06:34.459
 ale nic tam není a já jsem udělal s prohlížečem, takže teď, co jdu 

00:06:34.459 --> 00:06:39.830
 udělat je, že budu vychovávat terminál a v terminálu jdu 

00:06:39.830 --> 00:06:43.320
 typ si v pořádku, takže vidíš, že jsem 

00:06:43.320 --> 00:06:48.330
 již nainstalován, pokud nemáte nainstalován, takže jsem na Linuxu jsem na 

00:06:48.330 --> 00:06:53.460
 Debian Linux zde můžete napsat apt install git to je to, co budete dělat 

00:06:53.460 --> 00:07:05.640
 typ Nejsem hrubý sudo su přihlášen je rock ok apt install přesto to bude říct 

00:07:05.640 --> 00:07:09.660
 mě, že už mám aktuální oh existuje ne ne už jsem to dostal 

00:07:09.660 --> 00:07:13.500
 existují i ​​další aktualizace pro mě, i když, ale get je již nejnovější verze tak 

00:07:13.500 --> 00:07:17.430
 pokud ji nemáte, musíte ji nainstalovat, pokud používáte RPM 

00:07:17.430 --> 00:07:22.980
 systému to bude yum install git a najdete ho také ve svém GUI 

00:07:22.980 --> 00:07:28.740
 Správce úložišť správce balíků nebo cokoli, co používáte jako nějaký synaptický 

00:07:28.740 --> 00:07:33.750
 například správce balíčků, takže po instalaci si vytvořte složku 

00:07:33.750 --> 00:07:41.100
 pravděpodobně ve vaší domovské složce a budeme to nazývat repozitáře jen tak, že já 

00:07:41.100 --> 00:07:46.290
 mít místo, kde vždy vím, že můj kód je správný, takže to bude 

00:07:46.290 --> 00:07:52.650
 lokální kopie mého úložiště git, takže teď napíšu klon git a my jsme 

00:07:52.650 --> 00:08:00.210
 zkopíruji tuto adresu github.com slash cat 5 TV lomítko můj test podtržení, takže můžu 

00:08:00.210 --> 00:08:08.010
 zkopírujte, že právě pomocí ctrl C si zvyknete jen na psaní, je to vaše 

00:08:08.010 --> 00:08:13.560
 uživatelské jméno lomítko vaše úložiště a nyní ano, když se podívám na svůj systém souborů, takže je to 

00:08:13.560 --> 00:08:20.760
 klonovat získat klon a pak název nebo URL úložiště tak nyní 

00:08:20.760 --> 00:08:25.920
 pokud jdu do své domovské složky a pak si do úložiště všimneme, že je ve vlastnictví root 

00:08:25.920 --> 00:08:31.740
 protože vidím super uživatele vole žalovat, takže teď existuje složka s názvem můj test a 

00:08:31.740 --> 00:08:38.250
 v rámci mého testu je soubor s názvem readme MD, takže v této složce jsem 

00:08:38.250 --> 00:08:43.250
 jít do mého testu a chci vytvořit nový soubor, kterému to budu říkat 

00:08:43.250 --> 00:08:50.970
 nano test dot SH a vytvoříme rychlý SH soubor pro spuštění bash skriptu a 

00:08:50.970 --> 00:08:55.640
 Budu tam psát echo ahoj, jak je to, že bych měl opravdu 

00:08:55.640 --> 00:09:00.970
 drž se normálního hello světa, jak je to v pořádku 

00:09:00.970 --> 00:09:05.690
 takže jsem to napsal a zavřel jsem ji, takže teď vidíte, že se volá soubor 

00:09:05.690 --> 00:09:13.910
 test dot s H nyní, když přenesu soubor do githubu oprávnění jsou 

00:09:13.910 --> 00:09:18.500
 bude zahrnuta do tohoto tlaku, takže pokud udělám tečkovanou lomítko, otestuju tě 

00:09:18.500 --> 00:09:23.360
 Všimněte si, že říká, že povolení bylo odepřeno 

00:09:23.360 --> 00:09:30.680
 plus x test dot s H, takže teď, když napíšu test dot s HS hello world, takže teď 

00:09:30.680 --> 00:09:35.510
 mít můj úplně první kousek skriptu připraven jít nahoru do githubu, je to moje část 

00:09:35.510 --> 00:09:41.870
 úložiště na mém místním počítači, ale ještě není v githubu, takže pokud se podíváte 

00:09:41.870 --> 00:09:45.500
 github Budu se aktualizovat, jen abych dokázal, že tu vidíš svůj seznam souborů 

00:09:45.500 --> 00:09:50.390
 pořád je tu jen readme, takže teď v mém terminálovém okně jdu 

00:09:50.390 --> 00:09:56.330
 znovu použijte tento příkaz git, jdu se dostat přidat hvězdu v úložištích 

00:09:56.330 --> 00:10:01.270
 Složka, která říká, najděte všechny soubory, které mají nějaké změny, a přidejte je v pořádku 

00:10:01.270 --> 00:10:09.680
 commit - am a pak v uvozovkách dejte vašemu commit jméno, takže to řeknu 

00:10:09.680 --> 00:10:14.480
 můj první skript a to jsou jen stručné malé popisy a stiskněte Enter a 

00:10:14.480 --> 00:10:19.220
 Teď to říká, hej, musíš nám říct, kdo jsi, protože jsi nikdy nikdy 

00:10:19.220 --> 00:10:24.380
 spusťte git na tomto počítači dříve, takže musíte tyto dva příkazy spouštět pěkně 

00:10:24.380 --> 00:10:29.030
 přímočará konfigurace - globální stačí 

00:10:29.030 --> 00:10:33.350
 Udělejte to jednou nebojte se uživatele dot e-mail, a pokud máte potíže s napsáním, že jen 

00:10:33.350 --> 00:10:39.980
 zkopírujte to v pořádku a pak v uvozovkách umístím Robbyho do kategorie 5 a to je vše 

00:10:39.980 --> 00:10:48.890
 jen to řeknu své e-mailové adrese, pak půjdu uživatelské tečkové jméno, které nevím 

00:10:48.890 --> 00:10:52.550
 pokud to slyšíte, ale ve skutečnosti je to opravdu špatná bouře mimo naše studio 

00:10:52.550 --> 00:10:56.720
 dnes světla několikrát blikají, ale myslím, že se dostaneme 

00:10:56.720 --> 00:11:02.090
 přes to stejně, takže to v pořádku smažte a změňte své jméno na Robby 

00:11:02.090 --> 00:11:06.710
 Ferguson vstoupil ok hotovo, takže to musím udělat jen jednou, takže teď scéna 

00:11:06.710 --> 00:11:11.420
 příště spustím ten git commit - jsem to jen přidal v pořádku 

00:11:11.420 --> 00:11:15.050
 takže jsem ji přidal a uvidí, že jeden soubor se změnil, existují dva 

00:11:15.050 --> 00:11:20.270
 vložení a vyzkoušení SH je nové, takže to vytvoří, takže nyní finále 

00:11:20.270 --> 00:11:26.450
 příkaz, který musím zadat, je get push origin a já budu specifikovat 

00:11:26.450 --> 00:11:32.360
 master, který je master master, takže původ master a nyní to bude 

00:11:32.360 --> 00:11:35.720
 zeptejte se mě na své uživatelské jméno a heslo, které jsem zadal, když jsem vytvořil své 

00:11:35.720 --> 00:11:44.360
 účet, takže cat5 TV je mé uživatelské jméno a moje heslo, které používám LastPass a generuji nové 

00:11:44.360 --> 00:11:49.430
 hesla jsou neustále a jsou obrovská a šílená, takže jsem zkopíroval heslo 

00:11:49.430 --> 00:11:57.500
 a pak jsem to vložil a tam to jde, je to nahrání těchto dat do mého 

00:11:57.500 --> 00:12:02.840
 úložiště a je to hotové, takže f5 se obnovuje a měli byste vidět testovací SH 

00:12:02.840 --> 00:12:09.200
 je nyní součástí mého úložiště githubů a tam to je a ukazuje to, že to je 

00:12:09.200 --> 00:12:17.330
 výkonný ahoj svět, takže teď zpátky, takže předstírejme, že jsem provedl změny 

00:12:17.330 --> 00:12:20.750
 jinde na jiném počítači a udělám to pomocí prohlížeče 

00:12:20.750 --> 00:12:29.270
 jen abych vám to ukázal, v tomto systému půjdu znovu ahoj v pořádku a pak 

00:12:29.270 --> 00:12:33.680
 Tyto změny uložím, nebudu tomu dát jméno ani něco podobného 

00:12:33.680 --> 00:12:37.340
 tento popis jen potvrdím, takže nyní vypadá scénář tak, aby viděl 

00:12:37.340 --> 00:12:41.600
 jak to můžu změnit v prohlížeči, můžete to udělat odkudkoli, takže nyní, pokud 

00:12:41.600 --> 00:12:47.510
 Dívám se na svůj soubor lokálně na mém počítači v úložišti, kde to stále máme 

00:12:47.510 --> 00:12:53.630
 jen říká, ahoj svět v pořádku, takže se chystám znovu vytáhnout, dělám to všechno 

00:12:53.630 --> 00:12:58.700
 v mé testovací složce podtržítka, takže git pull bude hledat nějaké 

00:12:58.700 --> 00:13:02.510
 změny, které byly provedeny jinde, a stáhněte je dolů do mého počítače 

00:13:02.510 --> 00:13:07.460
 Je to vždy synchronizace těchto změn, takže teď, když otevřu Nano a otevřete tento soubor 

00:13:07.460 --> 00:13:14.000
 můžete vidět, že nové hello je opět součástí toho, takže vám ukážu ozvěnu 

00:13:14.000 --> 00:13:20.270
 ahoj krát tři a já to ušetřím a teď udělám přesně to 

00:13:20.270 --> 00:13:22.400
 totéž, ale ukázat vám, jak je to teď jinak 

00:13:22.400 --> 00:13:28.490
 Už jsem zadal své jméno a svou e-mailovou adresu dostanu Ad Star - 

00:13:28.490 --> 00:13:39.410
 Jsem konečná aktualizace získat původ původu push cap 5 TV je moje uživatelské jméno a moje heslo 

00:13:39.410 --> 00:13:50.120
 je řetězec asi 64 znaků náhodně vybraných a já ho vložím 

00:13:50.120 --> 00:13:56.060
 to tam a tam jdeme, takže to je vše, co nyní tlačí moje změny 

00:13:56.060 --> 00:14:00.680
 lokálně na github serveru, takže je sdílí znovu se všemi ostatními nebo 

00:14:00.680 --> 00:14:05.510
 s mými dalšími systémy, když jsem si vytáhnout tak, že tím, že mohu dostat clomp 

00:14:05.510 --> 00:14:09.980
 promiňte mi něco klonovat a nemusí to být moje, může to být 

00:14:09.980 --> 00:14:14.690
 úložiště githubů někoho jiného, ​​dokud je veřejné, ale pak to dokážu 

00:14:14.690 --> 00:14:19.070
 změny v mém místním počítači a pak mohu udělat push nyní musíte vlastnit 

00:14:19.070 --> 00:14:24.710
 úložiště, aby bylo možné provést tlačení tak, aby někdo provedl změny 

00:14:24.710 --> 00:14:29.570
 jiným úložištěm je rozvětvení, takže když jdete do úložiště, na které kliknete 

00:14:29.570 --> 00:14:34.040
 tlačítko zvané vidlička a v podstatě si vytvoří kopii na svůj vlastní účet 

00:14:34.040 --> 00:14:37.550
 že můžete provádět změny, a pak můžete provádět žádosti o vyžádání 

00:14:37.550 --> 00:14:41.000
 ale to jsou základy, jak začít, to vám umožní 

00:14:41.000 --> 00:14:45.680
 vytvořit úložiště nahrát své soubory nahrát váš kód být schopen manipulovat 

00:14:45.680 --> 00:14:49.250
 to z jakéhokoli systému, takže si můžete vyzkoušet na Raspberry Pi na počítači se systémem Windows 

00:14:49.250 --> 00:14:54.410
 na vaší linuxové ploše na cokoli a pak posuňte všechny tyto změny až na 

00:14:54.410 --> 00:14:59.030
 server, aby je bylo možné stáhnout nebo stáhnout do všech vašich systémů 

00:14:59.030 --> 00:15:01.810
 vše je k tomu 

00:15:07.430 --> 00:15:10.480
 [Hudba] 

