WEBVTT
Kind: captions
Language: da

00:00:01.520 --> 00:00:07.200
 nu, hvis du aldrig har sluttet os til en kaffepaus i kategori 5, vil du 

00:00:07.200 --> 00:00:11.490
 Find ud af mere om det på kategori-fem-punkts-tv bare rul ned på hjemmesiden 

00:00:11.490 --> 00:00:15.570
 og du vil se lokalt kaffepause der sammen med vores tidsplan hvornår 

00:00:15.570 --> 00:00:19.920
 vi skal gøre det næste, det er en ugentlig begivenhed, som vi holder på zoom ' 

00:00:19.920 --> 00:00:23.430
 og det er en mulighed for vores samfund at mødes og lige 

00:00:23.430 --> 00:00:29.189
 selvom vi alle oplever, hvad vi oplever i vores verden i dag, har vi 

00:00:29.189 --> 00:00:35.370
 taget den tilgang til at sige snarere end at tale om disse ting tingene 

00:00:35.370 --> 00:00:40.260
 der bringer os ned lige nu lad os se på det og sige se, vi er alle sammen 

00:00:40.260 --> 00:00:47.039
 fast i denne situation, hvad er det, hvad jeg gør, der har fået mig ophidset 

00:00:47.039 --> 00:00:52.010
 hvad er det, jeg eksperimenterer med teknologisk, det er virkelig 

00:00:52.010 --> 00:00:56.489
 interessant for mig og hjælper mig med at besætte tid, uanset om jeg sidder hjemme 

00:00:56.489 --> 00:01:03.989
 lige nu eller uanset hvad tilfældet er, så emnet kom op om github, fordi 

00:01:03.989 --> 00:01:10.380
 vi taler om programmering, og Peter er der næsten hver gang for en 

00:01:10.380 --> 00:01:14.580
 fælles kaffepause, og Peter spurgte godt, hvordan bruger du github godt 

00:01:14.580 --> 00:01:18.750
 ikke rigtig de det, vi kan vise eller tale, du ved, leder dig 

00:01:18.750 --> 00:01:22.799
 igennem på kaffepausen, men det kom op, at hej godt, det ville være virkelig 

00:01:22.799 --> 00:01:27.330
 godt emne at diskutere på kategori fem teknologi-tv og grunden til at det 

00:01:27.330 --> 00:01:34.350
 oprindeligt kom op, fordi da Microsoft købte github, beholdte de det 

00:01:34.350 --> 00:01:39.570
 går slags status quo som det var, og du var nødt til at betale for visse funktioner, men 

00:01:39.570 --> 00:01:48.240
 så pludselig for nylig sagde Microsoft og alle dem betalte for funktioner ikke 

00:01:48.240 --> 00:01:51.899
 alle dem, men en masse af dem betalte for funktioner, som du plejede at betale 

00:01:51.899 --> 00:01:55.500
 for er nu gratis, så de tager tjenesten og er dybest set 

00:01:55.500 --> 00:02:00.659
 giver deres premium service helt gratis på github com, så hvad er der? 

00:02:00.659 --> 00:02:06.600
 github godt github er lidt som en cloud-tjenesteudbyder for endnu er det til 

00:02:06.600 --> 00:02:10.800
 udviklere det hjælper os med at være i stand til at styre vores projekter, så du kan gå 

00:02:10.800 --> 00:02:15.050
 tilbage i tiden dybest set med kode, og det er virkelig nyttigt at kunne 

00:02:15.050 --> 00:02:20.540
 se disse forpligtelser og se, hvordan ændringer har påvirket dit projekt, det er også en 

00:02:20.540 --> 00:02:26.330
 god lagringsmekanisme til din kode, fordi du er i stand til at dele den med 

00:02:26.330 --> 00:02:30.350
 andre mennesker, hvis du ønsker nu selvfølgelig at Microsoft gør det gratis 

00:02:30.350 --> 00:02:37.640
 du kan nu også have gratis private opbevaringssteder, og du kan konfigurere 

00:02:37.640 --> 00:02:41.300
 så mange hold, som du vil, hvis du vil samarbejde med andre programmerere, men 

00:02:41.300 --> 00:02:45.920
 det, hvad det gør for mig, er, at det giver mig mulighed for at dele min kode online i 

00:02:45.920 --> 00:02:49.459
 på en sådan måde, at andre mennesker kan bruge den open source, de kan kompilere den eller bruge 

00:02:49.459 --> 00:02:55.459
 det eller køre det på deres egne computere, og hvis de beslutter sig godt, vil jeg hellere 

00:02:55.459 --> 00:02:59.510
 det fungerer på denne måde eller måske her er en fejl, og jeg kan ordne, at de kan gøre hvad 

00:02:59.510 --> 00:03:05.390
 kaldte en pull-anmodning, så dybest set klonede jeg mit github-arkiv min software 

00:03:05.390 --> 00:03:10.730
 kode de fikserer det på deres computer og derefter laver de en pull-anmodning, der skubber 

00:03:10.730 --> 00:03:16.100
 det tilbage, mens de skubber det tilbage til deres gaffel, og så skaber det en pull-anmodning 

00:03:16.100 --> 00:03:21.709
 for mig, så jeg ser, at hej Joe vil sprænge over deres rette denne fejl med min 

00:03:21.709 --> 00:03:26.720
 software Jeg kan klikke på en knap, og den importerer den rettelse til min software så 

00:03:26.720 --> 00:03:33.890
 der er en hel masse ved det, og det er virkelig meget magtfuldt det kan være 

00:03:33.890 --> 00:03:37.519
 forvirrende især når du kommer i at klæbe sammen og slå dem sammen 

00:03:37.519 --> 00:03:41.390
 slags ting, som vi ikke kommer ind på i dag, men hvad jeg gerne vil 

00:03:41.390 --> 00:03:47.150
 viser dig, hvordan den mest basale viden om, hvordan det fungerer, går til 

00:03:47.150 --> 00:03:53.720
 giver dig mulighed for at bruge github på en effektiv måde, så tænk på det som det, hvor du er 

00:03:53.720 --> 00:03:58.519
 at placere din kode derude som open source-software og behøver ikke være det 

00:03:58.519 --> 00:04:03.470
 du kan have det privat, hvis du vil, men i mit tilfælde er det, hvad jeg laver, jeg ønsker 

00:04:03.470 --> 00:04:07.130
 folk til at samarbejde med mig lejlighedsvis måske vil de sende problemer 

00:04:07.130 --> 00:04:10.430
 hvis de finder en fejl, og så er jeg stadig den person, der skal ordne det, men kl 

00:04:10.430 --> 00:04:15.590
 mindst kommer mit samfund ind i mit softwarelager og siger, at dette er en 

00:04:15.590 --> 00:04:21.769
 problem, og du er nødt til at ordne det i orden, så github-roen er, hvor du går, er tegn 

00:04:21.769 --> 00:04:26.360
 op til din gratis konto, alt hvad du skal gøre er at klikke på linket og klikke på 

00:04:26.360 --> 00:04:30.080
 Tilmeld dig nu Jeg har allerede en konto, så jeg logger ind som mig selv 

00:04:30.080 --> 00:04:37.789
 og log ind, så du kan se her, at hvis jeg går til mine lagre, så hvis jeg hopper 

00:04:37.789 --> 00:04:47.569
 hjemme her og gå for at lade det indlæse her lad det indlæse okay Jeg skal bare gå 

00:04:47.569 --> 00:04:56.000
 direkte til kat 5-tv er det sted, hvor jeg er vært for al min software, så du går der 

00:04:56.000 --> 00:04:58.909
 github.com slash cat 5 TV, og du kan se, hvordan dette fungerer 

00:04:58.909 --> 00:05:02.779
 så du kan se, at jeg har et væld af softwarelager, og de er alle 

00:05:02.779 --> 00:05:07.099
 forskellige projekter alle forskellige ting, som jeg har gjort, eller som jeg fortsætter 

00:05:07.099 --> 00:05:12.889
 at gøre, og der er sider og sider og sider med det, så når du først har din github 

00:05:12.889 --> 00:05:19.340
 konto kan du logge ind på det, du ser her, som er min liste over lager, men 

00:05:19.340 --> 00:05:23.090
 Når du først tilmelder dig, har du ikke alle disse ting, du har brug for at oprette 

00:05:23.090 --> 00:05:26.750
 dit første lager, så den måde, jeg vil gøre det nu på, forstår 

00:05:26.750 --> 00:05:33.289
 github er ikke påkrævet glem ok og git er ikke det samme som github github er en 

00:05:33.289 --> 00:05:39.919
 online service og tænk på det som skylagring glem ok, det er ikke det samme 

00:05:39.919 --> 00:05:46.400
 ting det er en online lagerplads til det open source pakkehåndteringsværktøj eller en 

00:05:46.400 --> 00:05:50.960
 projektstyringsværktøj, så her på github har de gjort det virkelig virkelig 

00:05:50.960 --> 00:05:55.400
 let at blot sige nyt depot, så jeg er gået til mine depoter og jeg har 

00:05:55.400 --> 00:05:59.360
 klikket på nyt, og så vil jeg give det et navn, jeg kalder dette 

00:05:59.360 --> 00:06:07.419
 en min understregningstest og en valgfri beskrivelse dette er en test til showet 

00:06:07.419 --> 00:06:12.800
 om du vil have det til at være offentligt eller privat og derefter initialisere det med en 

00:06:12.800 --> 00:06:17.029
 readme det er altid bedst at gøre det, det er det gør det, så folk kan få adgang til det 

00:06:17.029 --> 00:06:20.839
 med det samme med dig selv, du vil tilføje en licens, vil du tilføje en 

00:06:20.839 --> 00:06:24.740
 git ignorere Jeg overlader begge disse tomme, du vil opdage, hvad det betyder i 

00:06:24.740 --> 00:06:30.680
 fremtiden og opret dit lager, så nu har jeg en kaldet min understregningstest 

00:06:30.680 --> 00:06:34.459
 men der er intet der, og jeg er færdig med browseren, så nu skal jeg gå 

00:06:34.459 --> 00:06:39.830
 at gøre, er, at jeg vil rejse min terminal og i min terminal, jeg skal 

00:06:39.830 --> 00:06:43.320
 type bliver okay, så du kan se, at jeg har gjort det 

00:06:43.320 --> 00:06:48.330
 allerede installeret det, hvis du ikke har fået installeret, så jeg er på Linux, jeg er på 

00:06:48.330 --> 00:06:53.460
 Debian Linux her kan du skrive apt install git, det er det, du skal til 

00:06:53.460 --> 00:07:05.640
 type Jeg er ikke uhøflig sudo su logget ind er rock ok apt installering alligevel fortæller det 

00:07:05.640 --> 00:07:09.660
 mig at jeg allerede har den nuværende åh der er et nej nej, jeg har allerede fået det 

00:07:09.660 --> 00:07:13.500
 der er dog andre opdateringer til mig, men get er allerede den nyeste version 

00:07:13.500 --> 00:07:17.430
 Hvis du ikke har det, skal du installere det, hvis du er på et RPM-baseret 

00:07:17.430 --> 00:07:22.980
 system det vil være yum install git, og du kan også finde det i din GUI 

00:07:22.980 --> 00:07:28.740
 repository manager din pakkeadministrator eller hvad du end kan bruge som synaptisk 

00:07:28.740 --> 00:07:33.750
 pakkehåndtering for eksempel, så når du først har installeret, lav en mappe 

00:07:33.750 --> 00:07:41.100
 sandsynligvis i din hjemmemappe, og vi vil kalde disse depoter bare, så jeg 

00:07:41.100 --> 00:07:46.290
 har et sted, hvor jeg altid ved, at min kode er rigtig, så dette bliver en 

00:07:46.290 --> 00:07:52.650
 lokal kopi af mit git-lager, så nu skal jeg skrive git-klon, og det er vi 

00:07:52.650 --> 00:08:00.210
 kopierer denne URL github.com slash cat 5 TV slash min underscore test så jeg kan 

00:08:00.210 --> 00:08:08.010
 kopier, at bare med ctrl C vil du vænne dig til bare at skrive det, det er dit 

00:08:08.010 --> 00:08:13.560
 brugernavn skærer dit arkiv, og nu, så hvis jeg ser på mit filsystem, så er det 

00:08:13.560 --> 00:08:20.760
 klonet, få klon, og derefter navnet på depotens eller URL-adressen, så nu 

00:08:20.760 --> 00:08:25.920
 hvis jeg går til min hjemmemappe og derefter i depoter, skal du bemærke, at det ejes af root 

00:08:25.920 --> 00:08:31.740
 fordi jeg ser superbrugerdude til at sagsøge, så nu er der en mappe kaldet min test og 

00:08:31.740 --> 00:08:38.250
 inden for min test er der en fil kaldet readme MD, så inden for denne mappe, så jeg er 

00:08:38.250 --> 00:08:43.250
 vil gå ind i min test, og jeg vil oprette en ny fil, jeg kalder dette 

00:08:43.250 --> 00:08:50.970
 nano test dot SH, og vi opretter en hurtig SH-fil til at køre et bash script og 

00:08:50.970 --> 00:08:55.640
 Jeg vil skrive ekko hej der hvordan er det åh jeg burde virkelig 

00:08:55.640 --> 00:09:00.970
 holde sig til normen hej verden hvordan er det okay 

00:09:00.970 --> 00:09:05.690
 så jeg har skrevet det ud, og jeg har lukket det, så nu kan du se, at der kaldes en fil 

00:09:05.690 --> 00:09:13.910
 test dot s H nu, når jeg overfører en fil op til github, hvor tilladelserne er 

00:09:13.910 --> 00:09:18.500
 vil blive inkluderet i det skub, så hvis jeg prikker skråstregt prik, er du det 

00:09:18.500 --> 00:09:23.360
 bemærker det siger tilladelse nægtet jeg har brug for at gøre det til udøvende direktør alle chmod 

00:09:23.360 --> 00:09:30.680
 plus x test dot s H så nu hvis jeg skriver test dot s HS s hej verden så jeg nu 

00:09:30.680 --> 00:09:35.510
 har mit allerførste script script klar til at gå op til github, det er en del af min 

00:09:35.510 --> 00:09:41.870
 depot på min lokale computer, men den er endnu ikke i github, så hvis du ser på 

00:09:41.870 --> 00:09:45.500
 github Jeg vil opdatere bare for at bevise, at du ser din filliste her og 

00:09:45.500 --> 00:09:50.390
 der er stadig bare readme ok, så nu tilbage i mit terminalvindue skal jeg 

00:09:50.390 --> 00:09:56.330
 igen bruge den git-kommando. Jeg skal gå og tilføje stjerne inden for depoterne 

00:09:56.330 --> 00:10:01.270
 mappe der siger find alle filer der har ændringer og tilføj dem ok get 

00:10:01.270 --> 00:10:09.680
 engagere - er der, og angiv derefter dine tilbud i citater, så jeg siger det 

00:10:09.680 --> 00:10:14.480
 mit første script og disse er bare korte små beskrivelser og hit enter og 

00:10:14.480 --> 00:10:19.220
 nu siger det hej, du har brug for at fortælle os, hvem du er, fordi du aldrig har nogensinde 

00:10:19.220 --> 00:10:24.380
 kør git på denne computer før, så du skal køre disse to kommandoer smukt 

00:10:24.380 --> 00:10:29.030
 ligetil få konfigurering - - global skal du kun 

00:10:29.030 --> 00:10:33.350
 gør dette en gang skal du ikke bekymre dig om brugerprikken e-mail, og hvis du har problemer med at skrive det bare 

00:10:33.350 --> 00:10:39.980
 kopier det ok, og derefter i citater vil jeg sætte Robby i kategori 5 tv, og det er det 

00:10:39.980 --> 00:10:48.890
 bare fortælle det min e-mail-adresse, så får jeg brugerprikkenavn, som jeg ikke kender 

00:10:48.890 --> 00:10:52.550
 hvis du kan høre det, men det er faktisk en virkelig dårlig storm uden for vores studie 

00:10:52.550 --> 00:10:56.720
 i dag så lysene flimrer et par gange, men jeg tror, ​​vi får det 

00:10:56.720 --> 00:11:02.090
 igennem det alligevel, så okay kan slette det og ændre mit navn til Robby 

00:11:02.090 --> 00:11:06.710
 Ferguson indtastes ok gjort, så jeg skal kun gøre det en gang, så nu scene 

00:11:06.710 --> 00:11:11.420
 næste gang jeg kører det git commit - er det bare at tilføje det okay 

00:11:11.420 --> 00:11:15.050
 så jeg har tilføjet den, og den ser, at en fil er ændret, der er to 

00:11:15.050 --> 00:11:20.270
 indsættelser og test af SH er nyt, så det vil skabe det, så nu er finalen 

00:11:20.270 --> 00:11:26.450
 kommando, som jeg skal indtaste, er at få push-oprindelse, og jeg vil specificere 

00:11:26.450 --> 00:11:32.360
 master, som er grenmesteren, så oprindelsesmesteren, og nu går den til 

00:11:32.360 --> 00:11:35.720
 bede mig om mit brugernavn og adgangskode, som jeg indtastede, da jeg oprettede mit 

00:11:35.720 --> 00:11:44.360
 konto, så cat5 TV er mit brugernavn og mit kodeord, jeg bruger LastPass og genererer nyt 

00:11:44.360 --> 00:11:49.430
 adgangskoder hele tiden, og de er massive og skøre, så jeg kopierede en adgangskode 

00:11:49.430 --> 00:11:57.500
 og så indsatte jeg det og der går det, når det uploades disse data til min 

00:11:57.500 --> 00:12:02.840
 depot, og det er gjort så f5 skal opdateres, og du skal se testen SH 

00:12:02.840 --> 00:12:09.200
 er nu en del af mit github-lager, og der er det, og det viser det, at det er 

00:12:09.200 --> 00:12:17.330
 udøvende hej verden så nu tilbage her, så lad os bare lade som om jeg har foretaget ændringer 

00:12:17.330 --> 00:12:20.750
 andre steder, så på en anden computer, og jeg vil gøre dette gennem browseren 

00:12:20.750 --> 00:12:29.270
 bare for at vise dig, så på dette system kommer jeg til at gentage hej igen okay og derefter 

00:12:29.270 --> 00:12:33.680
 Jeg gemmer disse ændringer Jeg giver ikke det et navn eller noget lignende 

00:12:33.680 --> 00:12:37.340
 den beskrivelse Jeg vil bare bekræfte, så nu ser scriptet sådan ud, så se 

00:12:37.340 --> 00:12:41.600
 hvordan jeg ændrer det i browseren så godt du kan gøre dette hvor som helst, så nu hvis 

00:12:41.600 --> 00:12:47.510
 Jeg ser på min fil lokalt på min computer i depotet, hvor vi fortsætter 

00:12:47.510 --> 00:12:53.630
 siger bare hej verden okay, så jeg får fat igen, jeg gør det hele 

00:12:53.630 --> 00:12:58.700
 inden for min understregnings testmappe, så git pull vil derefter se efter nogen 

00:12:58.700 --> 00:13:02.510
 ændringer, der er foretaget andre steder, og træk dem ned til min computer så 

00:13:02.510 --> 00:13:07.460
 det synkroniseres altid disse ændringer, så nu, hvis jeg åbner Nano og åbner den fil 

00:13:07.460 --> 00:13:14.000
 Du kan se, at nyt hej igen er en del af det, så jeg viser dig ekko 

00:13:14.000 --> 00:13:20.270
 hej gange tre, og det skal jeg redde, og nu skal jeg gøre det nøjagtige 

00:13:20.270 --> 00:13:22.400
 samme ting, men viser dig, hvordan det er anderledes nu 

00:13:22.400 --> 00:13:28.490
 Jeg har allerede indtastet mit navn, og min e-mail-adresse får Ad Star get commit - 

00:13:28.490 --> 00:13:39.410
 am endelig opdatering få push origin master cap 5 TV er mit brugernavn og min adgangskode 

00:13:39.410 --> 00:13:50.120
 er en streng på cirka 64 tegn valgt tilfældigt, og jeg vil indsætte 

00:13:50.120 --> 00:13:56.060
 at ind og der går vi, så det er alt, hvad der er at nu skubbe mine ændringer 

00:13:56.060 --> 00:14:00.680
 lokalt til github-serveren, så den deler den igen med alle andre eller 

00:14:00.680 --> 00:14:05.510
 med mine andre systemer, når jeg gør et get pull, så ved at gøre, at jeg kan få clomp 

00:14:05.510 --> 00:14:09.980
 undskyld mig for at klone noget, og det behøver ikke at være min, det kan være 

00:14:09.980 --> 00:14:14.690
 en andens github-lager, så længe det er offentligt, men så kan jeg lave det 

00:14:14.690 --> 00:14:19.070
 ændrer det på min lokale maskine, og så kan jeg trykke nu, du skal eje 

00:14:19.070 --> 00:14:24.710
 depotet for at gøre et skub, så måden at foretage ændringer på nogen 

00:14:24.710 --> 00:14:29.570
 andres depot er at gaffel det, så når du går til depot, klikker du på 

00:14:29.570 --> 00:14:34.040
 knappen kaldes gaffel, og den opretter dybest set en kopi af den på din egen konto 

00:14:34.040 --> 00:14:37.550
 som du kan foretage ændringer til, og det er her du kan gøre anmodninger om træk 

00:14:37.550 --> 00:14:41.000
 men det er det grundlæggende for at komme i gang, det giver dig mulighed for det 

00:14:41.000 --> 00:14:45.680
 oprette deponier upload dine filer upload din kode være i stand til at manipulere 

00:14:45.680 --> 00:14:49.250
 det fra ethvert system, så du kan teste det på en Raspberry Pi på din Windows-maskine 

00:14:49.250 --> 00:14:54.410
 på dit Linux-skrivebord på hvad som helst og skub derefter alle disse ændringer op til 

00:14:54.410 --> 00:14:59.030
 server, så de kan downloades eller trækkes til alle dine systemer, så det er 

00:14:59.030 --> 00:15:01.810
 alt hvad der er til det 

00:15:07.430 --> 00:15:10.480
 [Musik] 

