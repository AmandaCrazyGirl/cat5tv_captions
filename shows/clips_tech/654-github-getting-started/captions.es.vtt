WEBVTT
Kind: captions
Language: es

00:00:01.520 --> 00:00:07.200
 ahora si nunca te uniste a nosotros para una pausa café comunitaria de categoría 5 

00:00:07.200 --> 00:00:11.490
 Obtenga más información al respecto en la televisión de cinco puntos de categoría. 

00:00:11.490 --> 00:00:15.570
 y verá el descanso para tomar café de la comunidad allí junto con nuestro horario cuando 

00:00:15.570 --> 00:00:19.920
 vamos a hacer el próximo, es un evento semanal que mantenemos en zoom ' 

00:00:19.920 --> 00:00:23.430
 y es una oportunidad para que nuestra comunidad se una e incluso 

00:00:23.430 --> 00:00:29.189
 aunque todos estamos experimentando lo que estamos experimentando en nuestro mundo hoy hemos 

00:00:29.189 --> 00:00:35.370
 adoptado el enfoque de decir en lugar de hablar de esas cosas las cosas 

00:00:35.370 --> 00:00:40.260
 que nos están deprimiendo en este momento echemos un vistazo y digamos mira que todos estamos 

00:00:40.260 --> 00:00:47.039
 atrapado en esta situación, qué es lo que estoy haciendo que me emociona 

00:00:47.039 --> 00:00:52.010
 ¿Qué es lo que estoy experimentando tecnológicamente que es realmente 

00:00:52.010 --> 00:00:56.489
 interesante para mí y ayudándome a ocupar tiempo si estoy atrapado en casa 

00:00:56.489 --> 00:01:03.989
 en este momento o en cualquier caso, el tema surgió sobre github porque 

00:01:03.989 --> 00:01:10.380
 estamos hablando de programación y Peter está allí casi siempre por un 

00:01:10.380 --> 00:01:14.580
 descanso para tomar café en la comunidad y Peter preguntaba bien cómo se usa bien Github 

00:01:14.580 --> 00:01:18.750
 en realidad no son algo que podemos mostrar o hablar sabes caminar 

00:01:18.750 --> 00:01:22.799
 en la pausa para el café, pero resultó que bueno, eso sería realmente 

00:01:22.799 --> 00:01:27.330
 buen tema para discutir sobre la tecnología de televisión de categoría cinco y la razón por la que 

00:01:27.330 --> 00:01:34.350
 surgió inicialmente es porque cuando Microsoft compró Github lo guardaron 

00:01:34.350 --> 00:01:39.570
 yendo como un status quo como era y tuviste que pagar por ciertas características pero 

00:01:39.570 --> 00:01:48.240
 entonces, de repente, muy recientemente, Microsoft dijo y todos los que pagaron por funciones no 

00:01:48.240 --> 00:01:51.899
 todos ellos, pero muchos de ellos pagaron por características que solía tener que pagar 

00:01:51.899 --> 00:01:55.500
 ahora son gratuitos, por lo que están tomando el servicio y son básicamente 

00:01:55.500 --> 00:02:00.659
 regalando su servicio premium absolutamente gratis en github com 

00:02:00.659 --> 00:02:06.600
 github bien github es como un proveedor de servicios en la nube, pero es para 

00:02:06.600 --> 00:02:10.800
 desarrolladores nos ayuda a poder gestionar nuestros proyectos para que pueda ir 

00:02:10.800 --> 00:02:15.050
 básicamente en el tiempo con código y realmente es útil poder 

00:02:15.050 --> 00:02:20.540
 ver esas confirmaciones y ver cómo los cambios han impactado su proyecto también es un 

00:02:20.540 --> 00:02:26.330
 gran mecanismo de almacenamiento para su código porque puede compartirlo con 

00:02:26.330 --> 00:02:30.350
 otras personas si quieres ahora, por supuesto, Microsoft lo hace gratis 

00:02:30.350 --> 00:02:37.640
 ahora también puede tener repositorios privados gratuitos y puede configurar 

00:02:37.640 --> 00:02:41.300
 tantos equipos como quieras si quieres colaborar con otros programadores pero 

00:02:41.300 --> 00:02:45.920
 esencialmente lo que hace por mí es que me permite compartir mi código en línea en 

00:02:45.920 --> 00:02:49.459
 de tal manera que otras personas puedan usarlo de código abierto pueden compilarlo o usar 

00:02:49.459 --> 00:02:55.459
 o ejecutarlo en sus propias computadoras y luego, si deciden, bueno, prefiero 

00:02:55.459 --> 00:02:59.510
 funciona de esta manera o tal vez aquí hay un error y puedo solucionar que pueden hacer lo que 

00:02:59.510 --> 00:03:05.390
 llamado una solicitud de extracción, así que básicamente clonan mi repositorio de github mi software 

00:03:05.390 --> 00:03:10.730
 código lo arreglan en su computadora y luego hacen una solicitud de extracción que empuja 

00:03:10.730 --> 00:03:16.100
 lo devuelve mientras lo empujan hacia su tenedor y luego crea una solicitud de extracción 

00:03:16.100 --> 00:03:21.709
 para mí, así que veo que hey Joe va a soplar su corrección de este error con mi 

00:03:21.709 --> 00:03:26.720
 puedo hacer clic en un botón e importará esa corrección en mi software 

00:03:26.720 --> 00:03:33.890
 hay mucho y es realmente muy poderoso, puede ser 

00:03:33.890 --> 00:03:37.519
 confuso especialmente cuando entras en aplastar y fusionarlos y esos 

00:03:37.519 --> 00:03:41.390
 tipos de cosas en las que no vamos a entrar hoy, pero lo que sí quiero 

00:03:41.390 --> 00:03:47.150
 mostrarle cómo va el conocimiento más básico sobre cómo funciona 

00:03:47.150 --> 00:03:53.720
 le permite usar github de manera efectiva, piense en eso como donde está 

00:03:53.720 --> 00:03:58.519
 poner su código ahí como software de código abierto y no tiene que ser 

00:03:58.519 --> 00:04:03.470
 puedes tenerlo privado si quieres pero en mi caso eso es lo que estoy haciendo quiero 

00:04:03.470 --> 00:04:07.130
 gente para colaborar conmigo ocasionalmente tal vez publicarán problemas 

00:04:07.130 --> 00:04:10.430
 si encuentran un error y sigo siendo la persona que tiene que arreglarlo, pero en 

00:04:10.430 --> 00:04:15.590
 al menos mi comunidad está entrando en mi repositorio de software y diciendo que esto es un 

00:04:15.590 --> 00:04:21.769
 problema y necesita solucionarlo todo bien, así que github calm es donde debe ir es firmar 

00:04:21.769 --> 00:04:26.360
 para obtener su cuenta gratuita, todo lo que tiene que hacer es hacer clic en el enlace y hacer clic 

00:04:26.360 --> 00:04:30.080
 regístrate ahora ya tengo una cuenta, así que voy a iniciar sesión como yo mismo 

00:04:30.080 --> 00:04:37.789
 e inicie sesión para que pueda ver aquí que si voy a mis repositorios, así que si salto 

00:04:37.789 --> 00:04:47.569
 a casa aquí e ir a dejar que se cargue aquí, dejar que se cargue bien, solo voy a ir 

00:04:47.569 --> 00:04:56.000
 directamente a cat 5 TV es donde alojo todo mi software para que vayas allí 

00:04:56.000 --> 00:04:58.909
 github.com slash cat 5 TV y ves cómo funciona 

00:04:58.909 --> 00:05:02.779
 para que vean que tengo un montón de repositorios de software y todos son 

00:05:02.779 --> 00:05:07.099
 diferentes proyectos, todas las cosas diferentes que he hecho o que sigo 

00:05:07.099 --> 00:05:12.889
 que hacer y hay páginas y páginas y páginas, así que una vez que tenga su github 

00:05:12.889 --> 00:05:19.340
 cuenta, puede iniciar sesión en lo que ve aquí, que es mi lista de repositorios, pero 

00:05:19.340 --> 00:05:23.090
 cuando te registras por primera vez no vas a tener todo lo que necesitas para crear 

00:05:23.090 --> 00:05:26.750
 tu primer repositorio así que la forma en que voy a hacer eso ahora entiendo 

00:05:26.750 --> 00:05:33.289
 no se requiere github, olvide ok y git no es lo mismo que github github es un 

00:05:33.289 --> 00:05:39.919
 servicio en línea y piense en él como almacenamiento en la nube, olvide, ok, no es lo mismo 

00:05:39.919 --> 00:05:46.400
 Lo que es un almacenamiento en línea para esa herramienta de gestión de paquetes de código abierto o una 

00:05:46.400 --> 00:05:50.960
 herramienta de gestión de proyectos, así que aquí en Github lo han hecho realmente muy 

00:05:50.960 --> 00:05:55.400
 fácil de decir simplemente nuevo repositorio, así que he ido a mis repositorios y he 

00:05:55.400 --> 00:05:59.360
 hice clic en nuevo y luego le voy a poner un nombre. Voy a llamar a esto 

00:05:59.360 --> 00:06:07.419
 uno mi prueba de subrayado y una descripción opcional esta es una prueba para el espectáculo 

00:06:07.419 --> 00:06:12.800
 si desea que sea público o privado y luego inicializarlo con un 

00:06:12.800 --> 00:06:17.029
 léame, siempre es mejor hacerlo, es para que las personas puedan acceder a él 

00:06:17.029 --> 00:06:20.839
 de inmediato, incluyéndose a usted mismo, desea agregar una licencia, ¿desea agregar una 

00:06:20.839 --> 00:06:24.740
 Ignora, voy a dejar a los dos vacíos, descubrirás lo que eso significa en 

00:06:24.740 --> 00:06:30.680
 el futuro y cree su repositorio, así que ahora tengo uno llamado prueba de subrayado 

00:06:30.680 --> 00:06:34.459
 pero no hay nada allí y he terminado con el navegador, así que ahora lo que voy 

00:06:34.459 --> 00:06:39.830
 hacer es que voy a abrir mi terminal y en mi terminal voy a 

00:06:39.830 --> 00:06:43.320
 escriba obtener bien para que pueda ver que he 

00:06:43.320 --> 00:06:48.330
 ya lo instalé si no tienes instalado así que estoy en Linux estoy en 

00:06:48.330 --> 00:06:53.460
 Debian Linux aquí puedes escribir apt install git, eso es lo que vas a hacer 

00:06:53.460 --> 00:07:05.640
 tipo no soy grosero sudo su inicio de sesión es rock ok apto instalar aún va a decir 

00:07:05.640 --> 00:07:09.660
 yo que ya tengo la corriente oh hay un no no ya lo tengo 

00:07:09.660 --> 00:07:13.500
 aunque hay otras actualizaciones para mí, pero get ya es la versión más nueva, así que 

00:07:13.500 --> 00:07:17.430
 si no lo tiene, necesita instalarlo si está basado en un RPM 

00:07:17.430 --> 00:07:22.980
 sistema será yum install git y también lo puedes encontrar en tu GUI 

00:07:22.980 --> 00:07:28.740
 administrador de repositorios su administrador de paquetes o lo que sea que use como un sináptico 

00:07:28.740 --> 00:07:33.750
 administrador de paquetes, por ejemplo, una vez que lo haya instalado, cree una carpeta 

00:07:33.750 --> 00:07:41.100
 probablemente en su carpeta de inicio y llamaremos a estos repositorios solo para que yo 

00:07:41.100 --> 00:07:46.290
 tengo un lugar donde siempre sé que mi código es correcto, así que esto va a ser un 

00:07:46.290 --> 00:07:52.650
 copia local de mi repositorio git, así que ahora voy a escribir git clone y estamos 

00:07:52.650 --> 00:08:00.210
 voy a copiar esta URL github.com slash cat 5 TV slash mi prueba de subrayado para que pueda 

00:08:00.210 --> 00:08:08.010
 copia eso solo con Ctrl C te acostumbrarás a escribirlo, es tu 

00:08:08.010 --> 00:08:13.560
 el nombre de usuario recorta tu repositorio y ahora si miro mi sistema de archivos, entonces es 

00:08:13.560 --> 00:08:20.760
 clonado obtener clonar y luego el nombre de la URL del repositorio o ahora 

00:08:20.760 --> 00:08:25.920
 si voy a mi carpeta de inicio y luego en los repositorios noto que es propiedad de root 

00:08:25.920 --> 00:08:31.740
 porque veo a un súper usuario demandar, así que ahora hay una carpeta llamada mi prueba y 

00:08:31.740 --> 00:08:38.250
 dentro de mi prueba hay un archivo llamado readme MD, así que dentro de esta carpeta, así que estoy 

00:08:38.250 --> 00:08:43.250
 voy a entrar en mi prueba y quiero crear un nuevo archivo que voy a llamar a esto 

00:08:43.250 --> 00:08:50.970
 nano test dot SH y crearemos un archivo SH rápido para ejecutar un script bash y 

00:08:50.970 --> 00:08:55.640
 Voy a escribir echo hola, ¿cómo es eso? Oh, realmente debería 

00:08:55.640 --> 00:09:00.970
 seguir con la norma hola mundo ¿cómo está bien? 

00:09:00.970 --> 00:09:05.690
 así que lo escribí y lo cerré, así que ahora ves que hay un archivo llamado 

00:09:05.690 --> 00:09:13.910
 prueba dot s H ahora cuando transfiero un archivo a github los permisos son 

00:09:13.910 --> 00:09:18.500
 va a ser incluido con ese empuje, así que si hago prueba de barra de puntos dot s H 

00:09:18.500 --> 00:09:23.360
 observe que dice permiso denegado Necesito hacerlo ejecutivo ejecutivo todo chmod 

00:09:23.360 --> 00:09:30.680
 más x test dot s H así que ahora si escribo test dot s HS s hola mundo así que ahora 

00:09:30.680 --> 00:09:35.510
 tengo mi primer fragmento de script listo para subir a Github, es parte de mi 

00:09:35.510 --> 00:09:41.870
 repositorio en mi computadora local pero aún no está en github, así que si miras 

00:09:41.870 --> 00:09:45.500
 github voy a actualizar solo para demostrar que ves tu lista de archivos aquí y 

00:09:45.500 --> 00:09:50.390
 todavía hay solo el archivo Léame, así que ahora de vuelta en la ventana de mi terminal voy a 

00:09:50.390 --> 00:09:56.330
 de nuevo use ese comando git Voy a ir a agregar estrella dentro de los repositorios 

00:09:56.330 --> 00:10:01.270
 carpeta que dice encontrar cualquier archivo que tenga algún cambio y agregarlo ok get 

00:10:01.270 --> 00:10:09.680
 commit - soy y luego entre comillas dale un nombre a tu commit así que voy a decir 

00:10:09.680 --> 00:10:14.480
 mi primer script y estas son solo pequeñas descripciones y presiono enter y 

00:10:14.480 --> 00:10:19.220
 ahora dice oye, debes decirnos quién eres porque nunca has 

00:10:19.220 --> 00:10:24.380
 ejecute git en esta computadora antes, por lo que debe ejecutar estos dos comandos bastante 

00:10:24.380 --> 00:10:29.030
 get config sencillo - - global solo tienes que 

00:10:29.030 --> 00:10:33.350
 haz esto una vez, no te preocupes por el correo electrónico del usuario y si tienes problemas para escribir eso 

00:10:33.350 --> 00:10:39.980
 copiarlo bien y luego entre comillas voy a poner a Robby en la categoría 5 de TV y eso es 

00:10:39.980 --> 00:10:48.890
 solo diciéndole mi dirección de correo electrónico y luego voy a usar el nombre del punto del usuario No lo sé 

00:10:48.890 --> 00:10:52.550
 si puedes escuchar eso pero en realidad es una tormenta muy mala fuera de nuestro estudio 

00:10:52.550 --> 00:10:56.720
 hoy, así que las luces parpadean un par de veces y creo que vamos a tener 

00:10:56.720 --> 00:11:02.090
 de todos modos, así que está bien, borre eso y cambie mi nombre a Robby 

00:11:02.090 --> 00:11:06.710
 Ferguson entra bien, así que solo tengo que hacerlo una vez, así que ahora escena 

00:11:06.710 --> 00:11:11.420
 la próxima vez que ejecute ese git commit, solo lo estoy agregando bien 

00:11:11.420 --> 00:11:15.050
 así que lo agregué y ve que un archivo ha cambiado, hay dos 

00:11:15.050 --> 00:11:20.270
 inserciones y probar SH es nuevo, así que va a crear eso, así que ahora el final 

00:11:20.270 --> 00:11:26.450
 comando que necesito ingresar es obtener origen de inserción y voy a especificar el 

00:11:26.450 --> 00:11:32.360
 maestro, que es el maestro de rama, así que maestro de origen y ahora va a 

00:11:32.360 --> 00:11:35.720
 pedirme mi nombre de usuario y contraseña que ingresé cuando creé mi 

00:11:35.720 --> 00:11:44.360
 cuenta, así que cat5 TV es mi nombre de usuario y mi contraseña. Utilizo LastPass y genero nuevos 

00:11:44.360 --> 00:11:49.430
 contraseñas todo el tiempo y son masivas y locas, así que copié una contraseña 

00:11:49.430 --> 00:11:57.500
 y luego lo pegué y ahí está, está cargando esos datos en mi 

00:11:57.500 --> 00:12:02.840
 repositorio y está hecho para que f5 se actualice y debería ver la prueba SH 

00:12:02.840 --> 00:12:09.200
 ahora es parte de mi repositorio github y ahí está y muestra que es 

00:12:09.200 --> 00:12:17.330
 mundo ejecutivo hola así que ahora de vuelta aquí, así que vamos a fingir que he hecho cambios 

00:12:17.330 --> 00:12:20.750
 en otro lado, así que en otra computadora y voy a hacer esto a través del navegador 

00:12:20.750 --> 00:12:29.270
 solo para mostrarles que en este sistema voy a hacer eco de nuevo hola bien y luego 

00:12:29.270 --> 00:12:33.680
 Voy a guardar esos cambios. No le voy a dar un nombre ni nada parecido. 

00:12:33.680 --> 00:12:37.340
 esa descripción solo voy a confirmar así que ahora el guión se ve así 

00:12:37.340 --> 00:12:41.600
 cómo cambio eso en el navegador también puedes hacerlo desde cualquier lugar así que ahora si 

00:12:41.600 --> 00:12:47.510
 Miro mi archivo localmente en mi computadora en el repositorio, ahí lo vamos 

00:12:47.510 --> 00:12:53.630
 solo dice hola mundo está bien así que voy a ir a tirar de nuevo Estoy haciendo todo esto 

00:12:53.630 --> 00:12:58.700
 dentro de mi carpeta de prueba de subrayado, por lo que git pull va a buscar cualquier 

00:12:58.700 --> 00:13:02.510
 cambios que se han realizado en otro lugar y los llevan a mi computadora 

00:13:02.510 --> 00:13:07.460
 siempre está sincronizando esos cambios, así que ahora si abro Nano y abro ese archivo 

00:13:07.460 --> 00:13:14.000
 puedes ver que el nuevo hola de nuevo ahora es parte de eso, así que te mostraré eco 

00:13:14.000 --> 00:13:20.270
 hola tres veces y voy a guardar eso y ahora voy a hacer exactamente 

00:13:20.270 --> 00:13:22.400
 lo mismo pero te muestro cómo es diferente ahora que 

00:13:22.400 --> 00:13:28.490
 Ya ingresé mi nombre y mi dirección de correo electrónico obtuvo Ad Star get commit - 

00:13:28.490 --> 00:13:39.410
 soy la actualización final get push origin master cap 5 TV es mi nombre de usuario y mi contraseña 

00:13:39.410 --> 00:13:50.120
 es una cadena de unos 64 caracteres seleccionados al azar y voy a pegar 

00:13:50.120 --> 00:13:56.060
 que dentro y allá vamos, así que eso es todo lo que hay ahora para impulsar mis cambios 

00:13:56.060 --> 00:14:00.680
 localmente al servidor github para que lo comparta nuevamente con todos los demás o 

00:14:00.680 --> 00:14:05.510
 con mis otros sistemas cuando hago un tirón para que así pueda obtener clomp 

00:14:05.510 --> 00:14:09.980
 perdón, git, clone algo y no tiene que ser mío, puede ser 

00:14:09.980 --> 00:14:14.690
 el repositorio de Github de otra persona siempre que sea público, pero luego puedo hacer 

00:14:14.690 --> 00:14:19.070
 cambios en mi máquina local y luego puedo hacer un empujón ahora tienes que tener 

00:14:19.070 --> 00:14:24.710
 el repositorio con el fin de hacer un impulso para que la forma de hacer cambios a alguien 

00:14:24.710 --> 00:14:29.570
 el repositorio de otra persona es bifurcarlo para que cuando vaya al repositorio haga clic en 

00:14:29.570 --> 00:14:34.040
 el botón llamado fork y básicamente hace una copia en su propia cuenta 

00:14:34.040 --> 00:14:37.550
 en el que puede hacer cambios y luego es allí donde puede hacer solicitudes de extracción 

00:14:37.550 --> 00:14:41.000
 pero esos son los principios básicos para comenzar que te permitirán 

00:14:41.000 --> 00:14:45.680
 crear repositorios subir sus archivos subir su código poder manipular 

00:14:45.680 --> 00:14:49.250
 desde cualquier sistema para que pueda probarlo en una Raspberry Pi en su máquina con Windows 

00:14:49.250 --> 00:14:54.410
 en su escritorio Linux en lo que sea y luego empuje todos esos cambios hasta el 

00:14:54.410 --> 00:14:59.030
 servidor para que puedan descargarse o extraerse a todos sus sistemas, así que eso es 

00:14:59.030 --> 00:15:01.810
 todo lo que hay que hacer 

00:15:07.430 --> 00:15:10.480
 [Música] 

