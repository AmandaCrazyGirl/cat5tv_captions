WEBVTT
Kind: captions
Language: fr

00:00:01.520 --> 00:00:07.200
 maintenant, si vous ne nous avez jamais rejoint pour une pause-café communautaire de catégorie 5, vous 

00:00:07.200 --> 00:00:11.490
 en savoir plus à ce sujet à la télévision à point de catégorie cinq, faites simplement défiler la page d'accueil 

00:00:11.490 --> 00:00:15.570
 et vous verrez la pause-café communautaire là-bas avec notre calendrier lorsque 

00:00:15.570 --> 00:00:19.920
 nous allons faire le prochain c'est un événement hebdomadaire que nous maintenons sur le zoom ' 

00:00:19.920 --> 00:00:23.430
 et c'est l'occasion pour notre communauté de se rassembler et même 

00:00:23.430 --> 00:00:29.189
 si nous vivons tous ce que nous vivons dans notre monde aujourd'hui, nous avons 

00:00:29.189 --> 00:00:35.370
 pris l'approche pour dire plutôt que de parler de ces choses les choses 

00:00:35.370 --> 00:00:40.260
 qui nous amènent en ce moment, regardons-le et disons que nous sommes tous 

00:00:40.260 --> 00:00:47.039
 coincé dans cette situation quel est ce que je fais qui me passionne 

00:00:47.039 --> 00:00:52.010
 qu'est-ce que j'expérimente avec la technologie qui est vraiment 

00:00:52.010 --> 00:00:56.489
 intéressant pour moi et m'aide à occuper du temps si je suis coincé à la maison 

00:00:56.489 --> 00:01:03.989
 en ce moment ou quel que soit le cas, de sorte que le sujet est venu à propos de github parce 

00:01:03.989 --> 00:01:10.380
 nous parlons de programmation et Peter est là presque à chaque fois pour un 

00:01:10.380 --> 00:01:14.580
 pause-café communautaire et Peter demandait bien comment utilisez-vous bien github 

00:01:14.580 --> 00:01:18.750
 pas vraiment ils quelque chose que nous pouvons montrer ou parler, vous savez vous marcher 

00:01:18.750 --> 00:01:22.799
 à travers la pause-café, mais il est venu que bon, ce serait vraiment 

00:01:22.799 --> 00:01:27.330
 bon sujet à discuter sur la technologie TV de catégorie cinq et la raison pour laquelle il 

00:01:27.330 --> 00:01:34.350
 est venu d'abord parce que lorsque Microsoft a acheté github, ils l'ont gardé 

00:01:34.350 --> 00:01:39.570
 va sorte de statu quo tel qu'il était et vous avez dû payer pour certaines fonctionnalités, mais 

00:01:39.570 --> 00:01:48.240
 puis tout à coup très récemment Microsoft a dit et tous ceux payés pour des fonctionnalités non 

00:01:48.240 --> 00:01:51.899
 tous, mais beaucoup de ceux payés pour des fonctionnalités que vous deviez payer 

00:01:51.899 --> 00:01:55.500
 car ils sont maintenant gratuits donc ils prennent le service et ils sont essentiellement 

00:01:55.500 --> 00:02:00.659
 trahir leur service premium absolument gratuit à github com alors quel est 

00:02:00.659 --> 00:02:06.600
 github bien github est un peu comme un fournisseur de services cloud pour pourtant c'est pour 

00:02:06.600 --> 00:02:10.800
 développeurs, cela nous aide à être en mesure de gérer nos projets afin que vous puissiez aller 

00:02:10.800 --> 00:02:15.050
 retour dans le temps essentiellement avec du code et il est vraiment utile de pouvoir 

00:02:15.050 --> 00:02:20.540
 voir ces commits et voir comment les changements ont eu un impact sur votre projet, c'est aussi un 

00:02:20.540 --> 00:02:26.330
 excellent mécanisme de stockage pour votre code, car vous pouvez le partager avec 

00:02:26.330 --> 00:02:30.350
 d'autres personnes si vous voulez maintenant bien sûr Microsoft le rendant gratuit 

00:02:30.350 --> 00:02:37.640
 vous pouvez désormais également disposer de référentiels privés gratuits et vous pouvez configurer 

00:02:37.640 --> 00:02:41.300
 autant d'équipes que vous le souhaitez si vous souhaitez collaborer avec d'autres programmeurs mais 

00:02:41.300 --> 00:02:45.920
 essentiellement ce qu'il fait pour moi, c'est qu'il me permet de partager mon code en ligne dans 

00:02:45.920 --> 00:02:49.459
 de telle sorte que d'autres personnes peuvent l'utiliser open source, ils peuvent le compiler ou utiliser 

00:02:49.459 --> 00:02:55.459
 ou l'exécuter sur leurs propres ordinateurs, puis s'ils décident eh bien je préfère 

00:02:55.459 --> 00:02:59.510
 cela fonctionne de cette façon ou peut-être voici un bug et je peux corriger qu'ils peuvent faire ce qui est 

00:02:59.510 --> 00:03:05.390
 appelé une demande de pull donc en gros, ils clonent mon référentiel github mon logiciel 

00:03:05.390 --> 00:03:10.730
 code, ils le fixent sur leur ordinateur, puis ils font une demande de traction qui pousse 

00:03:10.730 --> 00:03:16.100
 le retour pendant qu'ils le repoussent à leur fourche, puis il crée une demande de traction 

00:03:16.100 --> 00:03:21.709
 pour moi afin que je vois que hey Joe va souffler sur leur correction de ce bug avec mon 

00:03:21.709 --> 00:03:26.720
 logiciel, je peux cliquer sur un bouton et il importera ce correctif dans mon logiciel afin 

00:03:26.720 --> 00:03:33.890
 il y a beaucoup à faire et c'est vraiment très puissant, il peut être 

00:03:33.890 --> 00:03:37.519
 déroutant surtout quand vous vous écrasez et les fusionnez et ceux 

00:03:37.519 --> 00:03:41.390
 sortes de choses que nous n'allons pas entrer aujourd'hui, mais ce que je veux 

00:03:41.390 --> 00:03:47.150
 vous montrer comment les connaissances les plus élémentaires sur le fonctionnement 

00:03:47.150 --> 00:03:53.720
 vous permettre d'utiliser github de manière efficace, pensez-y comme celui où vous êtes 

00:03:53.720 --> 00:03:58.519
 mettre votre code là-bas en tant que logiciel open source et ne doit pas être 

00:03:58.519 --> 00:04:03.470
 vous pouvez l'avoir privé si vous voulez, mais dans mon cas, c'est ce que je fais, je veux 

00:04:03.470 --> 00:04:07.130
 les gens à collaborer avec moi de temps en temps peut-être qu'ils publieront des problèmes 

00:04:07.130 --> 00:04:10.430
 s'ils trouvent un bug et je suis toujours la personne qui doit le réparer, mais à 

00:04:10.430 --> 00:04:15.590
 moins ma communauté vient dans mon référentiel de logiciels et dire que c'est un 

00:04:15.590 --> 00:04:21.769
 problème et vous devez le réparer bien donc le calme github est où vous allez est signe 

00:04:21.769 --> 00:04:26.360
 pour votre compte gratuit tout ce que vous avez à faire est de cliquer sur le lien et cliquez sur 

00:04:26.360 --> 00:04:30.080
 inscrivez-vous maintenant, j'ai déjà un compte, donc je vais me connecter en tant que moi-même 

00:04:30.080 --> 00:04:37.789
 et connectez-vous pour que vous puissiez voir ici que si je vais dans mes dépôts, donc si je saute 

00:04:37.789 --> 00:04:47.569
 la maison ici et aller le laisser charger ici laissez-le charger bien, je vais juste aller 

00:04:47.569 --> 00:04:56.000
 directement au chat 5 TV est l'endroit où j'héberge tous mes mes logiciels afin que vous y alliez 

00:04:56.000 --> 00:04:58.909
 github.com slash cat 5 TV et vous voyez comment cela fonctionne 

00:04:58.909 --> 00:05:02.779
 de sorte que vous pouvez voir que j'ai une tonne de dépôts de logiciels et ils sont tous 

00:05:02.779 --> 00:05:07.099
 différents projets toutes les choses différentes que j'ai faites ou que je continue 

00:05:07.099 --> 00:05:12.889
 à faire et il y a des pages et des pages et des pages de celui-ci donc une fois que vous avez votre github 

00:05:12.889 --> 00:05:19.340
 compte, vous pouvez vous connecter à ce que vous voyez ici, qui est ma liste de référentiels, mais 

00:05:19.340 --> 00:05:23.090
 lorsque vous vous inscrivez pour la première fois, vous n'aurez pas tout cela, vous devez créer 

00:05:23.090 --> 00:05:26.750
 votre premier référentiel de sorte que la façon dont je vais le faire maintenant comprendre 

00:05:26.750 --> 00:05:33.289
 github n'est pas nécessaire, oubliez ok et git n'est pas le même que github github est un 

00:05:33.289 --> 00:05:39.919
 service en ligne et pensez-y comme stockage en nuage oubliez ok ce n'est pas la même chose 

00:05:39.919 --> 00:05:46.400
 chose, il est un stockage en ligne pour cet outil de gestion de package open-source ou un 

00:05:46.400 --> 00:05:50.960
 outil de gestion de projet alors ici sur github, ils ont vraiment fait vraiment 

00:05:50.960 --> 00:05:55.400
 facile à dire simplement nouveau référentiel donc je suis allé à mes référentiels et j'ai 

00:05:55.400 --> 00:05:59.360
 cliqué sur nouveau, puis je vais lui donner un nom que je vais appeler cela 

00:05:59.360 --> 00:06:07.419
 un mon test de soulignement et une description facultative ceci est un test pour le spectacle 

00:06:07.419 --> 00:06:12.800
 si vous voulez qu'il soit public ou privé, puis l'initialiser avec un 

00:06:12.800 --> 00:06:17.029
 Lisez-moi, il est toujours préférable de le faire, c'est pour que les gens puissent y accéder 

00:06:17.029 --> 00:06:20.839
 tout de suite vous y compris, vous voulez ajouter une licence voulez-vous ajouter un 

00:06:20.839 --> 00:06:24.740
 git ignorer je vais laisser les deux vides, vous découvrirez ce que cela signifie dans 

00:06:24.740 --> 00:06:30.680
 l'avenir et créer votre référentiel alors maintenant j'en ai un appelé mon test de soulignement 

00:06:30.680 --> 00:06:34.459
 mais il n'y a rien là-bas et j'ai terminé avec le navigateur alors maintenant ce que je vais 

00:06:34.459 --> 00:06:39.830
 à faire est que je vais faire apparaître mon terminal et dans mon terminal, je vais 

00:06:39.830 --> 00:06:43.320
 tapez bien pour que vous puissiez voir que j'ai 

00:06:43.320 --> 00:06:48.330
 déjà installé si vous ne l'avez pas installé, donc je suis sous Linux, je suis 

00:06:48.330 --> 00:06:53.460
 Debian Linux ici, vous pouvez taper apt install git c'est ce que vous allez 

00:06:53.460 --> 00:07:05.640
 tapez je ne suis pas impoli sudo su connecté est rock ok apt installer mais ça va dire 

00:07:05.640 --> 00:07:09.660
 moi que j'ai déjà le courant oh il y a un non non je l'ai déjà 

00:07:09.660 --> 00:07:13.500
 il y a d'autres mises à jour pour moi mais get est déjà la dernière version donc 

00:07:13.500 --> 00:07:17.430
 si vous ne l'avez pas, vous devez l'installer si vous utilisez un RPM 

00:07:17.430 --> 00:07:22.980
 système, il sera yum installer git et vous pouvez également le trouver dans votre interface graphique 

00:07:22.980 --> 00:07:28.740
 gestionnaire de référentiel votre gestionnaire de paquets ou tout ce que vous utilisez comme un synaptique 

00:07:28.740 --> 00:07:33.750
 gestionnaire de paquets par exemple donc une fois que vous avez installé faites un dossier 

00:07:33.750 --> 00:07:41.100
 probablement dans votre dossier d'accueil et nous appellerons ces référentiels juste pour que je 

00:07:41.100 --> 00:07:46.290
 avoir un endroit où je sais toujours que mon code est juste donc ça va être un 

00:07:46.290 --> 00:07:52.650
 copie locale de mon référentiel git alors maintenant je vais taper git clone et nous sommes 

00:07:52.650 --> 00:08:00.210
 va copier cette URL github.com slash cat 5 TV slash mon test de soulignement pour que je puisse 

00:08:00.210 --> 00:08:08.010
 copiez cela juste avec ctrl C vous allez vous habituer à le taper c'est votre 

00:08:08.010 --> 00:08:13.560
 nom d'utilisateur slash votre référentiel et maintenant, donc si je regarde mon système de fichiers il est donc 

00:08:13.560 --> 00:08:20.760
 cloné obtenir clone puis le nom du ou l'URL du référentiel maintenant 

00:08:20.760 --> 00:08:25.920
 si je vais dans mon dossier d'accueil, puis dans les référentiels, remarquez qu'il appartient à root 

00:08:25.920 --> 00:08:31.740
 parce que je vois un mec super utilisateur pour poursuivre alors maintenant il y a un dossier appelé mon test et 

00:08:31.740 --> 00:08:38.250
 dans mon test, il y a un fichier appelé readme MD donc dans ce dossier, donc je suis 

00:08:38.250 --> 00:08:43.250
 vais aller dans mon test et je veux créer un nouveau fichier, je vais appeler cela 

00:08:43.250 --> 00:08:50.970
 nano test dot SH et nous allons créer un fichier SH rapide pour exécuter un script bash et 

00:08:50.970 --> 00:08:55.640
 Je vais taper écho salut là comment ça oh je devrais vraiment 

00:08:55.640 --> 00:09:00.970
 coller avec la norme bonjour le monde comment ça va 

00:09:00.970 --> 00:09:05.690
 donc je l'ai écrit et je l'ai fermé maintenant vous voyez qu'il y a un fichier appelé 

00:09:05.690 --> 00:09:13.910
 tester le point s H maintenant quand je transfère un fichier vers github les autorisations sont 

00:09:13.910 --> 00:09:18.500
 va être inclus avec cette poussée, donc si je fais dot slash test dot s H vous 

00:09:18.500 --> 00:09:23.360
 remarquez qu'il dit l'autorisation refusée, je dois le faire exécutif exécutif tout chmod 

00:09:23.360 --> 00:09:30.680
 plus x test dot s s H maintenant si je tape test dot s HS s bonjour monde donc je maintenant 

00:09:30.680 --> 00:09:35.510
 avoir mon tout premier morceau de script prêt à monter sur github ça fait partie de mon 

00:09:35.510 --> 00:09:41.870
 référentiel sur mon ordinateur local, mais il n'est pas encore dans github, donc si vous regardez 

00:09:41.870 --> 00:09:45.500
 github je vais rafraîchir juste pour le prouver, vous voyez votre liste de fichiers ici et 

00:09:45.500 --> 00:09:50.390
 il y a toujours juste le readme ok alors maintenant de retour dans ma fenêtre de terminal, je vais 

00:09:50.390 --> 00:09:56.330
 utiliser à nouveau cette commande git, je vais aller ajouter une étoile dans les référentiels 

00:09:56.330 --> 00:10:01.270
 dossier qui dit trouver tous les fichiers qui ont des changements et les ajouter ok obtenir 

00:10:01.270 --> 00:10:09.680
 commit - suis et puis entre guillemets donnez un nom à votre commit donc je vais dire 

00:10:09.680 --> 00:10:14.480
 mon premier script et ce ne sont que de courtes petites descriptions et appuyez sur Entrée et 

00:10:14.480 --> 00:10:19.220
 maintenant ça veut dire que vous devez nous dire qui vous êtes parce que vous n'avez jamais 

00:10:19.220 --> 00:10:24.380
 exécutez git sur cet ordinateur avant, vous devez donc exécuter ces deux commandes assez 

00:10:24.380 --> 00:10:29.030
 obtenir une configuration simple - - global, vous n'avez qu'à 

00:10:29.030 --> 00:10:33.350
 ne le faites pas une fois, ne vous inquiétez pas des e-mails utilisateur et si vous avez du mal à taper cela juste 

00:10:33.350 --> 00:10:39.980
 copier ok et puis entre guillemets, je vais mettre Robby à la télévision de catégorie 5 et c'est 

00:10:39.980 --> 00:10:48.890
 juste lui dire mon adresse e-mail, alors je vais aller nom de l'utilisateur, je ne sais pas 

00:10:48.890 --> 00:10:52.550
 si vous pouvez l'entendre mais c'est en fait une très mauvaise tempête en dehors de notre studio 

00:10:52.550 --> 00:10:56.720
 aujourd'hui, donc les lumières clignotent plusieurs fois et mais je pense que nous allons obtenir 

00:10:56.720 --> 00:11:02.090
 à travers elle de toute façon si bien supprimer cela et changer mon nom pour Robby 

00:11:02.090 --> 00:11:06.710
 Ferguson entre ok fait donc je n'ai qu'à le faire une fois maintenant 

00:11:06.710 --> 00:11:11.420
 la prochaine fois que j'exécute ce git commit - est-ce que je l'ajoute 

00:11:11.420 --> 00:11:15.050
 donc je l'ai ajouté et il voit qu'un fichier a changé il y a deux 

00:11:15.050 --> 00:11:20.270
 insertions et tester SH est nouveau donc ça va créer que maintenant la finale 

00:11:20.270 --> 00:11:26.450
 commande que je dois entrer est obtenir l'origine de la poussée et je vais spécifier la 

00:11:26.450 --> 00:11:32.360
 maître qui est le maître de branche donc maître d'origine et maintenant ça va 

00:11:32.360 --> 00:11:35.720
 demandez-moi mon nom d'utilisateur et mon mot de passe que j'ai entré lors de la création de mon 

00:11:35.720 --> 00:11:44.360
 compte donc cat5 TV est mon nom d'utilisateur et mon mot de passe J'utilise LastPass et génère de nouveaux 

00:11:44.360 --> 00:11:49.430
 les mots de passe tout le temps et ils sont énormes et fous alors j'ai copié un mot de passe 

00:11:49.430 --> 00:11:57.500
 puis je l'ai collé et là ça va c'est le téléchargement de ces données sur mon 

00:11:57.500 --> 00:12:02.840
 référentiel et il est fait donc f5 pour rafraîchir et vous devriez voir le test SH 

00:12:02.840 --> 00:12:09.200
 fait maintenant partie de mon référentiel github et il est là et il montre qu'il est 

00:12:09.200 --> 00:12:17.330
 bonjour exécutif monde maintenant maintenant de retour ici alors disons simplement que j'ai fait des changements 

00:12:17.330 --> 00:12:20.750
 ailleurs donc sur un autre ordinateur et je vais le faire via le navigateur 

00:12:20.750 --> 00:12:29.270
 juste pour vous montrer ainsi sur ce système, je vais aller à nouveau l'écho bonjour, puis 

00:12:29.270 --> 00:12:33.680
 Je vais enregistrer ces changements, je ne vais pas lui donner un nom ou quelque chose comme 

00:12:33.680 --> 00:12:37.340
 cette description, je vais juste confirmer maintenant le script ressemble à ça alors voyez 

00:12:37.340 --> 00:12:41.600
 comment je change cela dans le navigateur et vous pouvez le faire de n'importe où maintenant si 

00:12:41.600 --> 00:12:47.510
 Je regarde mon fichier localement sur mon ordinateur dans le référentiel là on y va encore 

00:12:47.510 --> 00:12:53.630
 dit juste bonjour le monde bien donc je vais aller tirer à nouveau, je fais tout cela 

00:12:53.630 --> 00:12:58.700
 dans le dossier de test de mon soulignement alors git pull va ensuite chercher tout 

00:12:58.700 --> 00:13:02.510
 les modifications qui ont été apportées ailleurs et les tirer vers mon ordinateur afin 

00:13:02.510 --> 00:13:07.460
 il synchronise toujours ces changements maintenant si j'ouvre Nano et ouvre ce fichier 

00:13:07.460 --> 00:13:14.000
 vous pouvez voir que ce nouveau bonjour fait à nouveau partie de cela, donc je vais vous montrer l'écho 

00:13:14.000 --> 00:13:20.270
 bonjour trois fois et je vais l'enregistrer et maintenant je vais faire exactement 

00:13:20.270 --> 00:13:22.400
 même chose, mais vous montrer comment il est différent maintenant que 

00:13:22.400 --> 00:13:28.490
 J'ai déjà entré mon nom et mon adresse e-mail pour obtenir Ad Star obtenir un engagement - 

00:13:28.490 --> 00:13:39.410
 suis la dernière mise à jour get push origin master cap 5 TV est mon nom d'utilisateur et mon mot de passe 

00:13:39.410 --> 00:13:50.120
 est une chaîne d'environ 64 caractères sélectionnés au hasard et je vais coller 

00:13:50.120 --> 00:13:56.060
 que et là nous allons donc c'est tout ce qu'il y a à pousser maintenant mes changements 

00:13:56.060 --> 00:14:00.680
 localement sur le serveur github pour le partager à nouveau avec tout le monde ou 

00:14:00.680 --> 00:14:05.510
 avec mes autres systèmes quand je fais un pull donc en faisant cela, je peux obtenir clomp 

00:14:05.510 --> 00:14:09.980
 pardonnez-moi quelque chose clone git et il ne doit pas être le mien, il peut être 

00:14:09.980 --> 00:14:14.690
 référentiel github de quelqu'un d'autre tant qu'il est public, mais je peux faire 

00:14:14.690 --> 00:14:19.070
 les changements sur ma machine locale, puis je peux faire un coup de pouce maintenant, vous devez posséder 

00:14:19.070 --> 00:14:24.710
 le référentiel afin de faire un push donc la façon d'apporter des modifications à quelqu'un 

00:14:24.710 --> 00:14:29.570
 le référentiel d'autre est de le bifurquer donc quand vous allez dans le référentiel, vous cliquez sur 

00:14:29.570 --> 00:14:34.040
 le bouton appelé fork et il en fait une copie dans votre propre compte 

00:14:34.040 --> 00:14:37.550
 que vous pouvez apporter des modifications et c'est là que vous pouvez faire des demandes de tirage 

00:14:37.550 --> 00:14:41.000
 mais ce sont les bases pour vous aider à démarrer qui va vous permettre de 

00:14:41.000 --> 00:14:45.680
 créer des référentiels télécharger vos fichiers télécharger votre code pouvoir manipuler 

00:14:45.680 --> 00:14:49.250
 depuis n'importe quel système afin que vous puissiez le tester sur un Raspberry Pi sur votre machine Windows 

00:14:49.250 --> 00:14:54.410
 sur votre bureau Linux sur quoi que ce soit, puis pousser toutes ces modifications jusqu'à la 

00:14:54.410 --> 00:14:59.030
 serveur afin qu'ils puissent être téléchargés ou tirés sur tous vos systèmes afin que ce soit 

00:14:59.030 --> 00:15:01.810
 tout ce qu'il y a à faire 

00:15:07.430 --> 00:15:10.480
 [La musique] 

