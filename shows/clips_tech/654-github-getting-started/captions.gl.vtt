WEBVTT
Kind: captions
Language: gl

00:00:01.520 --> 00:00:07.200
 Agora, se nunca se uniu a nós para facer un descanso na comunidade de categoría 5 

00:00:07.200 --> 00:00:11.490
 descubra máis información sobre a categoría de cinco puntos da categoría. Desprácese ata a páxina de inicio 

00:00:11.490 --> 00:00:15.570
 e verás o café comunitario para romper alí xunto co noso horario 

00:00:15.570 --> 00:00:19.920
 iremos facendo o seguinte, é un evento semanal no que mantemos o zoom ' 

00:00:19.920 --> 00:00:23.430
 e é unha oportunidade para a nosa comunidade de xuntarse e ser parella 

00:00:23.430 --> 00:00:29.189
 aínda que todos estamos a experimentar o que estamos vivindo no noso mundo hoxe 

00:00:29.189 --> 00:00:35.370
 tomou a visión de dicir en vez de falar sobre esas cousas 

00:00:35.370 --> 00:00:40.260
 que nos están caendo agora mesmo, comprobámolo e dicimos que estamos todos 

00:00:40.260 --> 00:00:47.039
 preso nesta situación, que é o que estou facendo que me emociona 

00:00:47.039 --> 00:00:52.010
 que é o que estou experimentando con tecnoloxía que realmente é 

00:00:52.010 --> 00:00:56.489
 interesante para min e axudándome a ocupar o tempo se estou preso na casa 

00:00:56.489 --> 00:01:03.989
 Agora mesmo ou calquera que sexa o caso, polo que tratou o tema sobre github porque 

00:01:03.989 --> 00:01:10.380
 estamos falando de programación e Peter está case todas as veces durante un 

00:01:10.380 --> 00:01:14.580
 descanso de café na comunidade e Peter preguntábase ben como usas ben o github 

00:01:14.580 --> 00:01:18.750
 en realidade non son algo que podemos amosar ou falar que saben que andan por ti 

00:01:18.750 --> 00:01:22.799
 a través da pausa para o café, pero xurdiu que ben que sería un realmente 

00:01:22.799 --> 00:01:27.330
 Un bo tema para discutir sobre a tecnoloxía de televisión de categoría cinco e a razón que 

00:01:27.330 --> 00:01:34.350
 xurdiu inicialmente é porque cando Microsoft mercou github mantiveron 

00:01:34.350 --> 00:01:39.570
 indo tipo status quo como era e tiñas que pagar por certas características pero 

00:01:39.570 --> 00:01:48.240
 entón de súpeto Microsoft dixo recentemente e todos os pagados por funcións non 

00:01:48.240 --> 00:01:51.899
 todas elas, pero unha chea de funcións que antes tiña que pagar 

00:01:51.899 --> 00:01:55.500
 xa que agora son gratuítos polo que están a tomar o servizo e son basicamente 

00:01:55.500 --> 00:02:00.659
 regalando o seu servizo premium absolutamente gratuíto en github com 

00:02:00.659 --> 00:02:06.600
 github well github é como un fornecedor de servizos na nube para o que aínda está 

00:02:06.600 --> 00:02:10.800
 desenvolvedores axúdanos a poder xestionar os nosos proxectos para que poidas ir 

00:02:10.800 --> 00:02:15.050
 atrás no tempo basicamente con código e realmente é útil poder 

00:02:15.050 --> 00:02:20.540
 vexa eses compromisos e vexa como os cambios afectaron ao teu proxecto tamén é un 

00:02:20.540 --> 00:02:26.330
 un gran mecanismo de almacenamento para o teu código porque podes compartilo 

00:02:26.330 --> 00:02:30.350
 outras persoas, se queres agora, claro que Microsoft o fai gratis 

00:02:30.350 --> 00:02:37.640
 agora tamén tes repositorios privados gratuítos e podes configurar 

00:02:37.640 --> 00:02:41.300
 tantos equipos como queiras se queres colaborar con outros programadores pero 

00:02:41.300 --> 00:02:45.920
 esencialmente o que fai por min é que me permite compartir o meu código en internet 

00:02:45.920 --> 00:02:49.459
 de xeito que outras persoas poidan utilizalo de código aberto poden compilar ou empregar 

00:02:49.459 --> 00:02:55.459
 prefírelo ou executalo nos seus propios computadores e, se deciden, ben, prefiro 

00:02:55.459 --> 00:02:59.510
 funciona así ou quizais aquí teña un erro e podo solucionar que poden facer o que sexa 

00:02:59.510 --> 00:03:05.390
 chamou unha petición de pull, polo que clonan o meu software de github 

00:03:05.390 --> 00:03:10.730
 O código fixérono no computador e logo fan unha solicitude de puxa 

00:03:10.730 --> 00:03:16.100
 o devolven mentres o empuxan cara atrás ao seu garfo e logo crea unha solicitude de retirada 

00:03:16.100 --> 00:03:21.709
 para min para que vexa que oe Joe soportará o seu problema este meu erro 

00:03:21.709 --> 00:03:26.720
 software Podo facer clic nun botón e importaráo deste xeito no meu software 

00:03:26.720 --> 00:03:33.890
 hai moito e é realmente moi potente 

00:03:33.890 --> 00:03:37.519
 confuso especialmente cando te metes en esmagamento e os fusionas 

00:03:37.519 --> 00:03:41.390
 tipos de cousas nas que non imos entrar hoxe pero que quero 

00:03:41.390 --> 00:03:47.150
 móstralle como vai a ser o coñecemento máis básico sobre o seu funcionamento 

00:03:47.150 --> 00:03:53.720
 permíteche usar github dun xeito eficaz pensalo coma o que estea 

00:03:53.720 --> 00:03:58.519
 poñer o seu código como software de código aberto e non ten por que ser 

00:03:58.519 --> 00:04:03.470
 podes telo privado se queres pero no meu caso iso é o que estou facendo 

00:04:03.470 --> 00:04:07.130
 xente para colaborar comigo ocasionalmente quizais publicarán temas 

00:04:07.130 --> 00:04:10.430
 se atopan un erro e eu sigo sendo a persoa que ten que resolvelo pero en 

00:04:10.430 --> 00:04:15.590
 polo menos a miña comunidade está no meu repositorio de software e dicindo que isto é un 

00:04:15.590 --> 00:04:21.769
 problema e tes que solucionalo todo así que github calm is where you go is sign 

00:04:21.769 --> 00:04:26.360
 para a súa conta gratuíta todo o que tes que facer é facer clic na ligazón e facer clic 

00:04:26.360 --> 00:04:30.080
 rexístrese agora xa teño unha conta así que vou iniciar sesión coma min 

00:04:30.080 --> 00:04:37.789
 e inicie sesión para que vexades aquí que se eu vou aos meus repositorios así que si salto 

00:04:37.789 --> 00:04:47.569
 casa aquí e vaia para deixalo cargar aquí déixao cargar. Só vou ir 

00:04:47.569 --> 00:04:56.000
 directamente ao cat 5 TV é onde aloxo todo o meu software para que vaia alí 

00:04:56.000 --> 00:04:58.909
 github.com slash cat 5 TV e verás como funciona isto 

00:04:58.909 --> 00:05:02.779
 así podes ver que teño unha chea de repositorios de software e todos son 

00:05:02.779 --> 00:05:07.099
 diferentes proxectos diferentes cousas que fixen ou que estou a continuar 

00:05:07.099 --> 00:05:12.889
 hai que facer e hai páxinas e páxinas e páxinas del, así que unha vez que teñas o teu github 

00:05:12.889 --> 00:05:19.340
 conta pode iniciar sesión no que ve aquí, que é a miña lista de repositorios 

00:05:19.340 --> 00:05:23.090
 cando te rexistres por primeira vez, non terás que crear todos estes 

00:05:23.090 --> 00:05:26.750
 o seu primeiro repositorio, polo que o entendería agora 

00:05:26.750 --> 00:05:33.289
 Non se require github esqueza ok e gitub non é o mesmo que github github é un 

00:05:33.289 --> 00:05:39.919
 servizo en liña e pensalo como almacenamento en nube esquece ben, non é o mesmo 

00:05:39.919 --> 00:05:46.400
 cousa que é un almacenamento en liña para esa ferramenta de xestión de paquetes de código aberto ou 

00:05:46.400 --> 00:05:50.960
 ferramenta de xestión de proxectos, así que aquí en github fixérono realmente 

00:05:50.960 --> 00:05:55.400
 fácil de dicir simplemente novo repositorio, así que fun aos meus repositorios e xa o teño 

00:05:55.400 --> 00:05:59.360
 fixo clic en novo e logo vou darlle un nome que vou chamar a isto 

00:05:59.360 --> 00:06:07.419
 unha proba de subliñado e unha descrición opcional, esta é unha proba para o programa 

00:06:07.419 --> 00:06:12.800
 se queres que sexa público ou privado e inicialo con un 

00:06:12.800 --> 00:06:17.029
 readme sempre é mellor facelo porque é para que a xente poida acceder a ela 

00:06:17.029 --> 00:06:20.839
 inmediatamente, incluído vostede mesmo, quere engadir unha licenza, quere engadir unha 

00:06:20.839 --> 00:06:24.740
 git ignoro Vou deixar os dous baleiros que vai descubrir o que significa isto 

00:06:24.740 --> 00:06:30.680
 o futuro e crea o teu repositorio así que agora teño unha chamada proba de guión 

00:06:30.680 --> 00:06:34.459
 pero non hai nada e remato co navegador, polo que agora vou 

00:06:34.459 --> 00:06:39.830
 facer é vou subir o meu terminal e no terminal vou 

00:06:39.830 --> 00:06:43.320
 escriba ben, para que vexas que o teño 

00:06:43.320 --> 00:06:48.330
 xa o instalou se non tes instalado así que estou en Linux estou activado 

00:06:48.330 --> 00:06:53.460
 Debian Linux aquí podes escribir apt install git é o que vas facer 

00:06:53.460 --> 00:07:05.640
 type Non son maleducado sudo su inicio de sesión es rock ok apto instalar todavía va a contarlo 

00:07:05.640 --> 00:07:09.660
 me que xa teño a corrente oh non hai un non xa o teño 

00:07:09.660 --> 00:07:13.500
 pero hai outras actualizacións para min, pero é xa a versión máis nova 

00:07:13.500 --> 00:07:17.430
 se non o tes, cómpre instalalo se estás baseado en RPM 

00:07:17.430 --> 00:07:22.980
 O sistema será yum install git e tamén podes atopalo na túa GUI 

00:07:22.980 --> 00:07:28.740
 xestor de repositorios o seu xestor de paquetes ou o que use como algún sináptico 

00:07:28.740 --> 00:07:33.750
 xestor de paquetes por exemplo, así que unha vez instalado, fai un cartafol 

00:07:33.750 --> 00:07:41.100
 probablemente no teu cartafol de casa e chamaremos estes repositorios só para que eu 

00:07:41.100 --> 00:07:46.290
 teña un lugar onde sempre sei que o meu código é correcto e así vai ser 

00:07:46.290 --> 00:07:52.650
 copia local do meu repositorio git así que agora vou escribir git clon e xa estamos 

00:07:52.650 --> 00:08:00.210
 copiará esta URL github.com slash cat 5 TV cortará a miña proba de guión para que poida 

00:08:00.210 --> 00:08:08.010
 copia que só con ctrl C te acostumarás a escribir que é teu 

00:08:08.010 --> 00:08:13.560
 nome de usuario muda o teu repositorio e agora si miro o meu sistema de ficheiros é así 

00:08:13.560 --> 00:08:20.760
 clonado obter agora clon e despois o nome ou a URL do repositorio agora 

00:08:20.760 --> 00:08:25.920
 se vou ao meu cartafol de casa e logo nos repositorios, advirte que é propiedade de root 

00:08:25.920 --> 00:08:31.740
 porque vexo que un super usuario está a demandar, agora hai un cartafol chamado test e 

00:08:31.740 --> 00:08:38.250
 dentro da miña proba hai un ficheiro chamado MD readme, así que neste cartafol 

00:08:38.250 --> 00:08:43.250
 Eu vou a facer a miña proba e quero crear un novo ficheiro, vou chamalo 

00:08:43.250 --> 00:08:50.970
 proba nano punto SH e crearemos un ficheiro SH rápido para executar un script bash e 

00:08:50.970 --> 00:08:55.640
 Vou escribir eco ola alí como é que debería de verdade 

00:08:55.640 --> 00:09:00.970
 fíxate coa norma Ola mundo como está ben 

00:09:00.970 --> 00:09:05.690
 polo que escribín isto e pechino. Agora ve que hai un ficheiro chamado 

00:09:05.690 --> 00:09:13.910
 proba de punto s H agora cando transfiro un ficheiro para github os permisos son 

00:09:13.910 --> 00:09:18.500
 vai ser incluído con ese empurrón, por iso, se fago a proba de dot dot H H vostede 

00:09:18.500 --> 00:09:23.360
 nótese que o permiso negado necesito facelo executivo de todo chmod 

00:09:23.360 --> 00:09:30.680
 ademais de proba x punto s H entón, se escribo a proba de punto s HS s Ola mundo, así que agora 

00:09:30.680 --> 00:09:35.510
 Teño o meu primeiro guión preparado para subir ao github, é parte do meu 

00:09:35.510 --> 00:09:41.870
 repositorio no meu computador local pero aínda non está en github así que se o fixas 

00:09:41.870 --> 00:09:45.500
 github: vou refrescar só para probar que ves a túa lista de ficheiros aquí e 

00:09:45.500 --> 00:09:50.390
 aínda hai o readme ok, así que agora na miña xanela do terminal vou 

00:09:50.390 --> 00:09:56.330
 volva usar ese comando git vou buscar engadir estrela dentro dos repositorios 

00:09:56.330 --> 00:10:01.270
 cartafol que está dicindo atopar os ficheiros que teñan cambios e engadilos 

00:10:01.270 --> 00:10:09.680
 commit - estou e, entre comiñas, dálle un nome a su compromiso, así que vou dicir 

00:10:09.680 --> 00:10:14.480
 o meu primeiro guión e estas son só pequenas descricións e acertar enter e 

00:10:14.480 --> 00:10:19.220
 Agora está dicindo, tes que dicirnos quen es porque nunca 

00:10:19.220 --> 00:10:24.380
 executar git neste ordenador antes de que precisa executar estes dous comandos 

00:10:24.380 --> 00:10:29.030
 sinxelo get config - - global só tes que ter 

00:10:29.030 --> 00:10:33.350
 facelo unha vez que non te preocupes o correo electrónico do usuario e se tes problemas para escribir isto 

00:10:33.350 --> 00:10:39.980
 copialo ben e logo entre comiñas vou poñer a Robby na televisión de categoría 5 e iso 

00:10:39.980 --> 00:10:48.890
 simplemente dicíndolle o meu enderezo de correo electrónico, entón vou ir ao nome do usuario que non sei 

00:10:48.890 --> 00:10:52.550
 se pode escoitar iso, pero en realidade é unha tormenta moi mala fóra do noso estudio 

00:10:52.550 --> 00:10:56.720
 hoxe as luces parpadean algunhas veces pero creo que imos chegar 

00:10:56.720 --> 00:11:02.090
 a través dela, de todos xeitos, elimina iso e cambia o meu nome a Robby 

00:11:02.090 --> 00:11:06.710
 Ferguson entra ben, así que só teño que facelo unha vez agora en escena 

00:11:06.710 --> 00:11:11.420
 a próxima vez que publique ese git commit - estou só engadindo 

00:11:11.420 --> 00:11:15.050
 así que engadino e ve que un ficheiro cambiou hai dous 

00:11:15.050 --> 00:11:20.270
 insercións e probas SH é novo, polo que vai crear iso agora a final 

00:11:20.270 --> 00:11:26.450
 o comando que debo introducir é obter orixe push e vou especificar o 

00:11:26.450 --> 00:11:32.360
 mestre, que é o mestre de sucursal, así que orixina o mestre e agora vai 

00:11:32.360 --> 00:11:35.720
 pídeme o meu nome de usuario e contrasinal que ingrese cando creei o meu 

00:11:35.720 --> 00:11:44.360
 conta así que cat5 TV é o meu nome de usuario e o meu contrasinal uso LastPass e xero novo 

00:11:44.360 --> 00:11:49.430
 contrasinais todo o tempo e son enormes e tolos, polo que copiei un contrasinal 

00:11:49.430 --> 00:11:57.500
 e logo peguei e alí vai subindo eses datos 

00:11:57.500 --> 00:12:02.840
 repositorio e está feito de xeito f5 para actualizar e deberías ver a proba SH 

00:12:02.840 --> 00:12:09.200
 agora forma parte do meu repositorio de github e aí está e demostra que é así 

00:12:09.200 --> 00:12:17.330
 executivo Ola mundo, así que agora de volta aquí, así que só pretendemos ter feito cambios 

00:12:17.330 --> 00:12:20.750
 noutros sitios, noutro ordenador e vou facelo a través do navegador 

00:12:20.750 --> 00:12:29.270
 Só para amosarche neste sistema, volverei echarme de novo e logo 

00:12:29.270 --> 00:12:33.680
 Estou a gardar eses cambios que non lle vou dar un nome ou nada semellante 

00:12:33.680 --> 00:12:37.340
 esa descrición estou a confirmar así que agora o script parece que vexa 

00:12:37.340 --> 00:12:41.600
 como fago isto no navegador, podes facelo desde calquera lugar, agora se 

00:12:41.600 --> 00:12:47.510
 Vexo o meu arquivo localmente no meu ordenador no repositorio alí onde o seguimos 

00:12:47.510 --> 00:12:53.630
 só di Ola mundo ben, así que vou volver a tirar de novo estou facendo isto todo 

00:12:53.630 --> 00:12:58.700
 dentro do cartafol de proba de meu guión polo que git pull vai buscar calquera 

00:12:58.700 --> 00:13:02.510
 Os cambios que se fixeron noutros lugares e arrastralos ao meu ordenador 

00:13:02.510 --> 00:13:07.460
 Sempre está sincronizando eses cambios, agora si abro Nano e abro ese ficheiro 

00:13:07.460 --> 00:13:14.000
 Podes ver que o novo Ola de novo agora forma parte diso, así que vou amosarche eco 

00:13:14.000 --> 00:13:20.270
 Ola tres veces e vou salvar iso e agora vou facer o exacto 

00:13:20.270 --> 00:13:22.400
 o mesmo pero móstrache como é diferente agora 

00:13:22.400 --> 00:13:28.490
 Xa escribín o meu nome e o meu enderezo de correo electrónico para que Ad Star se comprometa - 

00:13:28.490 --> 00:13:39.410
 Estou a actualización final obtén push origin master cap 5 TV é o meu nome de usuario e o meu contrasinal 

00:13:39.410 --> 00:13:50.120
 é unha cadea de aproximadamente 64 caracteres seleccionados ao chou e vou pegar 

00:13:50.120 --> 00:13:56.060
 que dentro e alá imos, así que agora hai todo para impulsar os meus cambios 

00:13:56.060 --> 00:14:00.680
 localmente ao servidor github para que o comparta de novo con todos os demais ou 

00:14:00.680 --> 00:14:05.510
 cos meus outros sistemas cando fago un tiro para facer isto podo obter clomp 

00:14:05.510 --> 00:14:09.980
 perdóname git clon algo e non ten que ser o meu pode ser 

00:14:09.980 --> 00:14:14.690
 o repositorio de github doutra persoa sempre que sexa público pero logo podo facer 

00:14:14.690 --> 00:14:19.070
 cambios na miña máquina local e entón podo facer un impulso que agora tes que ter 

00:14:19.070 --> 00:14:24.710
 o repositorio para facer un empuxón para que faga cambios en alguén 

00:14:24.710 --> 00:14:29.570
 o repositorio de outra persoa é o que o ten que facer para que, ao ir ao repositorio, faga clic 

00:14:29.570 --> 00:14:34.040
 o botón chamado tenedor e basicamente fai unha copia da súa conta 

00:14:34.040 --> 00:14:37.550
 que pode facer cambios e entón é onde podes facer solicitudes 

00:14:37.550 --> 00:14:41.000
 pero eses son os elementos básicos para comezar, iso permitiranche 

00:14:41.000 --> 00:14:45.680
 crear repositorios cargar os seus ficheiros cargar o seu código para poder manipular 

00:14:45.680 --> 00:14:49.250
 en calquera sistema para probalo nun Raspberry Pi da máquina Windows 

00:14:49.250 --> 00:14:54.410
 no escritorio Linux en calquera cousa e, a continuación, presione todos os cambios ata 

00:14:54.410 --> 00:14:59.030
 servidor para que se poidan descargar ou tirar a todos os teus sistemas, así é 

00:14:59.030 --> 00:15:01.810
 todo o hai 

00:15:07.430 --> 00:15:10.480
 [Música] 

