WEBVTT
Kind: captions
Language: hu

00:00:01.520 --> 00:00:07.200
 most, ha még soha nem csatlakozott hozzánk az 5. kategóriába tartozó közösségi kávészünetért, akkor 

00:00:07.200 --> 00:00:11.490
 Tudjon meg többet róla az öt kategóriás pont TV-n, csak görgessen le a honlapon 

00:00:11.490 --> 00:00:15.570
 és látni fogja a közösségi kávészünetet, valamint az ütemtervünket 

00:00:15.570 --> 00:00:19.920
 a következőt fogjuk csinálni, ez egy heti esemény, amelyet nagyítással tartunk ' 

00:00:19.920 --> 00:00:23.430
 és ez a lehetőség a közösségünk számára, hogy egyenletesen összejöjjenek 

00:00:23.430 --> 00:00:29.189
 bár mindannyian megtapasztaljuk azt, amit manapság a világunkban tapasztalunk 

00:00:29.189 --> 00:00:35.370
 azt a megközelítést választotta, hogy inkább azt mondja, mint hogy azokról a dolgokról beszéljen 

00:00:35.370 --> 00:00:40.260
 amelyek most lehoznak minket, nézzük meg, és mondjuk, nézzünk mindannyian 

00:00:40.260 --> 00:00:47.039
 megragadva a helyzetbe, mi az, amit csinálok, ez izgatott volt 

00:00:47.039 --> 00:00:52.010
 mi az, amit technológiailag kísérletezem, ez valójában 

00:00:52.010 --> 00:00:56.489
 érdekes számomra, és segít elfoglalni az időt, függetlenül attól, hogy otthon vagyok-e 

00:00:56.489 --> 00:01:03.989
 most, vagy bármi legyen is az eset, így a téma azért merült fel a github miatt, mert 

00:01:03.989 --> 00:01:10.380
 programozásról beszélünk, és Peter szinte minden alkalommal ott van 

00:01:10.380 --> 00:01:14.580
 közösségi kávészünet, és Peter azt kérdezte, hogy kell jól használni a githubot 

00:01:14.580 --> 00:01:18.750
 nem igazán ők azok, amit meg tudunk mutatni, vagy beszélhetünk, hogy tudod, hogy járnak 

00:01:18.750 --> 00:01:22.799
 végig a kávészüneten, de jött, hogy hé, ez igazán igaz 

00:01:22.799 --> 00:01:27.330
 jó téma, hogy megvitassák az ötödik kategóriás TV-t, és annak oka 

00:01:27.330 --> 00:01:34.350
 eredetileg azért jött fel, mert amikor a Microsoft vásárolt githubot, megtartotta 

00:01:34.350 --> 00:01:39.570
 olyan állapotban van, mint amilyen volt, és fizetnie kellett bizonyos funkciókért, de 

00:01:39.570 --> 00:01:48.240
 aztán hirtelen a közelmúltban mondta a Microsoft, és mindazok, akik fizettek a szolgáltatásokért, nem 

00:01:48.240 --> 00:01:51.899
 mindegyik, de sokan fizettek olyan szolgáltatásokért, amelyeket régen kellett fizetni 

00:01:51.899 --> 00:01:55.500
 mert most ingyen vannak, tehát ők igénybe veszik a szolgáltatást, és alapvetően ők is 

00:01:55.500 --> 00:02:00.659
 prémium szolgáltatásaikat teljesen ingyenesen biztosítva a github com-on, szóval mi? 

00:02:00.659 --> 00:02:06.600
 github well A github olyan, mint egy felhő szolgáltató, mégis erre szolgál 

00:02:06.600 --> 00:02:10.800
 fejlesztőknek, ez segít bennünket abban, hogy projektjeinket úgy tudjuk kezelni, hogy Ön elmenhessen 

00:02:10.800 --> 00:02:15.050
 az időben alapvetően a kóddal, és nagyon hasznos, ha képes vagyunk rá 

00:02:15.050 --> 00:02:20.540
 látni ezeket a kötelezettségvállalásokat, és látni, hogy a változások milyen hatással voltak a projektre, ez szintén a 

00:02:20.540 --> 00:02:26.330
 Kiváló tárolási mechanizmus a kódhoz, mert meg tudja osztani velük 

00:02:26.330 --> 00:02:30.350
 más emberek, ha most természetesen azt akarja, hogy a Microsoft ingyenes legyen 

00:02:30.350 --> 00:02:37.640
 most már ingyenes magánleraktárak is vannak, és beállíthatja 

00:02:37.640 --> 00:02:41.300
 annyi csapat, amennyit csak akar, ha együttműködni szeretne más programozókkal, de 

00:02:41.300 --> 00:02:45.920
 lényegében az, amit számomra tesz, lehetővé teszi számomra az interneten való megosztást 

00:02:45.920 --> 00:02:49.459
 oly módon, hogy mások nyílt forráskódúak legyenek, összeállíthatják vagy felhasználhatják 

00:02:49.459 --> 00:02:55.459
 vagy futtassuk saját számítógépükön, és ha úgy döntenek, nos, inkább 

00:02:55.459 --> 00:02:59.510
 így működik, vagy talán itt van egy hiba, és meg tudom javítani, hogy meg tudják csinálni, amit csinálnak 

00:02:59.510 --> 00:03:05.390
 húzó kérésnek nevezték, tehát alapvetően a github tárolóomat klónozzák a szoftvert 

00:03:05.390 --> 00:03:10.730
 kódot, amelyet megjavítanak a számítógépükön, majd elvégzik egy pull kérést, amely megnyomja 

00:03:10.730 --> 00:03:16.100
 vissza, amíg visszahúzzák a villájukba, majd húzási kérelmet hoz létre 

00:03:16.100 --> 00:03:21.709
 nekem úgy, hogy látom, hogy hé Joe felrobbantja őket, hogy kijavítsák ezt a hibát az enyémmel 

00:03:21.709 --> 00:03:26.720
 Tudok kattintani egy gombra, és az importálja ezt a javítást a szoftverbe 

00:03:26.720 --> 00:03:33.890
 van egy csomó ez, és ez tényleg nagyon erős lehet 

00:03:33.890 --> 00:03:37.519
 zavaró, különösen, ha belekapaszkodik és egyesíti őket 

00:03:37.519 --> 00:03:41.390
 olyan dolgok, amelyekbe nem fogunk bejutni, de amiket én akarok 

00:03:41.390 --> 00:03:47.150
 mutasd meg, hogyan fog működni a legalapvetőbb ismerete 

00:03:47.150 --> 00:03:53.720
 engedje meg, hogy hatékonyan használja a githubot, gondoljon rá, hogy hol vagy 

00:03:53.720 --> 00:03:58.519
 hogy a kódot nyílt forráskódú szoftverként adja oda, és ennek nem kell lennie 

00:03:58.519 --> 00:04:03.470
 magántulajdonban lehet, ha akarod, de az én esetemben ezt akarom 

00:04:03.470 --> 00:04:07.130
 az emberek, akik időnként együttműködnek velem, talán kérdéseket tesznek közzé 

00:04:07.130 --> 00:04:10.430
 ha találnak hibát, akkor én vagyok az a személy, akinek javítania kell, de 

00:04:10.430 --> 00:04:15.590
 a legkevésbé a közösségem jön be a szoftvertárba, és azt mondja, hogy ez egy 

00:04:15.590 --> 00:04:21.769
 problémát, és minden rendben kell megjavítani, így a github nyugodt helye van, ahol jelad 

00:04:21.769 --> 00:04:26.360
 ingyenes fiókjához csak annyit kell tennie, hogy kattintson a linkre, majd kattintson a gombra 

00:04:26.360 --> 00:04:30.080
 iratkozzon fel, már van fiókom, tehát magamként fogok bejelentkezni 

00:04:30.080 --> 00:04:37.789
 és jelentkezzen be, így itt láthatja, hogy ha elmegyek a tárolóimhoz, ha ugrom 

00:04:37.789 --> 00:04:47.569
 hazamegy, és megy, hogy itt töltse be, hagyja, hogy rendben legyen, csak megyek 

00:04:47.569 --> 00:04:56.000
 egyenesen a macska 5 TV-hez, ahol tárolom az összes szoftvert, tehát odamegy 

00:04:56.000 --> 00:04:58.909
 A github.com egy 5-ös macska TV-t, és láthatja, hogyan működik ez 

00:04:58.909 --> 00:05:02.779
 tehát láthatja, hogy van egy csomó szoftver-tárhelyem, és ezek mind 

00:05:02.779 --> 00:05:07.099
 különböző projektek mindenféle dolgot, amit csináltam, vagy amit folytatok 

00:05:07.099 --> 00:05:12.889
 tenni, és vannak oldalak és oldalak, és oldalakat is, tehát, ha már megvan a github 

00:05:12.889 --> 00:05:19.340
 fiókba be tud jelentkezni az itt látható elembe, amely a tárolóim listája, de 

00:05:19.340 --> 00:05:23.090
 amikor először feliratkozik, nem fogja megkapni mindezeket, amelyeket létre kell hoznia 

00:05:23.090 --> 00:05:26.750
 az első lerakat, tehát ahogyan meg fogom csinálni, megértem 

00:05:26.750 --> 00:05:33.289
 A github nem szükséges. felejtsd el, oké és a git nem ugyanaz, mint a github github 

00:05:33.289 --> 00:05:39.919
 online szolgáltatást, és gondoljon rá, mint felhő-tárolásra felejtsd el, nem igaz 

00:05:39.919 --> 00:05:46.400
 dolog, ez egy online tárhely arra a nyílt forrású csomagkezelő eszközre, vagy a 

00:05:46.400 --> 00:05:50.960
 projektmenedzsment eszköz, tehát itt a githubon valóban igazán elkészítették 

00:05:50.960 --> 00:05:55.400
 könnyű egyszerűen elmondani az új lerakatot, tehát elmentem a lerakataiba, és megtettem 

00:05:55.400 --> 00:05:59.360
 rákattintott az új elemre, majd nevet adok neki, ezt hívom 

00:05:59.360 --> 00:06:07.419
 az egyik aláhúzási teszt és egy opcionális leírás, ez egy teszt a show-ra 

00:06:07.419 --> 00:06:12.800
 függetlenül attól, hogy nyilvános vagy magántulajdonban van-e, majd inicializálja a gombbal 

00:06:12.800 --> 00:06:17.029
 readme mindig a legjobb, ha azt teszi, hogy az emberek hozzáférjenek hozzá 

00:06:17.029 --> 00:06:20.839
 rögtön magában foglalja magát, amelyhez licencet szeretne hozzáadni, amit meg szeretne adni a 

00:06:20.839 --> 00:06:24.740
 Ha nem veszem figyelembe, mindkettőt üresen hagyom, rájössz, hogy ez mit jelent 

00:06:24.740 --> 00:06:30.680
 a jövőt, és hozza létre a tárházát, tehát most van egy nevem aláhúzási tesztnek 

00:06:30.680 --> 00:06:34.459
 de nincs itt semmi, és máris készen vagyok a böngészővel, szóval most megyek 

00:06:34.459 --> 00:06:39.830
 megteszem, hogy felveszem a terminált, és a terminálon megyek 

00:06:39.830 --> 00:06:43.320
 gépelj rendben, így láthatod, hogy én vagyok 

00:06:43.320 --> 00:06:48.330
 már telepítettem, ha még nincs telepítve, tehát Linux alatt vagyok 

00:06:48.330 --> 00:06:53.460
 A Debian Linux ide írhatja az apt install git parancsot 

00:06:53.460 --> 00:07:05.640
 type Nem vagyok durva sudo su bejelentkezve rock rendben van a telepítés, mégis megmondja 

00:07:05.640 --> 00:07:09.660
 nekem, hogy már van a jelenlegi ó, van egy nem, már megvan 

00:07:09.660 --> 00:07:13.500
 vannak más frissítések nekem, de a get már a legújabb verzió, tehát 

00:07:13.500 --> 00:07:17.430
 ha még nem rendelkezik, telepítenie kell, ha RPM alapú 

00:07:17.430 --> 00:07:22.980
 rendszer lesz yum install git, és megtalálhatja azt a felhasználói felületen is 

00:07:22.980 --> 00:07:28.740
 tárolókezelő, a csomagkezelő, vagy bármi más, amit használsz, például valamilyen szinaptikus 

00:07:28.740 --> 00:07:33.750
 például a csomagkezelő, így a telepítés után készítsen egy mappát 

00:07:33.750 --> 00:07:41.100
 valószínűleg az otthoni mappájában, és ezt az adattárat csak úgy hívjuk, hogy én 

00:07:41.100 --> 00:07:46.290
 van egy olyan hely, ahol mindig tudom, hogy a kódom helyes, tehát ez lesz a 

00:07:46.290 --> 00:07:52.650
 a git-tárolóm helyi példánya, tehát most beírom a git-klónt, és így vagyunk 

00:07:52.650 --> 00:08:00.210
 átmásolom ezt az URL-t github.com slash cat 5 TV átvágom az aláhúzási tesztomat, így tudok 

00:08:00.210 --> 00:08:08.010
 másolja, hogy csak a Ctrl C-vel megszokja, hogy csak azt írja be, hogy az az 

00:08:08.010 --> 00:08:13.560
 felhasználónév perjelzi a lerakatot, és most, ha megnézem a fájlrendszert, így van 

00:08:13.560 --> 00:08:20.760
 a klónozott klónot kap, majd a tárház nevét vagy URL-jét, így most 

00:08:20.760 --> 00:08:25.920
 ha elmegyek a saját mappámba, majd az adattárakba, észreveszem, hogy a root tulajdonosa 

00:08:25.920 --> 00:08:31.740
 mert látom, hogy egy szuper felhasználói haver beperel, tehát most van egy tesztnek nevezett mappám és 

00:08:31.740 --> 00:08:38.250
 a teszt során egy readme MD nevû fájl van, tehát ebben a mappában vagyok 

00:08:38.250 --> 00:08:43.250
 bemegyek a tesztembe, és új fájlt akarok létrehozni, ezt hívni fogom 

00:08:43.250 --> 00:08:50.970
 nano test dot SH, és létrehozunk egy gyors SH fájlt egy bash szkript futtatásához és 

00:08:50.970 --> 00:08:55.640
 Beírom az echo szia oda, hogy van-e igazán 

00:08:55.640 --> 00:09:00.970
 ragaszkodj a normális hello világhoz, mi az rendben? 

00:09:00.970 --> 00:09:05.690
 szóval kiírtam és bezártam, tehát most már látszik, hogy van egy fájl nevű 

00:09:05.690 --> 00:09:13.910
 tesztpont s H most, amikor egy fájlt átadok a github-ra, az engedélyek vannak 

00:09:13.910 --> 00:09:18.500
 beleillik ebbe a nyomásba, tehát ha pontvágással teszteltem a pontot H 

00:09:18.500 --> 00:09:23.360
 észreveszi, hogy azt mondják, hogy az engedélyt megtagadták 

00:09:23.360 --> 00:09:30.680
 plusz x teszt pont H, tehát most, ha beírom a teszt pont HS s hello világát, így most 

00:09:30.680 --> 00:09:35.510
 hogy legelső lemezemet készen álljak arra, hogy felkerüljek a github-ra, ez az én részem 

00:09:35.510 --> 00:09:41.870
 tárolót a helyi számítógépemen, de még nincs a github-ban, szóval ha megnézzük 

00:09:41.870 --> 00:09:45.500
 github frissíteni fogom csak annak bizonyítása érdekében, hogy itt látja a fájllistáját, és 

00:09:45.500 --> 00:09:50.390
 még mindig csak a readme rendben van, tehát vissza a terminál ablakomba megyek 

00:09:50.390 --> 00:09:56.330
 ismét ezt a git parancsot fogom használni, és csillagot adok az adattárakba 

00:09:56.330 --> 00:10:01.270
 mappában, amely azt mondja, keressen olyan fájlokat, amelyek bármilyen módosítással rendelkeznek, és adja hozzá őket ok get 

00:10:01.270 --> 00:10:09.680
 vállalj - am, majd idézőjelekben adj nevet a vállalkozásnak, szóval mondom 

00:10:09.680 --> 00:10:14.480
 az első forgatókönyvem és ezek csak rövid kis leírások, és nyomjuk meg az enter és a billentyűt 

00:10:14.480 --> 00:10:19.220
 most azt mondja, hé, el kell mondania nekünk, ki vagy, mert még soha nem voltál 

00:10:19.220 --> 00:10:24.380
 futtassa a git-et ezen a számítógépen korábban, tehát ezt a két parancsot nagyon jól kell futtatnia 

00:10:24.380 --> 00:10:29.030
 egyértelmű get config - - globálisan csak meg kell 

00:10:29.030 --> 00:10:33.350
 ezt egyszer tegye meg, ne aggódjon a felhasználói pont e-mail, és ha nehezen gépelte be ezt 

00:10:33.350 --> 00:10:39.980
 másolja rendben, majd idézőjelekben megyek Robby az 5. kategóriás TV-hez, és ez az 

00:10:39.980 --> 00:10:48.890
 csak elmondom az e-mail címem, akkor megyek a felhasználónévhez, amit nem tudok 

00:10:48.890 --> 00:10:52.550
 ha hallja, de ez valójában egy nagyon rossz vihar a stúdiónkon kívül 

00:10:52.550 --> 00:10:56.720
 ma tehát a fények néhányszor villognak, de azt hiszem, megkapjuk 

00:10:56.720 --> 00:11:02.090
 amúgy is rajta keresztül, tehát minden rendben törli ezt, és Robby-ra változtatja a nevemet 

00:11:02.090 --> 00:11:06.710
 Ferguson belépés rendben van, tehát csak egyszer kell ezt megtennem, így most a jelenet 

00:11:06.710 --> 00:11:11.420
 legközelebb, amikor futtatom ezt a szellemi kötelezettséget - csak hozzáteszem, rendben 

00:11:11.420 --> 00:11:15.050
 tehát hozzáadtam, és látja, hogy egy fájl megváltozott, kettő van 

00:11:15.050 --> 00:11:20.270
 beillesztések és kipróbálni az SH új, így létre fog hozni, így most a végleges 

00:11:20.270 --> 00:11:26.450
 parancs, amelybe be kell lépnem, hogy push eredet legyen, és meg fogom határozni a 

00:11:26.450 --> 00:11:32.360
 mester, amely a fióktelep, tehát származási mester, és most meg fogja tenni 

00:11:32.360 --> 00:11:35.720
 kérjen nekem a felhasználónevemet és a jelszavamat, amelyeket megadtam, amikor létrehoztam 

00:11:35.720 --> 00:11:44.360
 fiók, így a cat5 TV a felhasználónevem és a jelszavam. A LastPass-ot használom, és új generálok 

00:11:44.360 --> 00:11:49.430
 a jelszavak állandóan hatalmasak és őrültek, tehát másoltam egy jelszót 

00:11:49.430 --> 00:11:57.500
 aztán beillesztettem, és ott megy feltölteni ezeket az adatokat a saját 

00:11:57.500 --> 00:12:02.840
 adattárba, és így lett az f5, hogy frissítse, és látnia kell a teszt SH-t 

00:12:02.840 --> 00:12:09.200
 most a github tárolóm részét képezi, és ott van, és megmutatja, hogy van 

00:12:09.200 --> 00:12:17.330
 ügyvezető hello világ, hát itt, hát tegyünk úgy, mintha csak változtatnék 

00:12:17.330 --> 00:12:20.750
 máshol, így egy másik számítógépen, és ezt a böngészőn keresztül fogom megtenni 

00:12:20.750 --> 00:12:29.270
 csak hogy megmutassam neked ebben a rendszerben, újra visszakapcsolni fogok, oké, majd 

00:12:29.270 --> 00:12:33.680
 Meg akarom menteni ezeket a változásokat. Nem adok nevet vagy ilyesmit 

00:12:33.680 --> 00:12:37.340
 ezt a leírást csak megerősíteni fogom, tehát most a forgatókönyv úgy néz ki, mint ez 

00:12:37.340 --> 00:12:41.600
 hogyan változtathatom meg a böngészőben, bárhonnan megteheted, ha most 

00:12:41.600 --> 00:12:47.510
 A fájlokat a tárolóban lévő számítógépemen helyileg nézem, ott megyünk 

00:12:47.510 --> 00:12:53.630
 csak azt mondja, hogy a hello világ rendben van, szóval újra meghúzom az egészet 

00:12:53.630 --> 00:12:58.700
 az aláhúzott tesztmappámban, így a git pull majd megkeresi 

00:12:58.700 --> 00:13:02.510
 a máshol elvégzett változtatásokat, és leviszem őket a számítógépre 

00:13:02.510 --> 00:13:07.460
 mindig szinkronizálja ezeket a változásokat, tehát most, ha megnyitom a Nano-t, és megnyitom a fájlt 

00:13:07.460 --> 00:13:14.000
 láthatja, hogy az új hello ismét része ennek, tehát visszhangot fogok mutatni 

00:13:14.000 --> 00:13:20.270
 Helló háromszor, ezt meg fogom menteni, és most pontosan megteszem 

00:13:20.270 --> 00:13:22.400
 ugyanaz, de mutasd meg, hogy most milyen más 

00:13:22.400 --> 00:13:28.490
 Már megadtam a nevemet és az e-mail címemet, hogy az Ad Star elkötelezze magát - 

00:13:28.490 --> 00:13:39.410
 végső frissítés vagyok, amire push eredetű master cap 5 TV van a felhasználónevem és a jelszavam 

00:13:39.410 --> 00:13:50.120
 körülbelül 64 karakterből álló karakterlánc, amelyet véletlenszerűen választunk ki, és beillesztem 

00:13:50.120 --> 00:13:56.060
 hogy oda-vissza megyünk, tehát minden, ami most előidézheti a változásaimat 

00:13:56.060 --> 00:14:00.680
 helyileg a github szerverre, így újra megoszthatja másokkal, vagy 

00:14:00.680 --> 00:14:05.510
 más rendszereimmel, amikor húzom, tehát úgy csinálom, hogy összekapcsolódjak 

00:14:05.510 --> 00:14:09.980
 bocsáss meg nekem valamit, és nem kell, hogy az enyém legyen 

00:14:09.980 --> 00:14:14.690
 valaki más github-tárházát, mindaddig, amíg nyilvános, de akkor megtehetem 

00:14:14.690 --> 00:14:19.070
 megváltozik a helyi gépemen, és akkor meg tudom csinálni egy push-et, most már meg kell tulajdonolnod 

00:14:19.070 --> 00:14:24.710
 a lerakat, hogy nyomja meg, így a változtatások módja valakinek 

00:14:24.710 --> 00:14:29.570
 az else tárolója villás, így amikor a tárolóba megy, akkor rákattint 

00:14:29.570 --> 00:14:34.040
 a gombot, amelyet villának hívtak, és alapvetően másolatot készít a saját számlájáról 

00:14:34.040 --> 00:14:37.550
 amelyben változtatni lehet, és itt elvégezheti a pull kéréseket 

00:14:37.550 --> 00:14:41.000
 de ezek az alapok az induláshoz, amit megenged 

00:14:41.000 --> 00:14:45.680
 tárolók létrehozása feltölteni a fájlokat feltölteni a kódot, hogy képes legyen manipulálni 

00:14:45.680 --> 00:14:49.250
 bármilyen rendszerről, így kipróbálhatja a Raspberry Pi rendszeren a Windows számítógépen 

00:14:49.250 --> 00:14:54.410
 a Linux asztalán bárhova, majd ezeket a változtatásokat a 

00:14:54.410 --> 00:14:59.030
 szerverre, így letölthető vagy letölthető az összes rendszerére, így van 

00:14:59.030 --> 00:15:01.810
 minden van hozzá 

00:15:07.430 --> 00:15:10.480
 [Zene] 

