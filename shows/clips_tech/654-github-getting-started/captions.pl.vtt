WEBVTT
Kind: captions
Language: pl

00:00:01.520 --> 00:00:07.200
 teraz, jeśli nigdy nie dołączyłeś do nas na przerwę na kawę w społeczności 5 kategorii, to zrobisz to 

00:00:07.200 --> 00:00:11.490
 dowiedz się więcej na ten temat w telewizji kropkowej w kategorii piątej, po prostu przewiń w dół na stronie głównej 

00:00:11.490 --> 00:00:15.570
 a zobaczysz przerwę na kawę w społeczności wraz z naszym harmonogramem, kiedy 

00:00:15.570 --> 00:00:19.920
 będziemy robić następne, to cotygodniowe wydarzenie, które będziemy kontynuować na powiększeniu 

00:00:19.920 --> 00:00:23.430
 i jest to okazja dla naszej społeczności, aby się zjednoczyć, a nawet 

00:00:23.430 --> 00:00:29.189
 chociaż wszyscy doświadczamy tego, czego doświadczamy dzisiaj w naszym świecie 

00:00:29.189 --> 00:00:35.370
 przyjęła podejście, by mówić, zamiast mówić o tych rzeczach 

00:00:35.370 --> 00:00:40.260
 które nas teraz sprowadzają. Spójrzmy na to i powiedzmy, że wszyscy jesteśmy 

00:00:40.260 --> 00:00:47.039
 Utknąłem w tej sytuacji. Co mnie ekscytuje 

00:00:47.039 --> 00:00:52.010
 czym tak naprawdę eksperymentuję z technologią? 

00:00:52.010 --> 00:00:56.489
 interesujące dla mnie i pomagające mi zająć czas, czy utknąłem w domu 

00:00:56.489 --> 00:01:03.989
 w tej chwili lub cokolwiek innego, więc temat pojawił się na temat github, ponieważ 

00:01:03.989 --> 00:01:10.380
 mówimy o programowaniu i Peter jest tam prawie zawsze 

00:01:10.380 --> 00:01:14.580
 społeczna przerwa na kawę, a Peter dobrze pytał, jak dobrze korzystać z github 

00:01:14.580 --> 00:01:18.750
 nie tak naprawdę to coś, co możemy pokazać lub porozmawiać, o czym wiesz, że cię prowadzi 

00:01:18.750 --> 00:01:22.799
 podczas przerwy na kawę, ale okazało się, że hej, to byłoby naprawdę 

00:01:22.799 --> 00:01:27.330
 dobry temat do dyskusji na temat telewizji technologicznej kategorii piątej i jej przyczyny 

00:01:27.330 --> 00:01:34.350
 pojawił się początkowo dlatego, że kiedy Microsoft kupił github, zachowali go 

00:01:34.350 --> 00:01:39.570
 w pewnym sensie tak jak było i trzeba było zapłacić za pewne funkcje, ale 

00:01:39.570 --> 00:01:48.240
 wtedy nagle bardzo niedawno Microsoft powiedział, a wszyscy zapłacili za funkcje nie 

00:01:48.240 --> 00:01:51.899
 wszystkie z nich, ale wiele z nich opłacono za funkcje, które kiedyś trzeba było zapłacić 

00:01:51.899 --> 00:01:55.500
 ponieważ są teraz darmowe, więc biorą usługi i są w zasadzie 

00:01:55.500 --> 00:02:00.659
 rozdając swoje usługi premium całkowicie za darmo na github com, więc co tam 

00:02:00.659 --> 00:02:06.600
 github dobrze github jest rodzajem dostawcy usług w chmurze, ale jest do tego przeznaczony 

00:02:06.600 --> 00:02:10.800
 programiści pomaga nam zarządzać naszymi projektami, abyś mógł jechać 

00:02:10.800 --> 00:02:15.050
 cofając się w czasie w zasadzie za pomocą kodu i naprawdę jest to pomocne 

00:02:15.050 --> 00:02:20.540
 zobacz te zobowiązania i zobacz, jak zmiany wpłynęły na twój projekt, to także 

00:02:20.540 --> 00:02:26.330
 świetny mechanizm przechowywania kodu, ponieważ możesz go udostępnić 

00:02:26.330 --> 00:02:30.350
 inne osoby, jeśli chcesz teraz, oczywiście, Microsoft czyniąc to za darmo 

00:02:30.350 --> 00:02:37.640
 możesz teraz mieć także bezpłatne prywatne repozytoria i możesz je skonfigurować 

00:02:37.640 --> 00:02:41.300
 tyle zespołów, ile chcesz, jeśli chcesz współpracować z innymi programistami, ale 

00:02:41.300 --> 00:02:45.920
 w zasadzie to, co dla mnie robi, pozwala mi udostępniać swój kod online 

00:02:45.920 --> 00:02:49.459
 w taki sposób, że inni ludzie mogą z niego korzystać open source, mogą go skompilować lub użyć 

00:02:49.459 --> 00:02:55.459
 uruchomić go na własnych komputerach, a jeśli zdecydują się, no cóż, wolę 

00:02:55.459 --> 00:02:59.510
 to działa w ten sposób, a może tutaj jest błąd i mogę naprawić, że mogą robić to, co jest 

00:02:59.510 --> 00:03:05.390
 zwane żądaniem ściągnięcia, więc w zasadzie klonują moje repozytorium github moje oprogramowanie 

00:03:05.390 --> 00:03:10.730
 kodu naprawiają go na swoim komputerze, a następnie wysyłają żądanie ściągnięcia 

00:03:10.730 --> 00:03:16.100
 z powrotem, podczas gdy pchają go z powrotem do swojego widelca, a następnie tworzy żądanie ściągnięcia 

00:03:16.100 --> 00:03:21.709
 dla mnie tak, że widzę, że hej Joe rozwali ich naprawić ten błąd z moim 

00:03:21.709 --> 00:03:26.720
 oprogramowanie Mogę kliknąć przycisk, który zaimportuje tę poprawkę do mojego oprogramowania 

00:03:26.720 --> 00:03:33.890
 jest w tym wiele i jest naprawdę potężny 

00:03:33.890 --> 00:03:37.519
 mylące, zwłaszcza gdy zaczynasz zgniatać i łączyć je i te 

00:03:37.519 --> 00:03:41.390
 rzeczy, w które nie będziemy się dzisiaj zajmować, ale to, czego chcę 

00:03:41.390 --> 00:03:47.150
 pokażę ci, jak będzie wyglądać najbardziej podstawowa wiedza na temat tego, jak to działa 

00:03:47.150 --> 00:03:53.720
 pozwalają efektywnie korzystać z github. Pomyśl o tym jak o tym, gdzie jesteś 

00:03:53.720 --> 00:03:58.519
 udostępnianie kodu jako oprogramowania typu open source i nie musi tak być 

00:03:58.519 --> 00:04:03.470
 możesz mieć to prywatne, jeśli chcesz, ale w moim przypadku tego właśnie chcę 

00:04:03.470 --> 00:04:07.130
 ludzie, którzy od czasu do czasu ze mną współpracują, może opublikują problemy 

00:04:07.130 --> 00:04:10.430
 jeśli znajdą błąd, a ja nadal jestem osobą, która musi go naprawić, ale o 

00:04:10.430 --> 00:04:15.590
 przynajmniej moja społeczność wchodzi do mojego repozytorium oprogramowania i mówi, że to 

00:04:15.590 --> 00:04:21.769
 problem i musisz to naprawić, więc github spokój jest tam, gdzie idziesz, jest znakiem 

00:04:21.769 --> 00:04:26.360
 aby założyć bezpłatne konto, wystarczy kliknąć link i kliknąć 

00:04:26.360 --> 00:04:30.080
 zarejestruj się teraz Mam już konto, więc zaloguję się jako ja 

00:04:30.080 --> 00:04:37.789
 i zaloguj się, abyś mógł zobaczyć tutaj, że jeśli pójdę do moich repozytoriów, to jeśli skoczę 

00:04:37.789 --> 00:04:47.569
 do domu tutaj i idź, żeby się załadować tutaj idź i załaduj się dobrze, po prostu pójdę 

00:04:47.569 --> 00:04:56.000
 prosto do cat 5 TV to miejsce, gdzie hostuję całe moje oprogramowanie, więc idź tam 

00:04:56.000 --> 00:04:58.909
 github.com slash cat 5 TV i widać, jak to działa 

00:04:58.909 --> 00:05:02.779
 więc widać, że mam mnóstwo repozytoriów oprogramowania i wszystkie one 

00:05:02.779 --> 00:05:07.099
 różne projekty, wszystkie różne rzeczy, które zrobiłem lub które kontynuuję 

00:05:07.099 --> 00:05:12.889
 do zrobienia, a są tam strony, strony i strony, więc kiedy już masz swojego githuba 

00:05:12.889 --> 00:05:19.340
 konto, możesz zalogować się do tego, co tutaj widzisz, czyli mojej listy repozytoriów, ale 

00:05:19.340 --> 00:05:23.090
 kiedy po raz pierwszy się zarejestrujesz, nie będziesz mieć wszystkich tych, które musisz stworzyć 

00:05:23.090 --> 00:05:26.750
 Twoje pierwsze repozytorium, więc sposób, w jaki zamierzam to zrobić, teraz rozumiem 

00:05:26.750 --> 00:05:33.289
 github nie jest wymagany zapomnij ok, a git nie jest tym samym, co github github jest 

00:05:33.289 --> 00:05:39.919
 usługi online i pomyśl o tym jak o chmurze zapomnij ok, to nie to samo 

00:05:39.919 --> 00:05:46.400
 rzeczą jest pamięć online dla tego narzędzia do zarządzania pakietami typu open source lub 

00:05:46.400 --> 00:05:50.960
 narzędzie do zarządzania projektami, więc tutaj na github zrobili to naprawdę naprawdę 

00:05:50.960 --> 00:05:55.400
 łatwo powiedzieć po prostu nowe repozytorium, więc poszedłem do moich repozytoriów i już 

00:05:55.400 --> 00:05:59.360
 kliknąłem na nowy, a potem nadam mu nazwę 

00:05:59.360 --> 00:06:07.419
 jeden mój test podkreślenia i opcjonalny opis to jest test na pokaz 

00:06:07.419 --> 00:06:12.800
 czy chcesz, aby był publiczny czy prywatny, a następnie zainicjuj go za pomocą 

00:06:12.800 --> 00:06:17.029
 readme zawsze najlepiej jest to zrobić, dzięki czemu użytkownicy mają do niego dostęp 

00:06:17.029 --> 00:06:20.839
 od razu włączając siebie chcesz dodać licencję czy chcesz dodać licencję 

00:06:20.839 --> 00:06:24.740
 zignoruj, zostawię oba puste, odkryjesz, co to znaczy 

00:06:24.740 --> 00:06:30.680
 przyszłość i stwórz swoje repozytorium, więc teraz mam taki o nazwie mój test podkreślenia 

00:06:30.680 --> 00:06:34.459
 ale nic tam nie ma i skończyłem z przeglądarką, więc teraz co zamierzam 

00:06:34.459 --> 00:06:39.830
 mam zamiar przywołać mój terminal, aw moim terminalu zamierzam 

00:06:39.830 --> 00:06:43.320
 wpisz się dobrze, żebyś mógł zobaczyć, że mam 

00:06:43.320 --> 00:06:48.330
 już go zainstalowałem, jeśli nie masz zainstalowanego, więc jestem w systemie Linux 

00:06:48.330 --> 00:06:53.460
 Debian Linux tutaj możesz wpisać apt install git, to właśnie zamierzasz 

00:06:53.460 --> 00:07:05.640
 typ Nie jestem niegrzeczny sudo su zalogowany jest rock ok apt install jeszcze to pokaże 

00:07:05.640 --> 00:07:09.660
 mnie, że już mam obecny, och, nie ma nie, już go mam 

00:07:09.660 --> 00:07:13.500
 są dla mnie inne aktualizacje, ale get jest już najnowszą wersją, więc 

00:07:13.500 --> 00:07:17.430
 jeśli go nie masz, musisz go zainstalować, jeśli korzystasz z RPM 

00:07:17.430 --> 00:07:22.980
 system będzie yum zainstalować git i można go również znaleźć w GUI 

00:07:22.980 --> 00:07:28.740
 menedżer repozytorium menedżer pakietów lub cokolwiek, czego używasz, np. synaptic 

00:07:28.740 --> 00:07:33.750
 na przykład menedżer pakietów, więc po zainstalowaniu utwórz folder 

00:07:33.750 --> 00:07:41.100
 prawdopodobnie w twoim katalogu domowym, a my wywołamy te repozytoria tylko po to, aby ja 

00:07:41.100 --> 00:07:46.290
 mam miejsce, w którym zawsze wiem, że mój kod ma rację, więc to będzie 

00:07:46.290 --> 00:07:52.650
 lokalna kopia mojego repozytorium git, więc teraz napiszę git clone i jesteśmy 

00:07:52.650 --> 00:08:00.210
 skopiuję ten adres URL github.com slash cat 5 TV slash mój test podkreślenia, abym mógł 

00:08:00.210 --> 00:08:08.010
 skopiuj to za pomocą ctrl C, przyzwyczaisz się do pisania, to twoje 

00:08:08.010 --> 00:08:13.560
 nazwa użytkownika tnie twoje repozytorium, a teraz jeśli spojrzę na mój system plików, to tak 

00:08:13.560 --> 00:08:20.760
 sklonowane pobierz klon, a następnie nazwę lub adres URL repozytorium, więc teraz 

00:08:20.760 --> 00:08:25.920
 jeśli przejdę do mojego katalogu domowego, a następnie do repozytoriów zauważ, że jest własnością root 

00:08:25.920 --> 00:08:31.740
 ponieważ widzę, jak koleś superużytkownik pozwał, więc teraz jest folder o nazwie mój test i 

00:08:31.740 --> 00:08:38.250
 w ramach mojego testu jest plik o nazwie readme MD, więc w tym folderze jestem 

00:08:38.250 --> 00:08:43.250
 przejdę do mojego testu i chcę utworzyć nowy plik, który nazywam tym 

00:08:43.250 --> 00:08:50.970
 nano test dot SH, a my utworzymy szybki plik SH, aby uruchomić skrypt bash i 

00:08:50.970 --> 00:08:55.640
 Mam zamiar wpisać echo cześć, jak to jest, och, naprawdę powinienem 

00:08:55.640 --> 00:09:00.970
 trzymaj się normalnego świata cześć, jak się czuje 

00:09:00.970 --> 00:09:05.690
 więc to napisałem i zamknąłem, więc teraz widzisz plik o nazwie 

00:09:05.690 --> 00:09:13.910
 test kropki H teraz, kiedy przesyłam plik do github, uprawnienia są 

00:09:13.910 --> 00:09:18.500
 zostaną dołączone do tego pchnięcia, więc jeśli zrobię test cięcia kropkowego kropka s H you 

00:09:18.500 --> 00:09:23.360
 zauważ, że jest napisane, że odmówiono zgody. Muszę sprawić, żeby była dyrektorem wykonawczym 

00:09:23.360 --> 00:09:30.680
 plus x kropka testowa s H, więc teraz, jeśli napiszę kropkę testową HS s witaj świecie, więc teraz 

00:09:30.680 --> 00:09:35.510
 mam swój pierwszy skrypt gotowy do przejścia na github, to część mojego 

00:09:35.510 --> 00:09:41.870
 repozytorium na moim komputerze lokalnym, ale nie jest jeszcze w github, więc jeśli spojrzysz 

00:09:41.870 --> 00:09:45.500
 github Odświeżę, aby udowodnić, że widzisz listę plików tutaj i 

00:09:45.500 --> 00:09:50.390
 nadal jest tylko readme, więc wrócę do okna terminala 

00:09:50.390 --> 00:09:56.330
 jeszcze raz użyj tego polecenia git idę dodać gwiazdkę do repozytoriów 

00:09:56.330 --> 00:10:01.270
 folder, który mówi, znajdź wszystkie pliki, które mają jakieś zmiany i dodaj je, dobrze 

00:10:01.270 --> 00:10:09.680
 commit - jestem, a następnie w cudzysłowach podaj nazwę swojego commit, więc powiem 

00:10:09.680 --> 00:10:14.480
 mój pierwszy scenariusz, a to tylko krótkie krótkie opisy i naciśnij Enter i 

00:10:14.480 --> 00:10:19.220
 teraz mówi hej, musisz nam powiedzieć, kim jesteś, ponieważ nigdy nie byłeś 

00:10:19.220 --> 00:10:24.380
 uruchom git na tym komputerze, więc musisz ładnie uruchomić te dwa polecenia 

00:10:24.380 --> 00:10:29.030
 od razu get config - - globalny, musisz tylko 

00:10:29.030 --> 00:10:33.350
 zrób to raz, nie martw się, że użytkownik dot e-mail dot, a jeśli masz problem z wpisaniem tego po prostu 

00:10:33.350 --> 00:10:39.980
 skopiuj to ok, a następnie w cytatach umieszczę Robby'ego w kategorii TV 5 i to wszystko 

00:10:39.980 --> 00:10:48.890
 po prostu podam mu mój adres e-mail, a potem wybiorę nazwę użytkownika, której nie znam 

00:10:48.890 --> 00:10:52.550
 jeśli to słychać, ale tak naprawdę jest to naprawdę zła burza poza naszym studiem 

00:10:52.550 --> 00:10:56.720
 dzisiaj, więc światła migają kilka razy, ale myślę, że dostaniemy 

00:10:56.720 --> 00:11:02.090
 przez to i tak, więc dobrze to usuń i zmień moje imię na Robby 

00:11:02.090 --> 00:11:06.710
 Ferguson wchodzi ok gotowe, więc muszę to zrobić tylko raz, więc teraz scena 

00:11:06.710 --> 00:11:11.420
 następnym razem uruchamiam ten git commit - czy to tylko dodawanie, ok? 

00:11:11.420 --> 00:11:15.050
 więc dodałem go i widać, że jeden plik się zmienił, są dwa 

00:11:15.050 --> 00:11:20.270
 wstawki i testy SH jest nowy, więc stworzy go, więc teraz finał 

00:11:20.270 --> 00:11:26.450
 polecenie, które muszę wpisać, to get push origin i mam zamiar określić 

00:11:26.450 --> 00:11:32.360
 master, który jest mistrzem oddziału, więc master pochodzenia i teraz będzie 

00:11:32.360 --> 00:11:35.720
 zapytaj mnie o moją nazwę użytkownika i hasło, które podałem podczas tworzenia 

00:11:35.720 --> 00:11:44.360
 konto, więc cat5 TV to moja nazwa użytkownika i hasło. Używam LastPass i generuję nowe 

00:11:44.360 --> 00:11:49.430
 hasła przez cały czas, a są masywne i szalone, więc skopiowałem hasło 

00:11:49.430 --> 00:11:57.500
 a potem wkleiłem go i proszę, przesyłam te dane do siebie 

00:11:57.500 --> 00:12:02.840
 repozytorium i jest to zrobione, więc F5 odświeża i powinieneś zobaczyć test SH 

00:12:02.840 --> 00:12:09.200
 jest teraz częścią mojego repozytorium github i jest tam i pokazuje, że jest 

00:12:09.200 --> 00:12:17.330
 witaj świecie, więc powróćmy tutaj, udawajmy, że dokonałem zmian 

00:12:17.330 --> 00:12:20.750
 gdzie indziej, więc na innym komputerze i zamierzam to zrobić za pośrednictwem przeglądarki 

00:12:20.750 --> 00:12:29.270
 tylko żeby wam pokazać, więc w tym systemie powtórzę echo, cześć, dobrze 

00:12:29.270 --> 00:12:33.680
 Zachowam te zmiany, nie dam nazwy ani nic podobnego 

00:12:33.680 --> 00:12:37.340
 ten opis po prostu potwierdzę, więc teraz skrypt wygląda tak, więc zobacz 

00:12:37.340 --> 00:12:41.600
 jak mogę to zmienić w przeglądarce, możesz to zrobić z dowolnego miejsca, więc teraz jeśli 

00:12:41.600 --> 00:12:47.510
 Patrzę na mój plik lokalnie na moim komputerze w repozytorium 

00:12:47.510 --> 00:12:53.630
 po prostu mówi cześć, dobrze, dobrze, więc znów zacznę ciągnąć. Robię to wszystko 

00:12:53.630 --> 00:12:58.700
 w moim folderze testu podkreślenia, więc git pull będzie szukał dowolnego 

00:12:58.700 --> 00:13:02.510
 zmiany, które zostały wprowadzone gdzie indziej i ściągnij je na mój komputer, więc 

00:13:02.510 --> 00:13:07.460
 zawsze synchronizuje te zmiany, więc teraz, jeśli otworzę Nano i otworzę ten plik 

00:13:07.460 --> 00:13:14.000
 widać, że nowe powitanie jest teraz częścią tego, więc pokażę wam echo 

00:13:14.000 --> 00:13:20.270
 cześć trzy razy i uratuję to, a teraz zrobię dokładnie 

00:13:20.270 --> 00:13:22.400
 to samo, ale pokażę ci, jak teraz jest inaczej 

00:13:22.400 --> 00:13:28.490
 Podałem już swoje imię i adres e-mail, aby Ad Star otrzymało potwierdzenie - 

00:13:28.490 --> 00:13:39.410
 jestem ostatnią aktualizacją get push origin master cap 5 TV to moja nazwa użytkownika i moje hasło 

00:13:39.410 --> 00:13:50.120
 to ciąg około 64 znaków losowo wybranych i zamierzam wkleić 

00:13:50.120 --> 00:13:56.060
 że tam i teraz zaczynamy, więc to wszystko, co jest teraz, aby wprowadzić moje zmiany 

00:13:56.060 --> 00:14:00.680
 lokalnie na serwerze github, dzięki czemu ponownie udostępnia go wszystkim lub 

00:14:00.680 --> 00:14:05.510
 z innymi systemami, kiedy wykonuję próbę, dzięki czemu mogę uzyskać clomp 

00:14:05.510 --> 00:14:09.980
 wybacz mi, sklonuj coś i to nie musi być moje, może być 

00:14:09.980 --> 00:14:14.690
 czyjeś repozytorium github, o ile jest publiczne, ale mogę to zrobić 

00:14:14.690 --> 00:14:19.070
 zmiany w nim na mojej lokalnej maszynie, a potem mogę zrobić push, teraz musisz mieć 

00:14:19.070 --> 00:14:24.710
 repozytorium w celu wypchnięcia, więc sposób na dokonanie zmian w kimś 

00:14:24.710 --> 00:14:29.570
 repozytorium else służy do jego rozwidlenia, aby po przejściu do repozytorium kliknąć 

00:14:29.570 --> 00:14:34.040
 przycisk zwany widelcem, który w zasadzie tworzy jego kopię na Twoim koncie 

00:14:34.040 --> 00:14:37.550
 w którym można wprowadzać zmiany, i tam można wykonywać żądania ściągania 

00:14:37.550 --> 00:14:41.000
 ale są to podstawy, które pozwolą Ci zacząć 

00:14:41.000 --> 00:14:45.680
 utwórz repozytoria wgraj swoje pliki wgraj swój kod, aby móc nim manipulować 

00:14:45.680 --> 00:14:49.250
 z dowolnego systemu, dzięki czemu można go przetestować na Raspberry Pi na komputerze z systemem Windows 

00:14:49.250 --> 00:14:54.410
 na pulpicie Linuksa na czymkolwiek, a następnie wypchnij wszystkie te zmiany do 

00:14:54.410 --> 00:14:59.030
 serwer, aby można je było pobrać lub pobrać do wszystkich systemów, więc to 

00:14:59.030 --> 00:15:01.810
 wszystko w tym jest 

00:15:07.430 --> 00:15:10.480
 [Muzyka] 

