WEBVTT
Kind: captions
Language: sk

00:00:01.520 --> 00:00:07.200
 teraz, ak ste sa k nám nikdy neprihlásili na prestávku na kávu v kategórii 5, budete mať 

00:00:07.200 --> 00:00:11.490
 Viac sa o tom dozviete na televízore s piatimi bodkami, len prejdite nadol na domovskú stránku 

00:00:11.490 --> 00:00:15.570
 a uvidíte komunitnú prestávku na kávu spolu s naším plánom, keď 

00:00:15.570 --> 00:00:19.920
 urobíme ďalšiu, je to týždenná udalosť, ktorú držíme pri priblížení. “ 

00:00:19.920 --> 00:00:23.430
 a pre našu komunitu je to príležitosť stretnúť sa a vyrovnať sa 

00:00:23.430 --> 00:00:29.189
 hoci všetci dnes zažívame to, čo v našom svete prežívame 

00:00:29.189 --> 00:00:35.370
 zaujal prístup a nehovoril o týchto veciach 

00:00:35.370 --> 00:00:40.260
 ktoré nás teraz vedú dole, pozrime sa na to a povedzme, že sme všetci 

00:00:40.260 --> 00:00:47.039
 uviazol v tejto situácii, čo je to, čo robím, to ma vzrušilo 

00:00:47.039 --> 00:00:52.010
 čo to je, že experimentujem s technologicky, to je naozaj 

00:00:52.010 --> 00:00:56.489
 je pre mňa zaujímavá a pomáha mi zaberať čas, či už som doma doma 

00:00:56.489 --> 00:01:03.989
 práve teraz alebo čokoľvek takého môže byť, tak téma prišla o githubovi, pretože 

00:01:03.989 --> 00:01:10.380
 hovoríme o programovaní a Peter je tu takmer vždy a 

00:01:10.380 --> 00:01:14.580
 komunitná prestávka na kávu a Peter sa pýtal, ako dobre používať github 

00:01:14.580 --> 00:01:18.750
 v skutočnosti to nie je niečo, o čom vieme ukázať alebo hovoriť, že vás kráča 

00:01:18.750 --> 00:01:22.799
 cez prestávku na kávu, ale vyšlo najavo, že to bude naozaj hej 

00:01:22.799 --> 00:01:27.330
 dobrou témou na diskusiu o technologickej televízii kategórie 5 a jej dôvode 

00:01:27.330 --> 00:01:34.350
 prišiel pôvodne preto, že keď Microsoft kúpil github, nechali si ho 

00:01:34.350 --> 00:01:39.570
 tak ako to bolo a museli ste platiť za určité funkcie, ale 

00:01:39.570 --> 00:01:48.240
 potom zrazu veľmi nedávno spoločnosť Microsoft uviedla a všetci tí, ktorí platili za funkcie, nie 

00:01:48.240 --> 00:01:51.899
 všetky z nich okrem mnohých platili za funkcie, ktoré ste museli platiť 

00:01:51.899 --> 00:01:55.500
 pretože sú teraz zadarmo, takže berú službu a sú v podstate 

00:01:55.500 --> 00:02:00.659
 rozdávanie ich prémiových služieb úplne zadarmo na github com, tak čo je 

00:02:00.659 --> 00:02:06.600
 github no github je zatiaľ ako poskytovateľ cloudových služieb 

00:02:06.600 --> 00:02:10.800
 vývojárom nám pomáha riadiť projekty, aby ste mohli ísť 

00:02:10.800 --> 00:02:15.050
 späť v čase v podstate s kódom a je skutočne užitočné vedieť to 

00:02:15.050 --> 00:02:20.540
 pozrite sa na tieto záväzky a zistite, ako zmeny ovplyvnili váš projekt 

00:02:20.540 --> 00:02:26.330
 skvelý mechanizmus úložiska pre váš kód, pretože s ním môžete zdieľať 

00:02:26.330 --> 00:02:30.350
 iní ľudia, ak chcete, samozrejme, Microsoft to bezplatne vydávať 

00:02:30.350 --> 00:02:37.640
 teraz môžete mať aj bezplatné súkromné ​​úložiská a môžete ich nastaviť 

00:02:37.640 --> 00:02:41.300
 toľko tímov, koľko chcete, ak chcete spolupracovať s inými programátormi, ale 

00:02:41.300 --> 00:02:45.920
 v podstate to, čo pre mňa robí, je to, že mi umožňuje zdieľať svoj kód online v systéme Windows 

00:02:45.920 --> 00:02:49.459
 takým spôsobom, že ho ostatní ľudia môžu používať ako open source, môžu ho zostaviť alebo použiť 

00:02:49.459 --> 00:02:55.459
 alebo spustiť na svojich počítačoch, a ak sa rozhodnú dobre, radšej by som 

00:02:55.459 --> 00:02:59.510
 funguje to takto alebo možno tu je chyba a môžem opraviť, že môžu robiť to, čo je 

00:02:59.510 --> 00:03:05.390
 nazval požiadavku na stiahnutie, takže v podstate klonujú moje úložisko githubu môj softvér 

00:03:05.390 --> 00:03:10.730
 kód opravia na svojom počítači a potom urobia požiadavku na vytiahnutie, ktorá tlačí 

00:03:10.730 --> 00:03:16.100
 keď ju tlačia späť na svoju vidlicu, vytvorí to požiadavku na vytiahnutie 

00:03:16.100 --> 00:03:21.709
 pre mňa, aby som videl, že hej, Joe prehodí túto chybu so svojou chybou 

00:03:21.709 --> 00:03:26.720
 softvér môžem kliknúť na tlačidlo a bude importovať túto opravu do môjho softvéru tak 

00:03:26.720 --> 00:03:33.890
 je toho veľa a je to skutočne veľmi silné 

00:03:33.890 --> 00:03:37.519
 mätúce, najmä keď sa dostanete do rozmliaždenia a ich zlúčenia s nimi 

00:03:37.519 --> 00:03:41.390
 veci, do ktorých sa dnes nedostaneme, ale to, čo chcem 

00:03:41.390 --> 00:03:47.150
 ukážem vám, ako to bude mať najzákladnejšie znalosti o tom, ako to funguje 

00:03:47.150 --> 00:03:53.720
 umožňujú vám efektívne používať github ako to, kde ste 

00:03:53.720 --> 00:03:58.519
 uvedenie kódu tam ako softvér s otvoreným zdrojovým kódom a nemusí to tak byť 

00:03:58.519 --> 00:04:03.470
 môžete mať súkromie, ak chcete, ale v mojom prípade to robím, čo chcem 

00:04:03.470 --> 00:04:07.130
 ľudia, ktorí so mnou príležitostne spolupracujú, možno uverejnia problémy 

00:04:07.130 --> 00:04:10.430
 ak nájdu chybu a potom som stále ten, kto to musí opraviť, ale na 

00:04:10.430 --> 00:04:15.590
 najmenej moja komunita prichádza do môjho softvérového úložiska a hovorí, že je 

00:04:15.590 --> 00:04:21.769
 problém a musíte to napraviť v poriadku, takže github kľud je tým, kam idete, je znamením 

00:04:21.769 --> 00:04:26.360
 pre svoj bezplatný účet stačí kliknúť na odkaz a kliknúť 

00:04:26.360 --> 00:04:30.080
 zaregistrovať sa, už mám účet, takže sa prihlásim ako ja 

00:04:30.080 --> 00:04:37.789
 a prihláste sa, aby ste tu videli, že ak pôjdem do svojich úložísk, tak ak skočím 

00:04:37.789 --> 00:04:47.569
 domov tu a choď to nechať načítať tu nech sa to načítať v poriadku Idem len ísť 

00:04:47.569 --> 00:04:56.000
 Priamo na Cat 5 TV je miesto, kde hostím všetok svoj softvér, takže tam chodíte 

00:04:56.000 --> 00:04:58.909
 github.com slash cat 5 TV a uvidíte, ako to funguje 

00:04:58.909 --> 00:05:02.779
 takže vidíte, že mám veľa softvérových úložísk a všetky sú 

00:05:02.779 --> 00:05:07.099
 rôzne projekty všetky rôzne veci, ktoré som urobil alebo ktoré pokračujem 

00:05:07.099 --> 00:05:12.889
 robiť, a tam sú stránky a stránky a stránky, takže akonáhle budete mať svoj github 

00:05:12.889 --> 00:05:19.340
 účet sa môžete prihlásiť na to, čo tu vidíte, čo je môj zoznam úložísk, ale 

00:05:19.340 --> 00:05:23.090
 keď sa prvýkrát zaregistrujete, nebudete mať k dispozícii všetky tieto položky, ktoré musíte vytvoriť 

00:05:23.090 --> 00:05:26.750
 vaše prvé úložisko tak, aby to teraz pochopil aj spôsob, akým to urobím 

00:05:26.750 --> 00:05:33.289
 github nie je potrebné zabudnúť ok a git nie je to isté ako github github je 

00:05:33.289 --> 00:05:39.919
 online služby a myslieť na to, že cloudové úložisko zabudne, nie je to rovnaké 

00:05:39.919 --> 00:05:46.400
 je to online úložisko pre tento nástroj na správu balíkov s otvoreným zdrojovým kódom alebo 

00:05:46.400 --> 00:05:50.960
 nástroj pre riadenie projektov, takže tu na githubu to naozaj urobili 

00:05:50.960 --> 00:05:55.400
 ľahko povedať nové úložisko, takže som išiel do svojich úložísk a ja 

00:05:55.400 --> 00:05:59.360
 klikli na nové a potom mu dám meno, ktoré tomu budem hovoriť 

00:05:59.360 --> 00:06:07.419
 jeden môj podčiarkovník a voliteľný popis, toto je test pre šou 

00:06:07.419 --> 00:06:12.800
 či chcete, aby bol verejný alebo súkromný, a potom ho inicializujte pomocou 

00:06:12.800 --> 00:06:17.029
 readme, že je vždy najlepšie urobiť to, že to umožňuje ľuďom prístup 

00:06:17.029 --> 00:06:20.839
 ihneď vrátane toho, že chcete pridať licenciu, chcete pridať licenciu 

00:06:20.839 --> 00:06:24.740
 git ignorovať Nechám obe z nich prázdne, zistíš, čo to znamená 

00:06:24.740 --> 00:06:30.680
 budúcnosť a vytvorte si úložisko, takže teraz mám jedno, ktoré sa volá môj podčiarkovník 

00:06:30.680 --> 00:06:34.459
 ale nič tam nie je a ja som urobil s prehliadačom, takže teraz, čo idem 

00:06:34.459 --> 00:06:39.830
 urobím to, že budem vychovávať terminál a v termináli, kam idem 

00:06:39.830 --> 00:06:43.320
 napíšte v poriadku, aby ste videli, že som 

00:06:43.320 --> 00:06:48.330
 už nemáte nainštalovaný, ak nemáte nainštalovaný, takže som v systéme Linux 

00:06:48.330 --> 00:06:53.460
 Debian Linux tu môžete zadať príkaz apt install git, na ktorý sa chystáte 

00:06:53.460 --> 00:07:05.640
 typ Nie som hrubý sudo su prihlásený je rock v poriadku nainštalovať, ale bude to povedať 

00:07:05.640 --> 00:07:09.660
 mi, že už mám súčasný oh existuje nie nie, už som to dostal 

00:07:09.660 --> 00:07:13.500
 existujú aj ďalšie aktualizácie, ale pre mňa je už najnovšia verzia 

00:07:13.500 --> 00:07:17.430
 ak ho nemáte, musíte ho nainštalovať, ak používate RPM 

00:07:17.430 --> 00:07:22.980
 systém bude yum install git a nájdete ho aj vo vašom GUI 

00:07:22.980 --> 00:07:28.740
 Správca úložísk správca balíkov alebo čokoľvek, čo používate, ako napríklad synaptické 

00:07:28.740 --> 00:07:33.750
 napríklad správca balíkov, takže po inštalácii vytvorte priečinok 

00:07:33.750 --> 00:07:41.100
 pravdepodobne vo vašej domovskej zložke a tieto repozitáre nazývame len tak, aby som 

00:07:41.100 --> 00:07:46.290
 mať miesto, kde vždy viem, že môj kód je správny, takže to bude 

00:07:46.290 --> 00:07:52.650
 lokálna kópia môjho úložiska git, takže teraz napíšem klon git a my sme 

00:07:52.650 --> 00:08:00.210
 skopírujem túto adresu URL github.com lomka mačka 5 televízia lomítko môj test podčiarknutia, aby som mohol 

00:08:00.210 --> 00:08:08.010
 skopírujte, že práve pomocou ctrl C si zvyknete písať, je to vaše 

00:08:08.010 --> 00:08:13.560
 užívateľské meno lomítko váš archív a teraz áno, ak sa pozriem na môj súborový systém tak je to 

00:08:13.560 --> 00:08:20.760
 klonovať získať klon a potom názov alebo URL úložiska tak teraz 

00:08:20.760 --> 00:08:25.920
 ak pôjdem do svojho domovského priečinka a potom si do úložiska všimnem, že je vo vlastníctve root 

00:08:25.920 --> 00:08:31.740
 pretože vidím super používateľa vole žalovať, takže teraz existuje priečinok s názvom môj test a 

00:08:31.740 --> 00:08:38.250
 v rámci môjho testu je súbor s názvom readme MD, takže v tomto priečinku som 

00:08:38.250 --> 00:08:43.250
 ísť do môjho testu a chcem vytvoriť nový súbor, ktorý budem nazývať 

00:08:43.250 --> 00:08:50.970
 nano test dot SH a vytvoríme rýchly SH súbor na spustenie bash skriptu a 

00:08:50.970 --> 00:08:55.640
 Idem tam napísať echo ahoj, ako sa má, že by som mal naozaj? 

00:08:55.640 --> 00:09:00.970
 drž sa normálneho ahoj sveta ako je to v poriadku 

00:09:00.970 --> 00:09:05.690
 takže som to napísal a uzavrel som to, takže teraz vidíte, že sa volá súbor 

00:09:05.690 --> 00:09:13.910
 test bod s H teraz, keď som preniesť súbor až do github povolenia sú 

00:09:13.910 --> 00:09:18.500
 bude zahrnutý do tohto tlaku, takže ak urobím bodku s lomkou test bodku s tebou 

00:09:18.500 --> 00:09:23.360
 Všimnite si, že hovorí, že povolenie bolo odmietnuté 

00:09:23.360 --> 00:09:30.680
 plus x test dot s H, takže teraz, keď napíšem test dot dot HS s hello world, takže teraz 

00:09:30.680 --> 00:09:35.510
 mať môj prvý kúsok skriptu pripravený ísť hore do githubu, je to súčasť môjho 

00:09:35.510 --> 00:09:41.870
 úložisko na mojom lokálnom počítači, ale ešte nie je v github, takže ak sa pozriete na 

00:09:41.870 --> 00:09:45.500
 github Obnovím sa, aby som preukázal, že tu vidíš svoj zoznam súborov 

00:09:45.500 --> 00:09:50.390
 stále je tu len súbor readme, takže teraz v mojom terminálovom okne sa chystám 

00:09:50.390 --> 00:09:56.330
 znova použite tento príkaz git, že pôjdem získať hviezdu v úložiskách 

00:09:56.330 --> 00:10:01.270
 priečinok, ktorý hovorí, nájsť všetky súbory, ktoré majú nejaké zmeny, a pridať ich v poriadku 

00:10:01.270 --> 00:10:09.680
 spáchať - a potom v úvodzovkách pomenovať spáchať svoje meno, tak to poviem 

00:10:09.680 --> 00:10:14.480
 môj prvý skript a to sú len krátke krátke popisy a stlačte Enter a 

00:10:14.480 --> 00:10:19.220
 teraz sa hovorí, že nám musíte povedať, kto ste, pretože ste nikdy predtým 

00:10:19.220 --> 00:10:24.380
 spustite git na tomto počítači predtým, takže musíte tieto dva príkazy spustiť pekne 

00:10:24.380 --> 00:10:29.030
 jednoduché nastavenie - - globálne musíte 

00:10:29.030 --> 00:10:33.350
 Urob to raz, nebojte sa e-mailov s bodkami od používateľov a ak máte problémy so zadaním tohto textu 

00:10:33.350 --> 00:10:39.980
 skopírujte to v poriadku a potom v úvodzovkách umiestnim Robbyho do kategórie 5 a to je všetko 

00:10:39.980 --> 00:10:48.890
 len to poviem moju e-mailovú adresu a potom idem na meno používateľa, ktorého neviem 

00:10:48.890 --> 00:10:52.550
 ak to počujete, ale je to skutočne zlá búrka mimo nášho štúdia 

00:10:52.550 --> 00:10:56.720
 dnes svetlá niekoľkokrát blikajú a myslím si, že ich dostaneme 

00:10:56.720 --> 00:11:02.090
 cez to tak ako tak, takže všetko v poriadku, odstrániť a zmeniť moje meno na Robby 

00:11:02.090 --> 00:11:06.710
 Ferguson vstúpil ok hotovo, takže to musím urobiť len raz, takže teraz scéna 

00:11:06.710 --> 00:11:11.420
 nabudúce spustím tento git commit - len ho pridávam v poriadku 

00:11:11.420 --> 00:11:15.050
 takže som ho pridal a zistí, že jeden súbor sa zmenil, existujú dva 

00:11:15.050 --> 00:11:20.270
 vloženia a vyskúšanie SH je nové, takže to teraz vytvorí finále 

00:11:20.270 --> 00:11:26.450
 príkaz, ktorý musím zadať, je získať pôvod a budem špecifikovať 

00:11:26.450 --> 00:11:32.360
 pán, ktorý je majstrom pobočky, takže pôvodný majster a teraz to bude 

00:11:32.360 --> 00:11:35.720
 požiadať ma o moje užívateľské meno a heslo, ktoré som zadal pri vytvorení môjho 

00:11:35.720 --> 00:11:44.360
 účet tak cat5 TV je moje užívateľské meno a moje heslo, ktoré používam LastPass a generujem nové 

00:11:44.360 --> 00:11:49.430
 heslá stále a sú obrovské a šialené, takže som skopíroval heslo 

00:11:49.430 --> 00:11:57.500
 a potom som to prilepil a tam to ide nahrať tieto údaje do môjho 

00:11:57.500 --> 00:12:02.840
 úložisko a je to hotové, takže f5 sa obnovuje a mali by ste vidieť testovací SH 

00:12:02.840 --> 00:12:09.200
 je teraz súčasťou môjho úložiska githubov a tam to je a ukazuje to, že je 

00:12:09.200 --> 00:12:17.330
 výkonný ahoj svet, takže teraz späť, takže predstierajme, že som urobil zmeny 

00:12:17.330 --> 00:12:20.750
 inde na inom počítači a urobím to prostredníctvom prehliadača 

00:12:20.750 --> 00:12:29.270
 Len aby som ti to ukázal, v tomto systéme sa budem znova ozývať dobre a potom 

00:12:29.270 --> 00:12:33.680
 Tieto zmeny uložím, nedám jej meno ani nič podobné 

00:12:33.680 --> 00:12:37.340
 tento popis len potvrdím, takže teraz skript vyzerá takto 

00:12:37.340 --> 00:12:41.600
 ako to môžem zmeniť aj v prehliadači, môžete tak urobiť odkiaľkoľvek, ak teraz 

00:12:41.600 --> 00:12:47.510
 Pozerám sa na svoj súbor lokálne na mojom počítači v úložisku, kde ho stále máme 

00:12:47.510 --> 00:12:53.630
 len hovorí, ahoj svet, dobre, takže sa budem znova ťahať a robím to všetko 

00:12:53.630 --> 00:12:58.700
 v testovacom priečinku podčiarknutia, takže git pull bude hľadať akékoľvek 

00:12:58.700 --> 00:13:02.510
 zmeny, ktoré boli vykonané inde, a stiahnite ich do môjho počítača 

00:13:02.510 --> 00:13:07.460
 tieto zmeny sa vždy synchronizujú, takže ak teraz otvorím Nano a otvorím tento súbor 

00:13:07.460 --> 00:13:14.000
 môžete vidieť, že nové ahoj znovu je súčasťou toho, tak ti ukážem ozvenu 

00:13:14.000 --> 00:13:20.270
 ahoj krát tri a zachránim to a teraz urobím presný 

00:13:20.270 --> 00:13:22.400
 to isté, ale ukážem vám, aké je to teraz 

00:13:22.400 --> 00:13:28.490
 Už som zadal svoje meno a moju e-mailovú adresu dostanem Ad Star - 

00:13:28.490 --> 00:13:39.410
 Mám konečnú aktualizáciu získaj hlavný pôvod programu cap 5 TV je moje užívateľské meno a moje heslo 

00:13:39.410 --> 00:13:50.120
 je reťazec s približne 64 znakmi vybratými náhodne a chystám sa vložiť 

00:13:50.120 --> 00:13:56.060
 že tam a tam ideme, takže to je všetko, čo teraz tlačí moje zmeny 

00:13:56.060 --> 00:14:00.680
 lokálne na serveri github, aby ho znova zdieľali všetci ostatní alebo 

00:14:00.680 --> 00:14:05.510
 so svojimi ostatnými systémami, keď sa dostanem, takže tým, že môžem získať clomp 

00:14:05.510 --> 00:14:09.980
 Prepáč mi niečo klonovať a nemusí to byť moje, môže to byť 

00:14:09.980 --> 00:14:14.690
 repozitár niekoho iného, ​​pokiaľ je to verejné, ale potom to dokážem 

00:14:14.690 --> 00:14:19.070
 zmeny na mojom miestnom počítači a potom môžem urobiť push teraz musíte vlastniť 

00:14:19.070 --> 00:14:24.710
 úložisko, aby sa urobil tlak, takže spôsob, ako niekomu urobiť zmeny 

00:14:24.710 --> 00:14:29.570
 Iným úložiskom je rozvetvenie, takže keď pôjdete do úložiska, na ktoré kliknete 

00:14:29.570 --> 00:14:34.040
 tlačidlo zvané vidlička a v podstate vytvorí jeho kópiu na váš vlastný účet 

00:14:34.040 --> 00:14:37.550
 že môžete vykonať zmeny a potom môžete robiť žiadosti o stiahnutie 

00:14:37.550 --> 00:14:41.000
 ale to sú základy, ktoré vám pomôžu začať 

00:14:41.000 --> 00:14:45.680
 vytvorte úložiská odovzdajte svoje súbory odovzdajte svoj kód, aby ste s nimi mohli manipulovať 

00:14:45.680 --> 00:14:49.250
 z ľubovoľného systému, takže si ho môžete otestovať na Raspberry Pi na počítači so systémom Windows 

00:14:49.250 --> 00:14:54.410
 na vašom počítači so systémom Linux na čokoľvek a potom všetky tieto zmeny presuňte na 

00:14:54.410 --> 00:14:59.030
 server, aby ich bolo možné stiahnuť alebo stiahnuť do všetkých vašich systémov 

00:14:59.030 --> 00:15:01.810
 všetko je k tomu 

00:15:07.430 --> 00:15:10.480
 [Music] 

