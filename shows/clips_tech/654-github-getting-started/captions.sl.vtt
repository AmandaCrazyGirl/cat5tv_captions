WEBVTT
Kind: captions
Language: sl

00:00:01.520 --> 00:00:07.200
 zdaj, če se nam še nikoli niste pridružili na skupnem oddihu za kavo v kategoriji 5 

00:00:07.200 --> 00:00:11.490
 več o tem najdete na petčkovni televiziji s petimi kategorijami, samo se pomaknite navzdol na domači strani 

00:00:11.490 --> 00:00:15.570
 in tam boste videli oddih za kavo v skupnosti skupaj z našim urnikom kdaj 

00:00:15.570 --> 00:00:19.920
 naredili bomo naslednji, to je tedenski dogodek, ki ga držimo za povečanje. " 

00:00:19.920 --> 00:00:23.430
 in to je priložnost, da se naša skupnost zbere skupaj in enakomerno 

00:00:23.430 --> 00:00:29.189
 čeprav vsi danes doživljamo to, kar danes doživljamo v našem svetu 

00:00:29.189 --> 00:00:35.370
 uporabil pristop, da bi namesto tega govoril o stvareh 

00:00:35.370 --> 00:00:40.260
 ki nas zdaj spustijo navzdol, poglejmo si in rečemo, da smo vsi 

00:00:40.260 --> 00:00:47.039
 obtičal v tej situaciji, kaj je tisto, kar počnem, kar me je navdušilo 

00:00:47.039 --> 00:00:52.010
 s čim eksperimentiram s tehnološkim, kar je v resnici 

00:00:52.010 --> 00:00:56.489
 mi je zanimivo in mi pomaga zasedati čas, ali sem obtičal doma 

00:00:56.489 --> 00:01:03.989
 v tem trenutku ali kar koli že je tako, da se je tema pojavila o githubu 

00:01:03.989 --> 00:01:10.380
 govorimo o programiranju in Peter je skoraj vsakič tam 

00:01:10.380 --> 00:01:14.580
 oddih za kavo v skupnosti in Peter se je dobro vprašal, kako dobro uporabljate github 

00:01:14.580 --> 00:01:18.750
 v resnici niso nekaj, kar vam lahko pokažemo ali govorimo, da vas sprehodite 

00:01:18.750 --> 00:01:22.799
 na odmoru za kavo, vendar je prišlo tako dobro, da bi bilo to res 

00:01:22.799 --> 00:01:27.330
 dobra tema za razpravo o peti tehnološki televiziji kategorije in razlog za to 

00:01:27.330 --> 00:01:34.350
 se je sprva pojavil zato, ker je Microsoft kupil github 

00:01:34.350 --> 00:01:39.570
 šlo je za trenutno stanje, kakršno je bilo, in morali ste plačati za nekatere funkcije, vendar 

00:01:39.570 --> 00:01:48.240
 potem je nenadoma zelo nedavno rekel Microsoft in vsi, ki so plačali za funkcije, ne 

00:01:48.240 --> 00:01:51.899
 vsi, vendar veliko tistih, ki so plačali za funkcije, ki ste jih morali nekoč plačati 

00:01:51.899 --> 00:01:55.500
 za zdaj so brezplačni, zato so vzeli storitev in v bistvu so 

00:01:55.500 --> 00:02:00.659
 kar ponuja brezplačno brezplačno storitev pri github com, kaj je torej 

00:02:00.659 --> 00:02:06.600
 github dobro github je nekako podoben ponudniku storitev v oblaku, vendar je za to 

00:02:06.600 --> 00:02:10.800
 razvijalci nam pomaga, da lahko upravljamo svoje projekte, tako da lahko greste 

00:02:10.800 --> 00:02:15.050
 nazaj v čas v bistvu s kodo in res je koristno, da se lahko 

00:02:15.050 --> 00:02:20.540
 si oglejte te zaveze in si oglejte, kako so spremembe vplivale na vaš projekt 

00:02:20.540 --> 00:02:26.330
 odličen mehanizem za shranjevanje kode, ker ga lahko daste v skupno rabo 

00:02:26.330 --> 00:02:30.350
 drugi ljudje, če hočete zdaj, seveda Microsoft, ki omogoča brezplačno 

00:02:30.350 --> 00:02:37.640
 Zdaj lahko imate tudi brezplačna zasebna skladišča in jih lahko nastavite 

00:02:37.640 --> 00:02:41.300
 toliko ekip, kot želite, če želite sodelovati z drugimi programerji, vendar 

00:02:41.300 --> 00:02:45.920
 V bistvu to, kar mi omogoča, je, da mi omogoča, da v spletu delim svojo kodo 

00:02:45.920 --> 00:02:49.459
 tako, da ga lahko drugi ljudje uporabljajo z odprto kodo, ki ga lahko sestavijo ali uporabijo 

00:02:49.459 --> 00:02:55.459
 ga uporabim na lastnih računalnikih, potem pa raje, če se bodo dobro odločili 

00:02:55.459 --> 00:02:59.510
 deluje na ta način ali morda tukaj je hrošček in lahko odpravim, da lahko naredijo karkoli 

00:02:59.510 --> 00:03:05.390
 ki jo kličemo po zahtevi, zato klonirajo moje github skladišče moje programske opreme 

00:03:05.390 --> 00:03:10.730
 kodo popravijo na svojem računalniku in nato naredijo zahtevo poteg, ki potisne 

00:03:10.730 --> 00:03:16.100
 nazaj, medtem ko ga potisnejo nazaj na vilice in nato ustvari zahtevo za vleko 

00:03:16.100 --> 00:03:21.709
 zame, tako da vidim, da bo hej Joe razstrelil to napako z mojo 

00:03:21.709 --> 00:03:26.720
 programsko opremo lahko kliknem na gumb in to uvozi popravek v mojo programsko opremo 

00:03:26.720 --> 00:03:33.890
 v tem je ogromno in res je zelo močan 

00:03:33.890 --> 00:03:37.519
 zmede, še posebej, ko prideš v stiskanje in spajanje njih in tistih 

00:03:37.519 --> 00:03:41.390
 vrste stvari, ki se jih danes ne bomo spuščali, ampak tisto, kar si želim 

00:03:41.390 --> 00:03:47.150
 pokaže, kako gre za najosnovnejše znanje o tem, kako deluje 

00:03:47.150 --> 00:03:53.720
 vam omogočajo, da učinkovito uporabljate github in si omislite to, kje ste 

00:03:53.720 --> 00:03:58.519
 dajte svojo kodo tam kot odprtokodno programsko opremo in je ni treba 

00:03:58.519 --> 00:04:03.470
 če ga želite, lahko imate zasebno, toda v mojem primeru to hočem 

00:04:03.470 --> 00:04:07.130
 ljudje občasno sodelujejo z mano, morda bodo objavili težave 

00:04:07.130 --> 00:04:10.430
 če najdejo napako in sem še vedno oseba, ki jo mora odpraviti, vendar na 

00:04:10.430 --> 00:04:15.590
 vsaj moja skupnost prihaja v moje skladišče programske opreme in pravi, da je to 

00:04:15.590 --> 00:04:21.769
 problem in ga morate odpraviti v redu, tako da je github mirna, kamor greš, znak 

00:04:21.769 --> 00:04:26.360
 za svoj brezplačni račun morate samo klikniti povezavo in kliknite 

00:04:26.360 --> 00:04:30.080
 registriraj se zdaj že imam račun, da se bom prijavil kot sam 

00:04:30.080 --> 00:04:37.789
 in se prijavite, da boste tukaj videli, da če grem v svoje skladišča, če skočim 

00:04:37.789 --> 00:04:47.569
 domov in pojdi, da se naloži tukaj, da se naloži v redu. Samo grem 

00:04:47.569 --> 00:04:56.000
 Neposredno na mačko 5 TV sem gostil vso svojo programsko opremo, tako da greš tja 

00:04:56.000 --> 00:04:58.909
 github.com slash cat 5 TV in vidite, kako to deluje 

00:04:58.909 --> 00:05:02.779
 tako da vidite, da imam na voljo veliko skladišč programske opreme in vsi so 

00:05:02.779 --> 00:05:07.099
 različni projekti vse različne stvari, ki sem jih naredil ali kar nadaljujem 

00:05:07.099 --> 00:05:12.889
 narediti in obstajajo strani in strani in strani le-te, tako da ko enkrat dobite svoj github 

00:05:12.889 --> 00:05:19.340
 račun lahko se prijavite v tisto, kar vidite tukaj, vendar je moj seznam skladišč, vendar 

00:05:19.340 --> 00:05:23.090
 Ko se prvič prijavite, ne boste imeli vsega tega, kar morate ustvariti 

00:05:23.090 --> 00:05:26.750
 tvoje prvo skladišče, tako da zdaj razumem način, kako bom to storil 

00:05:26.750 --> 00:05:33.289
 pozabite, da github ni v redu, gitub pa ni isto kot github github 

00:05:33.289 --> 00:05:39.919
 spletna storitev in si omislite to kot shranjevanje v oblaku, pozabite ok, ni isto 

00:05:39.919 --> 00:05:46.400
 stvar je spletna shramba za to odprtokodno orodje za upravljanje paketov ali 

00:05:46.400 --> 00:05:50.960
 orodje za upravljanje projektov, tako da so tukaj na githubu naredili res zares 

00:05:50.960 --> 00:05:55.400
 enostavno rečeno novo repozitorij, zato sem odšel v svoja skladišča in sem jih 

00:05:55.400 --> 00:05:59.360
 kliknil na novo in potem mu bom dal ime, ki ga bom poklical 

00:05:59.360 --> 00:06:07.419
 en moj podčrtani test in neobvezen opis to je test za oddajo 

00:06:07.419 --> 00:06:12.800
 ali želite, da je javno ali zasebno, nato pa ga inicializirajte z 

00:06:12.800 --> 00:06:17.029
 readme, vedno je najbolje narediti, da je to tako, da lahko ljudje dostopajo do njega 

00:06:17.029 --> 00:06:20.839
 takoj, vključno s seboj, če želite dodati licenco, ali želite dodati 

00:06:20.839 --> 00:06:24.740
 git ignore Jaz bom pustil oba prazna, boste odkrili, kaj to pomeni 

00:06:24.740 --> 00:06:30.680
 prihodnost in ustvarite svoje repozitorij, tako da imam zdaj eno, ki se imenuje moj podčrtani test 

00:06:30.680 --> 00:06:34.459
 toda nič ni in končal sem z brskalnikom, tako da zdaj grem 

00:06:34.459 --> 00:06:39.830
 storiti je, da bom pripeljal svoj terminal in v svojem terminalu grem 

00:06:39.830 --> 00:06:43.320
 V redu je, da boš videl, da sem ga 

00:06:43.320 --> 00:06:48.330
 ga že namestite, če ga še nimate nameščenega, zato sem v Linuxu 

00:06:48.330 --> 00:06:53.460
 Debian Linux tukaj lahko vnesete apt install git 

00:06:53.460 --> 00:07:05.640
 tip Nisem nesramen, če sem prijavljen, je rock ok apt namestiti, vendar bo to povedal 

00:07:05.640 --> 00:07:09.660
 meni, da trenutno že imam oh a ne, ne, že ga imam 

00:07:09.660 --> 00:07:13.500
 obstajajo še druge posodobitve zame, vendar get je že najnovejša različica 

00:07:13.500 --> 00:07:17.430
 če ga nimate, ga morate namestiti, če uporabljate RPM 

00:07:17.430 --> 00:07:22.980
 sistem bo yum install git in ga najdete tudi v vašem GUI-ju 

00:07:22.980 --> 00:07:28.740
 upravitelja skladišča, vašega upravitelja paketov ali vsega, kar uporabljate, kot kakšen sinaptik 

00:07:28.740 --> 00:07:33.750
 na primer upravitelja paketov, na primer, ko se namestite, naredite mapo 

00:07:33.750 --> 00:07:41.100
 verjetno v vaši domači mapi in bomo ta repozitorija poklicali kar tako, da jaz 

00:07:41.100 --> 00:07:46.290
 imejte kraj, kjer vedno vem, da je moja koda prava, tako da bo to 

00:07:46.290 --> 00:07:52.650
 lokalna kopija mojega git skladišča, zato bom zdaj vtipkal git klon in smo 

00:07:52.650 --> 00:08:00.210
 bom kopiral ta URL github.com poševna mačka 5 TV poševnica moj podčrtani test, da bom lahko 

00:08:00.210 --> 00:08:08.010
 kopirajte samo s ctrl C, da se boste navadili, da ga samo vtipkate 

00:08:08.010 --> 00:08:13.560
 uporabniško ime prereže vaše skladišče in zdaj, če pogledam moj datotečni sistem, je tako 

00:08:13.560 --> 00:08:20.760
 klonirajte se klonirajte in nato ime ali URL skladišča 

00:08:20.760 --> 00:08:25.920
 če grem v domačo mapo in nato v shrambe opazim, da je last root 

00:08:25.920 --> 00:08:31.740
 ker vidim super uporabnika, da toži, tako da je zdaj mapa z imenom moj test in 

00:08:31.740 --> 00:08:38.250
 znotraj mojega testa je datoteka, ki se imenuje readme MD, torej znotraj te mape, tako da sem 

00:08:38.250 --> 00:08:43.250
 se bom preizkusil in želim ustvariti novo datoteko, ki jo bom poklical 

00:08:43.250 --> 00:08:50.970
 nano test dot SH in ustvarili bomo hitro SH datoteko za zagon bash skripta in 

00:08:50.970 --> 00:08:55.640
 Tam bom vtipkal odmev, kako je to v resnici 

00:08:55.640 --> 00:09:00.970
 drži se norme zdravi svet, kako je to v redu 

00:09:00.970 --> 00:09:05.690
 zato sem to napisal in zaprl, tako da zdaj vidite, da se imenuje datoteka 

00:09:05.690 --> 00:09:13.910
 preskusna pika s H zdaj, ko prenesem datoteko do github, so dovoljenja 

00:09:13.910 --> 00:09:18.500
 bom vključen s tem potiskom, tako da če naredim preskusno poševno piko, bodim z vami 

00:09:18.500 --> 00:09:23.360
 obvestilo piše, da dovoljenje zavrača, da ga moram izvršno izvršiti vse chmod 

00:09:23.360 --> 00:09:30.680
 plus x preskusna pika s H, tako da zdaj, če vtipkam testno piko s svetlobnim svetom HS, tako da zdaj 

00:09:30.680 --> 00:09:35.510
 imam pripravljen svoj prvi košček skripta, da grem na github, to je del mojega 

00:09:35.510 --> 00:09:41.870
 skladišča v mojem lokalnem računalniku, vendar še ni v github-u, zato če pogledate 

00:09:41.870 --> 00:09:45.500
 github Osvežil bom samo, da dokažem, da tukaj vidite svoj seznam datotek in 

00:09:45.500 --> 00:09:50.390
 je še vedno le readme ok, tako da bom zdaj nazaj v oknu svojega terminala 

00:09:50.390 --> 00:09:56.330
 znova uporabite ta git ukaz, da bom v skladišče dodal zvezdo 

00:09:56.330 --> 00:10:01.270
 mapo, ki govori, poiščite datoteke, ki imajo kakršne koli spremembe, in jih dodajte v redu 

00:10:01.270 --> 00:10:09.680
 zavezi se - in nato v citatih imej svojo zavezo, zato bom povedal 

00:10:09.680 --> 00:10:14.480
 moj prvi scenarij in to so le kratki majhni opisi in hit enter in 

00:10:14.480 --> 00:10:19.220
 zdaj govori hej, povedati nam morate kdo ste, ker še nikoli niste 

00:10:19.220 --> 00:10:24.380
 pred tem zaženite git v tem računalniku, zato morate ta dva ukaza zagnati 

00:10:24.380 --> 00:10:29.030
 naravnost dobiti config - - globalno morate samo 

00:10:29.030 --> 00:10:33.350
 to storite enkrat, ne skrbite, da uporabnik ne bo dobil e-pošte in če imate težave le z tipkanjem 

00:10:33.350 --> 00:10:39.980
 kopirajte v redu in potem bom v narekovajih postavil Robbyja v kategorijo 5 TV in to je to 

00:10:39.980 --> 00:10:48.890
 samo povem svoj e-poštni naslov, potem bom šel uporabniško piko, ki je ne vem 

00:10:48.890 --> 00:10:52.550
 če to slišite, je pa resnično huda nevihta zunaj našega studia 

00:10:52.550 --> 00:10:56.720
 danes tako luči nekajkrat utripajo, ampak mislim, da bomo prišli 

00:10:56.720 --> 00:11:02.090
 preko njega tako ali tako v redu, izbrisati to in spremeniti moje ime v Robby 

00:11:02.090 --> 00:11:06.710
 Ferguson vstopi v redu, tako da moram to storiti samo nekoč, tako da zdaj prizor 

00:11:06.710 --> 00:11:11.420
 naslednjič, ko zaženem git zavezo - ali ga samo dodam v redu 

00:11:11.420 --> 00:11:15.050
 zato sem ga dodal in vidi se, da se je ena datoteka spremenila, dve sta 

00:11:15.050 --> 00:11:20.270
 Vstavki in preizkusi SH je novo, tako da bo to ustvarilo zdaj končno 

00:11:20.270 --> 00:11:26.450
 ukaz, ki ga moram vnesti, je get origin in bom določil 

00:11:26.450 --> 00:11:32.360
 mojster, ki je mojster podružnice, torej mojster porekla in zdaj bo šlo 

00:11:32.360 --> 00:11:35.720
 vprašajte me za uporabniško ime in geslo, ki sta ga vnesla, ko sem ustvarila svoje 

00:11:35.720 --> 00:11:44.360
 račun, zato je cat5 TV moje uporabniško ime in moje geslo. Uporabljam LastPass in ustvarjam novo 

00:11:44.360 --> 00:11:49.430
 ves čas gesla in so množična in nora, zato sem kopiral geslo 

00:11:49.430 --> 00:11:57.500
 in potem sem ga prilepila in tam gre, da naloži podatke v svoje 

00:11:57.500 --> 00:12:02.840
 skladišče in je narejeno tako, da se osveži f5 in videli bi testni SH 

00:12:02.840 --> 00:12:09.200
 je zdaj del mojega github skladišča in tam je in kaže, da je 

00:12:09.200 --> 00:12:17.330
 Zdravo, zdravi svet, zato se vrni tukaj, zato se samo pretvarjam, da sem spremenil spremembe 

00:12:17.330 --> 00:12:20.750
 drugje tako na drugem računalniku in to bom storil prek brskalnika 

00:12:20.750 --> 00:12:29.270
 samo, da vam tako pokažem v tem sistemu, bom šel še enkrat pozdraviti v redu in potem 

00:12:29.270 --> 00:12:33.680
 Te spremembe bom rešil, ne bom ji dal imena ali česa podobnega 

00:12:33.680 --> 00:12:37.340
 ta opis bom samo potrdil, tako da je zdaj videti tako, da je scenarij videti tako 

00:12:37.340 --> 00:12:41.600
 kako to spremenim tudi v brskalniku, lahko to storite od koder koli, tako da zdaj, če 

00:12:41.600 --> 00:12:47.510
 Lokalno datoteko si ogledam v računalniku v skladišču, kjer jo še vedno obiščemo 

00:12:47.510 --> 00:12:53.630
 samo pravi, zdravi svet v redu, zato se bom spet potegnil. Vse to počnem 

00:12:53.630 --> 00:12:58.700
 v preskusni mapi moje podčrtaje, tako da bo git pull nato poiskal vse 

00:12:58.700 --> 00:13:02.510
 spremembe, ki so bile opravljene drugje, in jih tako povlečem navzdol do mojega računalnika 

00:13:02.510 --> 00:13:07.460
 te spremembe vedno sinhronizira, tako da zdaj, če odprem Nano in odprem to datoteko 

00:13:07.460 --> 00:13:14.000
 lahko vidite, da je novo zdravo zdaj del tega, zato vam bom pokazal odmev 

00:13:14.000 --> 00:13:20.270
 pozdrav trikrat in to bom rešil in zdaj bom storil natančno 

00:13:20.270 --> 00:13:22.400
 ista stvar, vendar vam pokažem, kako je zdaj drugače 

00:13:22.400 --> 00:13:28.490
 Svoje ime in svoj e-poštni naslov sem že vnesel. 

00:13:28.490 --> 00:13:39.410
 Sem končna posodobitev get push origin master cap 5 TV je moje uporabniško ime in moje geslo 

00:13:39.410 --> 00:13:50.120
 je niz približno 64 znakov, naključno izbranih in bom prilepil 

00:13:50.120 --> 00:13:56.060
 da sem in tja gremo, tako da je to vse, kar zdaj lahko spodbudim moje spremembe 

00:13:56.060 --> 00:14:00.680
 lokalno na github strežnik, tako da ga znova deli z vsemi drugimi oz 

00:14:00.680 --> 00:14:05.510
 pri mojih drugih sistemih, ko se potegnem, tako da se lahko zatečem 

00:14:05.510 --> 00:14:09.980
 pardon me git kloniram nekaj in ni nujno, da je moje, lahko je 

00:14:09.980 --> 00:14:14.690
 nekoga drugega gitub skladišča, dokler je javno, potem pa lahko naredim 

00:14:14.690 --> 00:14:19.070
 se spremeni na mojem lokalnem stroju in nato lahko storim pritisk, ki ga morate zdaj imeti 

00:14:19.070 --> 00:14:24.710
 shrambo, da bi naredili potisk, tako da lahko nekdo spremeni spremembe 

00:14:24.710 --> 00:14:29.570
 Repozitorij drugega je razrezati, tako da, ko greste v skladišče, kliknete 

00:14:29.570 --> 00:14:34.040
 gumb se imenuje vilice in v bistvu naredi kopijo v svojem računu 

00:14:34.040 --> 00:14:37.550
 da lahko spreminjate in potem lahko tu opravite s povpraševanjem 

00:14:37.550 --> 00:14:41.000
 toda to so osnove za začetek, kar vam bo omogočilo 

00:14:41.000 --> 00:14:45.680
 ustvarite skladišča, naložite datoteke, naložite svojo kodo, da lahko upravljate 

00:14:45.680 --> 00:14:49.250
 iz katerega koli sistema, tako da ga lahko preizkusite na Raspberry Pi na vašem računalniku Windows 

00:14:49.250 --> 00:14:54.410
 na namizju Linuxa na katerem koli in nato vse te spremembe potisnite do 

00:14:54.410 --> 00:14:59.030
 strežnik, da jih je mogoče prenesti ali povleči v vse vaše sisteme, tako da je to 

00:14:59.030 --> 00:15:01.810
 vse, kar je zanj 

00:15:07.430 --> 00:15:10.480
 [Glasba] 

