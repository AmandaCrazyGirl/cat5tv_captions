WEBVTT
Kind: captions
Language: zh-Hans

00:00:01.520 --> 00:00:07.200
现在，如果您从未加入我们参加第5类社区咖啡休息时间， 

00:00:07.200 --> 00:00:11.490
在第5类点播电视上找到更多相关信息，只需在首页上向下滚动即可

00:00:11.490 --> 00:00:15.570
您会看到社区的咖啡休息时间以及我们的时间表

00:00:15.570 --> 00:00:19.920
我们将要进行下一个，这是每周一次的活动，我们将继续进行缩放” 

00:00:19.920 --> 00:00:23.430
这是我们社区团结甚至团结的机会

00:00:23.430 --> 00:00:29.189
尽管我们今天都在经历我们当今世界所经历的

00:00:29.189 --> 00:00:35.370
采取说话而不是谈论那些事情的方法

00:00:35.370 --> 00:00:40.260
现在让我们失望的是，让我们看一下，说看，我们都

00:00:40.260 --> 00:00:47.039
卡在这种情况下我在做什么是什么让我兴奋

00:00:47.039 --> 00:00:52.010
我正在尝试的技术是什么？ 

00:00:52.010 --> 00:00:56.489
对我来说很有趣，无论我是否呆在家里，都可以帮助我占用时间

00:00:56.489 --> 00:01:03.989
现在或任何情况下，所以话题出现在github上，因为

00:01:03.989 --> 00:01:10.380
我们在谈论编程，而Peter几乎每次都在那里

00:01:10.380 --> 00:01:14.580
社区喝咖啡休息时间，Peter问得好，如何很好地使用github 

00:01:14.580 --> 00:01:18.750
他们不是我们可以显示或交谈的东西，而是可以走路的东西

00:01:18.750 --> 00:01:22.799
通过了咖啡休息时间，但结果是，嘿，那将是一个真正的

00:01:22.799 --> 00:01:27.330
讨论第五类技术电视的好话题及其原因

00:01:27.330 --> 00:01:34.350
最初出现是因为当微软购买github时他们保留了它

00:01:34.350 --> 00:01:39.570
保持现状，您必须为某些功能付费

00:01:39.570 --> 00:01:48.240
然后突然之间，最近微软说，所有这些功能都没有支付

00:01:48.240 --> 00:01:51.899
所有这些，但很多都用您以前必须支付的功能付费

00:01:51.899 --> 00:01:55.500
因为现在是免费的，所以他们正在接受服务，并且基本上

00:01:55.500 --> 00:02:00.659
在github com上完全免费提供其优质服务，这是什么

00:02:00.659 --> 00:02:06.600
 github好github有点像云服务提供商，但是

00:02:06.600 --> 00:02:10.800
开发人员可以帮助我们管理项目，以便您可以

00:02:10.800 --> 00:02:15.050
时光倒流基本上与代码有关，能够

00:02:15.050 --> 00:02:20.540
查看这些提交，并查看更改如何影响了您的项目，这也是

00:02:20.540 --> 00:02:26.330
很好的代码存储机制，因为您可以与之共享

00:02:26.330 --> 00:02:30.350
其他人，如果您现在想要，当然Microsoft可以免费提供它

00:02:30.350 --> 00:02:37.640
您现在也可以拥有免费的私人存储库，并且可以进行设置

00:02:37.640 --> 00:02:41.300
如果您想与其他程序员合作，可以根据需要选择尽可能多的团队，但是

00:02:41.300 --> 00:02:45.920
从本质上讲，它为我所做的是，它使我可以在线共享我的代码

00:02:45.920 --> 00:02:49.459
这样其他人可以使用它开源的方式，他们可以编译或使用

00:02:49.459 --> 00:02:55.459
或在自己的计算机上运行它，然后如果他们决定哦，我宁愿

00:02:55.459 --> 00:02:59.510
它以这种方式工作，或者可能是一个错误，我可以修复他们可以做的事情

00:02:59.510 --> 00:03:05.390
叫做拉取请求，所以基本上他们克隆了我的github存储库我的软件

00:03:05.390 --> 00:03:10.730
代码，他们将其修复在计算机上，然后执行请求请求

00:03:10.730 --> 00:03:16.100
当他们将其推回叉中时，它会返回，然后创建一个拉取请求

00:03:16.100 --> 00:03:21.709
对我来说，让我看到嘿乔会和我一起解决这个错误

00:03:21.709 --> 00:03:26.720
我可以单击一个按钮，它将把该修复程序导入到我的软件中，因此

00:03:26.720 --> 00:03:33.890
有很多东西，而且它确实非常强大

00:03:33.890 --> 00:03:37.519
尤其是当您挤入并合并它们以及那些

00:03:37.519 --> 00:03:41.390
今天我们不会涉及的事情，但我想做的事情

00:03:41.390 --> 00:03:47.150
向您展示有关其工作原理的最基本知识

00:03:47.150 --> 00:03:53.720
允许您有效地使用github，将其视为您所处的位置

00:03:53.720 --> 00:03:58.519
将您的代码作为开源软件放到那里，而不必

00:03:58.519 --> 00:04:03.470
您可以根据需要将其设为私有，但就我而言，这就是我想要的

00:04:03.470 --> 00:04:07.130
人们偶尔与我合作也许他们会发布问题

00:04:07.130 --> 00:04:10.430
如果他们发现错误，那么我仍然是必须修复该错误的人，但是

00:04:10.430 --> 00:04:15.590
至少我的社区正在进入我的软件存储库，并说这是一个

00:04:15.590 --> 00:04:21.769
问题，您需要将其修复，所以github冷静就是您要去的地方

00:04:21.769 --> 00:04:26.360
注册免费帐户，只需单击链接，然后单击“确定”。 

00:04:26.360 --> 00:04:30.080
立即注册我已经有一个帐户，所以我要以自己的身份登录

00:04:30.080 --> 00:04:37.789
并登录，以便您可以在此处看到，如果我转到存储库，则可以跳到

00:04:37.789 --> 00:04:47.569
回家这里去让它加载在这里让它加载好我要去

00:04:47.569 --> 00:04:56.000
直接到Cat 5电视是我托管所有软件的地方，因此您可以去那里

00:04:56.000 --> 00:04:58.909
 github.com斜线5类电视，您会看到它是如何工作的

00:04:58.909 --> 00:05:02.779
所以您可以看到我有大量的软件存储库，它们都是

00:05:02.779 --> 00:05:07.099
不同的项目我已经完成或正在继续的所有不同的事情

00:05:07.099 --> 00:05:12.889
要做的事情，这里有页面，页面和页面，所以一旦有了github 

00:05:12.889 --> 00:05:19.340
您可以登录到您在此处看到的帐户，这是我的存储库列表，但是

00:05:19.340 --> 00:05:23.090
首次注册时，您将不需要拥有所有这些功能

00:05:23.090 --> 00:05:26.750
您的第一个存储库，这样我现在就可以知道

00:05:26.750 --> 00:05:33.289
不需要github忘了好，git与github不同github是

00:05:33.289 --> 00:05:39.919
在线服务并将其视为云存储，忘记了，这是不一样的

00:05:39.919 --> 00:05:46.400
它是该开源软件包管理工具的在线存储库，还是

00:05:46.400 --> 00:05:50.960
项目管理工具，所以在github上，他们确实做到了

00:05:50.960 --> 00:05:55.400
简单地说一个新的存储库，所以我去了存储库， 

00:05:55.400 --> 00:05:59.360
单击“新建”，然后给它起一个名字，我将其称为

00:05:59.360 --> 00:06:07.419
我的下划线测试和一个可选的说明，这是该节目的测试

00:06:07.419 --> 00:06:12.800
无论您希望它是公开的还是私有的，然后使用

00:06:12.800 --> 00:06:17.029
自述文件最好总是这样做，因为它使人们可以访问它

00:06:17.029 --> 00:06:20.839
立即包括您自己在内，您想添加许可证吗？ 

00:06:20.839 --> 00:06:24.740
 gitignore，我要把这两个都留空，你会发现这意味着什么

00:06:24.740 --> 00:06:30.680
未来并创建您的存储库，所以现在我有一个称为下划线测试

00:06:30.680 --> 00:06:34.459
但是那里什么也没有，浏览器已经完成，所以现在我要去

00:06:34.459 --> 00:06:39.830
我要做的是打开终端，然后在终端

00:06:39.830 --> 00:06:43.320
输入get ok，这样您就可以看到我已经

00:06:43.320 --> 00:06:48.330
如果您尚未安装它，那么它已经安装了，所以我在Linux上

00:06:48.330 --> 00:06:53.460
 Debian Linux，您可以在其中输入apt install git 

00:06:53.460 --> 00:07:05.640
我不是粗鲁的sudo su类型登录，可以正常安装，但是会告诉

00:07:05.640 --> 00:07:09.660
我已经有电流了哦，不，不，我已经知道了

00:07:09.660 --> 00:07:13.500
我还有其他更新，但是get已经是最新版本，所以

00:07:13.500 --> 00:07:17.430
如果您没有它，那么您需要安装它，如果您基于RPM 

00:07:17.430 --> 00:07:22.980
系统将是yum install git，您也可以在GUI中找到它

00:07:22.980 --> 00:07:28.740
存储库管理器，程序包管理器或诸如突触之类的任何使用

00:07:28.740 --> 00:07:33.750
包管理器，例如，一旦安装，就制作一个文件夹

00:07:33.750 --> 00:07:41.100
可能在您的主文件夹中，我们将其称为存储库

00:07:41.100 --> 00:07:46.290
有一个地方，我总是知道我的代码是正确的，所以这将是一个

00:07:46.290 --> 00:07:52.650
我的git仓库的本地副本，所以现在我要输入git clone， 

00:07:52.650 --> 00:08:00.210
要复制此URL github.com斜杠猫5电视斜杠我的下划线测试，以便我可以

00:08:00.210 --> 00:08:08.010
用ctrl C复制它，您将习惯于只键入它，这是您的

00:08:08.010 --> 00:08:13.560
用户名斜杠您的存储库，现在，如果我查看我的文件系统，它是

00:08:13.560 --> 00:08:20.760
 cloned get clone，然后是存储库的名称或URL，所以现在

00:08:20.760 --> 00:08:25.920
如果我转到主文件夹，然后进入存储库，请注意该文件归root用户所有

00:08:25.920 --> 00:08:31.740
因为我看到超级用户老兄提起诉讼，所以现在有一个名为“我的测试”的文件夹， 

00:08:31.740 --> 00:08:38.250
在我的测试中，有一个名为自述文件的文件，因此在此文件夹中，所以我

00:08:38.250 --> 00:08:43.250
要进行测试，我想创建一个新文件，我将其称为

00:08:43.250 --> 00:08:50.970
纳米测试点SH，我们将创建一个快速的SH文件来运行bash脚本并

00:08:50.970 --> 00:08:55.640
我要输入echo嗨，那是怎么回事我应该

00:08:55.640 --> 00:09:00.970
坚持规范你好世界那怎么回事

00:09:00.970 --> 00:09:05.690
所以我已经写完了，我已经关闭了它，所以现在您看到有一个名为

00:09:05.690 --> 00:09:13.910
现在当我将文件传输到github时测试点H的权限是

00:09:13.910 --> 00:09:18.500
将包含在该推动中，所以如果我做点斜杠测试点S H， 

00:09:18.500 --> 00:09:23.360
注意到它说允许被拒绝，我需要让它成为执行官

00:09:23.360 --> 00:09:30.680
加x测试点s H，所以现在如果我键入测试点s HS的hello world，那么我现在

00:09:30.680 --> 00:09:35.510
准备好我的第一部分脚本以转到github，这是我的一部分

00:09:35.510 --> 00:09:41.870
本地计算机上的存储库，但尚未在github中存储，因此如果您查看

00:09:41.870 --> 00:09:45.500
 github我要刷新只是为了证明它您在这里看到了文件列表，并且

00:09:45.500 --> 00:09:50.390
仍然只有自述文件，所以现在回到终端窗口，我要

00:09:50.390 --> 00:09:56.330
再次使用该git命令，我将在存储库中添加星号

00:09:56.330 --> 00:10:01.270
文件夹说找到任何有任何更改的文件并将其添加好获取

00:10:01.270 --> 00:10:09.680
 commit-am，然后用引号将您的提交命名，以便我说

00:10:09.680 --> 00:10:14.480
我的第一个脚本，这些只是简短的简短说明，然后按Enter和

00:10:14.480 --> 00:10:19.220
现在是说嘿，您需要告诉我们您是谁，因为您从未

00:10:19.220 --> 00:10:24.380
在此计算机上运行git之前，您需要先运行这两个命令

00:10:24.380 --> 00:10:29.030
直接获取配置--全局只需要

00:10:29.030 --> 00:10:33.350
这样做一次不必担心用户点电子邮件，如果您在键入时遇到麻烦

00:10:33.350 --> 00:10:39.980
复制好，然后用引号将Robby放在5类电视上，那就是

00:10:39.980 --> 00:10:48.890
只是告诉我我的电子邮件地址，然后我就去我不知道的用户点名称

00:10:48.890 --> 00:10:52.550
如果您能听到，但实际上是我们工作室外面的一场暴风雨

00:10:52.550 --> 00:10:56.720
今天，所以灯光闪烁了几次，但我想我们会得到

00:10:56.720 --> 00:11:02.090
通过它，所以可以删除它，然后将我的名字更改为Robby 

00:11:02.090 --> 00:11:06.710
弗格森（Ferguson）输入好了做，所以我只需要做一次就可以了

00:11:06.710 --> 00:11:11.420
下次我运行git commit时-只是添加它就可以了

00:11:11.420 --> 00:11:15.050
所以我添加了它，发现一个文件已更改，有两个

00:11:15.050 --> 00:11:20.270
插入并测试SH是新的，所以它将创建它，所以现在最后

00:11:20.270 --> 00:11:26.450
我需要输入的命令是push push origin，我要指定

00:11:26.450 --> 00:11:32.360
 master，它是分支master，所以是origin master，现在要

00:11:32.360 --> 00:11:35.720
询问我创建我的用户名和密码

00:11:35.720 --> 00:11:44.360
帐户，所以cat5 TV是我的用户名和密码，我使用LastPass并生成新

00:11:44.360 --> 00:11:49.430
密码一直存在，而且它们非常庞大且疯狂，所以我复制了一个密码

00:11:49.430 --> 00:11:57.500
然后我将其粘贴，然后将其上传到我的数据中

00:11:57.500 --> 00:12:02.840
仓库，并完成f5刷新，您应该看到测试SH 

00:12:02.840 --> 00:12:09.200
现在是我的github存储库的一部分，并且在那里，它表明它是

00:12:09.200 --> 00:12:17.330
主管，您好，世界，现在回到这里，让我们假装我做了一些更改

00:12:17.330 --> 00:12:20.750
在其他计算机上，我将通过浏览器进行操作

00:12:20.750 --> 00:12:29.270
只是为了向您展示，在这个系统上，我将再次回声你好，然后

00:12:29.270 --> 00:12:33.680
我要保存这些更改，我不会给它起一个名字或类似的名称

00:12:33.680 --> 00:12:37.340
该描述我只是要确认，所以现在脚本看起来像这样

00:12:37.340 --> 00:12:41.600
我也将如何在浏览器中进行更改，因此您现在可以从任何地方进行操作

00:12:41.600 --> 00:12:47.510
我在存储库中的计算机上本地查看文件，然后继续

00:12:47.510 --> 00:12:53.630
只是问好世界，所以我要再去拉我正在做这一切

00:12:53.630 --> 00:12:58.700
在我的下划线测试文件夹中，因此git pull将随后查找

00:12:58.700 --> 00:13:02.510
已在其他地方进行的更改并将其下拉至我的计算机，因此

00:13:02.510 --> 00:13:07.460
它总是同步这些更改，所以现在如果我打开Nano并打开该文件

00:13:07.460 --> 00:13:14.000
您会再次看到新的问候已经成为其中的一部分，因此我将向您显示回声

00:13:14.000 --> 00:13:20.270
你好三倍，我要保存下来，现在我要做的确切

00:13:20.270 --> 00:13:22.400
同样的事情，但告诉你现在有什么不同

00:13:22.400 --> 00:13:28.490
我已经输入了我的姓名，我的电子邮件地址获得了Ad Star获得提交- 

00:13:28.490 --> 00:13:39.410
是最后更新获取推送源主帽5电视是我的用户名和密码

00:13:39.410 --> 00:13:50.120
是随机选择的大约64个字符的字符串，我要粘贴

00:13:50.120 --> 00:13:56.060
我们进去的那一切就是现在推动我的改变

00:13:56.060 --> 00:14:00.680
本地到github服务器，以便再次与其他人共享，或者

00:14:00.680 --> 00:14:05.510
与其他系统配合使用时，通过拉动操作，我可以得到clomp 

00:14:05.510 --> 00:14:09.980
请原谅我git clone了一些东西，它不一定是我的，可以是

00:14:09.980 --> 00:14:14.690
只要其他人的github存储库是公开的，然后我就可以

00:14:14.690 --> 00:14:19.070
在我的本地计算机上对其进行更改，然后我可以进行推送，现在您必须拥有

00:14:19.070 --> 00:14:24.710
为了进行推送，以便对某人进行更改的方法

00:14:24.710 --> 00:14:29.570
其他的存储库是派生的，因此当您转到存储库时，请单击

00:14:29.570 --> 00:14:34.040
名为fork的按钮，它基本上会在您自己的帐户中复制它

00:14:34.040 --> 00:14:37.550
您可以对其进行更改，然后在其中进行拉取请求

00:14:37.550 --> 00:14:41.000
但是这些是使您入门的基础，这将使您能够

00:14:41.000 --> 00:14:45.680
创建存储库上传您的文件上传您的代码能够操作

00:14:45.680 --> 00:14:49.250
它可以在任何系统上使用，因此您可以在Windows计算机上的Raspberry Pi上对其进行测试

00:14:49.250 --> 00:14:54.410
在Linux桌面上的任何位置，然后将所有这些更改推送到

00:14:54.410 --> 00:14:59.030
服务器，以便可以将其下载或拉到您的所有系统，从而

00:14:59.030 --> 00:15:01.810
所有的一切

00:15:07.430 --> 00:15:10.480
 [音乐] 

