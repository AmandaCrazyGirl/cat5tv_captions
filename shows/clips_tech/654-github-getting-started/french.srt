1
00:00:01,520 --> 00:00:07,200
maintenant, si vous ne nous avez jamais rejoint pour une pause-café communautaire de catégorie 5, vous

2
00:00:07,200 --> 00:00:11,490
en savoir plus à ce sujet sur la télévision à points de catégorie cinq, faites défiler vers le bas sur la page d'accueil

3
00:00:11,490 --> 00:00:15,570
et vous y verrez la pause-café de la communauté ainsi que notre horaire lorsque

4
00:00:15,570 --> 00:00:19,920
nous allons faire le prochain c'est un événement hebdomadaire que nous organisons en zoom '

5
00:00:19,920 --> 00:00:23,430
et c'est une opportunité pour notre communauté de se rassembler et même

6
00:00:23,430 --> 00:00:29,189
bien que nous vivions tous ce que nous vivons dans notre monde aujourd'hui, nous

7
00:00:29,189 --> 00:00:35,370
a choisi de dire plutôt que de parler de ces choses, les choses

8
00:00:35,370 --> 00:00:40,260
qui nous abattent en ce moment, regardons-le et disons que nous sommes tous

9
00:00:40,260 --> 00:00:47,039
coincé dans cette situation qu'est-ce que je fais qui m'excite

10
00:00:47,039 --> 00:00:52,010
qu'est-ce que j'expérimente technologiquement qui est vraiment

11
00:00:52,010 --> 00:00:56,489
intéressant pour moi et m'aide à occuper du temps si je suis coincé à la maison

12
00:00:56,489 --> 00:01:03,989
maintenant ou peu importe le cas, le sujet a été abordé à propos de github parce que

13
00:01:03,989 --> 00:01:10,380
nous parlons de programmation et Peter est là presque à chaque fois pour un

14
00:01:10,380 --> 00:01:14,580
pause-café de la communauté et Peter demandait comment bien utiliser github

15
00:01:14,580 --> 00:01:18,750
Ce n'est pas vraiment quelque chose que nous pouvons montrer ou parler, vous savez vous guider

16
00:01:18,750 --> 00:01:22,799
pendant la pause café, mais il est apparu que bon, ce serait vraiment un

17
00:01:22,799 --> 00:01:27,330
bon sujet à discuter sur la télévision technologique de catégorie cinq et la raison pour laquelle

18
00:01:27,330 --> 00:01:34,350
est apparu au départ parce que lorsque Microsoft a acheté github, ils l'ont gardé

19
00:01:34,350 --> 00:01:39,570
en quelque sorte de statu quo et vous deviez payer pour certaines fonctionnalités mais

20
00:01:39,570 --> 00:01:48,240
puis tout à coup très récemment dit Microsoft et tous ceux qui ont payé pour des fonctionnalités non

21
00:01:48,240 --> 00:01:51,899
tous, mais beaucoup d'entre eux ont payé pour des fonctionnalités que vous aviez l'habitude de payer

22
00:01:51,899 --> 00:01:55,500
car sont maintenant gratuits, ils prennent le service et ils sont fondamentalement

23
00:01:55,500 --> 00:02:00,659
offrant leur service premium absolument gratuit sur github com alors qu'est-ce

24
00:02:00,659 --> 00:02:06,600
github eh bien github est un peu comme un fournisseur de services cloud, mais c'est pour

25
00:02:06,600 --> 00:02:10,800
développeurs cela nous aide à être en mesure de gérer nos projets afin que vous puissiez aller

26
00:02:10,800 --> 00:02:15,050
remonter dans le temps essentiellement avec du code et il est vraiment utile de pouvoir

27
00:02:15,050 --> 00:02:20,540
voir ces commits et voir comment les changements ont impacté votre projet c'est aussi un

28
00:02:20,540 --> 00:02:26,330
excellent mécanisme de stockage pour votre code car vous pouvez le partager avec

29
00:02:26,330 --> 00:02:30,350
d'autres personnes si vous voulez maintenant bien sûr que Microsoft le rend gratuit

30
00:02:30,350 --> 00:02:37,640
vous pouvez maintenant avoir des référentiels privés gratuits et vous pouvez configurer

31
00:02:37,640 --> 00:02:41,300
autant d'équipes que vous le souhaitez si vous souhaitez collaborer avec d'autres programmeurs mais

32
00:02:41,300 --> 00:02:45,920
essentiellement ce qu'il fait pour moi, c'est qu'il me permet de partager mon code en ligne dans

33
00:02:45,920 --> 00:02:49,459
de manière à ce que d'autres personnes puissent l'utiliser en open source, ils peuvent le compiler ou l'utiliser

34
00:02:49,459 --> 00:02:55,459
ou exécutez-le sur leurs propres ordinateurs, puis s'ils décident, je préfère

35
00:02:55,459 --> 00:02:59,510
cela fonctionne de cette façon ou peut-être voici un bug et je peux réparer qu'ils peuvent faire ce qui

36
00:02:59,510 --> 00:03:05,390
appelé une pull request donc fondamentalement ils clonent mon référentiel github mon logiciel

37
00:03:05,390 --> 00:03:10,730
code, ils le réparent sur leur ordinateur, puis ils font une pull request qui pousse

38
00:03:10,730 --> 00:03:16,100
il en arrière pendant qu'ils le repoussent à leur fourche, puis cela crée une demande de traction

39
00:03:16,100 --> 00:03:21,709
pour moi afin que je vois que hey Joe va souffler sur leur correction de ce bug avec mon

40
00:03:21,709 --> 00:03:26,720
logiciel Je peux cliquer sur un bouton et il importera ce correctif dans mon logiciel afin

41
00:03:26,720 --> 00:03:33,890
il y a beaucoup à faire et c'est vraiment très puissant ça peut être

42
00:03:33,890 --> 00:03:37,519
déroutant, surtout lorsque vous commencez à les écraser et à les fusionner

43
00:03:37,519 --> 00:03:41,390
genre de choses que nous n'allons pas aborder aujourd'hui mais ce que je veux

44
00:03:41,390 --> 00:03:47,150
vous montrer comment les connaissances les plus élémentaires sur son fonctionnement vont

45
00:03:47,150 --> 00:03:53,720
vous permettent d'utiliser github de manière efficace, considérez-le comme celui où vous

46
00:03:53,720 --> 00:03:58,519
mettre votre code là-bas en tant que logiciel open source et n'a pas à être

47
00:03:58,519 --> 00:04:03,470
tu peux l'avoir privé si tu veux mais dans mon cas c'est ce que je fais je veux

48
00:04:03,470 --> 00:04:07,130
les gens à collaborer avec moi de temps en temps peuvent-être publieront-ils des problèmes

49
00:04:07,130 --> 00:04:10,430
s'ils trouvent un bogue et que je suis toujours la personne qui doit le corriger mais à

50
00:04:10,430 --> 00:04:15,590
au moins ma communauté entre dans mon référentiel de logiciels et dit que c'est un

51
00:04:15,590 --> 00:04:21,769
problème et vous devez le résoudre correctement, alors github calme est l'endroit où vous allez est signe

52
00:04:21,769 --> 00:04:26,360
pour votre compte gratuit, tout ce que vous avez à faire est de cliquer sur le lien et de cliquer

53
00:04:26,360 --> 00:04:30,080
inscrivez-vous maintenant j'ai déjà un compte donc je vais me connecter en tant que moi-même

54
00:04:30,080 --> 00:04:37,789
et connectez-vous pour que vous puissiez voir ici que si je vais dans mes référentiels, si je saute

55
00:04:37,789 --> 00:04:47,569
à la maison ici et va le laisser charger ici laisse le charger bien je vais juste y aller

56
00:04:47,569 --> 00:04:56,000
directement à la télévision cat 5, j'héberge tous mes logiciels, alors vous y allez

57
00:04:56,000 --> 00:04:58,909
github.com slash cat 5 TV et vous voyez comment cela fonctionne

58
00:04:58,909 --> 00:05:02,779
donc vous pouvez voir que j'ai une tonne de référentiels de logiciels et ils sont tous

59
00:05:02,779 --> 00:05:07,099
projets différents toutes les choses différentes que j'ai faites ou que je continue

60
00:05:07,099 --> 00:05:12,889
à faire et il y a des pages et des pages et des pages de celui-ci donc une fois que vous avez votre github

61
00:05:12,889 --> 00:05:19,340
compte vous pouvez vous connecter à ce que vous voyez ici qui est ma liste de référentiels mais

62
00:05:19,340 --> 00:05:23,090
lorsque vous vous inscrivez pour la première fois, vous n'aurez pas tout ce dont vous avez besoin pour créer

63
00:05:23,090 --> 00:05:26,750
votre premier référentiel donc la façon dont je vais le faire maintenant comprenez

64
00:05:26,750 --> 00:05:33,289
github n'est pas obligatoire oubliez ok et git n'est pas la même chose que github github est un

65
00:05:33,289 --> 00:05:39,919
service en ligne et pensez-y comme un stockage en nuage oubliez ok ce n'est pas la même chose

66
00:05:39,919 --> 00:05:46,400
chose c'est un stockage en ligne pour cet outil de gestion de paquets open-source ou un

67
00:05:46,400 --> 00:05:50,960
outil de gestion de projet alors ici sur github, ils l'ont vraiment vraiment fait

68
00:05:50,960 --> 00:05:55,400
facile de dire simplement nouveau référentiel donc je suis allé dans mes référentiels et j'ai

69
00:05:55,400 --> 00:05:59,360
cliqué sur nouveau et ensuite je vais lui donner un nom, je vais l'appeler

70
00:05:59,360 --> 00:06:07,419
un mon test de soulignement et une description facultative c'est un test pour le spectacle

71
00:06:07,419 --> 00:06:12,800
si vous voulez qu'il soit public ou privé, puis initialisez-le avec un

72
00:06:12,800 --> 00:06:17,029
Lisez-moi, il est toujours préférable de faire cela, cela permet aux gens d'y accéder

73
00:06:17,029 --> 00:06:20,839
tout de suite, y compris vous-même, vous voulez ajouter une licence voulez-vous ajouter un

74
00:06:20,839 --> 00:06:24,740
git ignorer je vais laisser ces deux vides, vous découvrirez ce que cela signifie

75
00:06:24,740 --> 00:06:30,680
l'avenir et créez votre référentiel donc maintenant j'en ai un appelé mon test de soulignement

76
00:06:30,680 --> 00:06:34,459
mais il n'y a rien là-bas et j'ai fini avec le navigateur alors maintenant ce que je vais

77
00:06:34,459 --> 00:06:39,830
à faire est je vais faire monter mon terminal et dans mon terminal je vais

78
00:06:39,830 --> 00:06:43,320
tapez bien pour que vous puissiez voir que j'ai

79
00:06:43,320 --> 00:06:48,330
déjà installé si vous ne l'avez pas installé donc je suis sous Linux je suis sur

80
00:06:48,330 --> 00:06:53,460
Debian Linux ici, vous pouvez taper apt install git c'est ce que vous allez

81
00:06:53,460 --> 00:07:05,640
type je ne suis pas impoli sudo su connecté est rock ok apt installer pourtant ça va dire

82
00:07:05,640 --> 00:07:09,660
moi que j'ai déjà le courant oh il y a un non non je l'ai déjà

83
00:07:09,660 --> 00:07:13,500
il y a d'autres mises à jour pour moi, mais get est déjà la dernière version, donc

84
00:07:13,500 --> 00:07:17,430
si vous ne l'avez pas, vous devez l'installer si vous êtes sur un RPM basé

85
00:07:17,430 --> 00:07:22,980
système ce sera yum install git et vous pouvez également le trouver dans votre GUI

86
00:07:22,980 --> 00:07:28,740
gestionnaire de référentiel votre gestionnaire de paquets ou tout ce que vous utilisez comme un synaptique

87
00:07:28,740 --> 00:07:33,750
gestionnaire de paquets par exemple, une fois que vous avez installé, créez un dossier

88
00:07:33,750 --> 00:07:41,100
probablement dans votre dossier personnel et nous appellerons ces dépôts juste pour que je

89
00:07:41,100 --> 00:07:46,290
avoir un endroit où je sais toujours que mon code est correct, donc ça va être un

90
00:07:46,290 --> 00:07:52,650
copie locale de mon dépôt git donc maintenant je vais taper git clone et nous sommes

91
00:07:52,650 --> 00:08:00,210
va copier cette URL github.com slash cat 5 TV slash mon test de soulignement pour que je puisse

92
00:08:00,210 --> 00:08:08,010
copiez ça juste avec ctrl C vous allez vous habituer à simplement taper c'est votre

93
00:08:08,010 --> 00:08:13,560
nom d'utilisateur barre oblique votre référentiel et maintenant si je regarde mon système de fichiers donc c'est

94
00:08:13,560 --> 00:08:20,760
cloné obtenir le clonage, puis le nom du ou l'URL du référentiel donc maintenant

95
00:08:20,760 --> 00:08:25,920
si je vais dans mon dossier personnel puis dans les référentiels, remarquez qu'il appartient à root

96
00:08:25,920 --> 00:08:31,740
parce que je vois un mec super utilisateur pour poursuivre alors il y a maintenant un dossier appelé mon test et

97
00:08:31,740 --> 00:08:38,250
dans mon test, il y a un fichier appelé readme MD donc dans ce dossier, je suis

98
00:08:38,250 --> 00:08:43,250
va entrer dans mon test et je veux créer un nouveau fichier, je vais l'appeler

99
00:08:43,250 --> 00:08:50,970
nano test dot SH et nous allons créer un fichier SH rapide pour exécuter un script bash et

100
00:08:50,970 --> 00:08:55,640
Je vais taper echo salut, comment est-ce que je devrais vraiment

101
00:08:55,640 --> 00:09:00,970
s'en tenir à la norme bonjour le monde comment ça va

102
00:09:00,970 --> 00:09:05,690
donc je l'ai écrit et je l'ai fermé donc maintenant vous voyez qu'il y a un fichier appelé

103
00:09:05,690 --> 00:09:13,910
test dot s H maintenant lorsque je transfère un fichier vers github, les permissions sont

104
00:09:13,910 --> 00:09:18,500
va être inclus avec cette poussée donc si je fais un test de barre oblique point s H vous

105
00:09:18,500 --> 00:09:23,360
remarquez qu'il dit que la permission est refusée, je dois le rendre exécutif exécutif tout chmod

106
00:09:23,360 --> 00:09:30,680
plus x test point s H alors maintenant si je tape test point s HS s bonjour le monde donc je maintenant

107
00:09:30,680 --> 00:09:35,510
avoir mon tout premier script prêt à monter sur github cela fait partie de mon

108
00:09:35,510 --> 00:09:41,870
référentiel sur mon ordinateur local mais ce n'est pas encore dans github donc si vous regardez

109
00:09:41,870 --> 00:09:45,500
github je vais rafraîchir juste pour le prouver que vous voyez votre liste de fichiers ici et

110
00:09:45,500 --> 00:09:50,390
il y a encore juste le readme ok alors maintenant de retour dans ma fenêtre de terminal je vais

111
00:09:50,390 --> 00:09:56,330
à nouveau utilisez cette commande git, je vais aller chercher une étoile dans les référentiels

112
00:09:56,330 --> 00:10:01,270
dossier qui dit trouver tous les fichiers qui ont des modifications et les ajouter ok get

113
00:10:01,270 --> 00:10:09,680
commit - suis puis entre guillemets, donnez un nom à votre commit alors je vais dire

114
00:10:09,680 --> 00:10:14,480
mon premier script et ce ne sont que de courtes descriptions et appuyez sur Entrée et

115
00:10:14,480 --> 00:10:19,220
maintenant il dit que tu dois nous dire qui tu es parce que tu n'as jamais jamais

116
00:10:19,220 --> 00:10:24,380
lancez git sur cet ordinateur avant donc vous devez exécuter ces deux commandes assez

117
00:10:24,380 --> 00:10:29,030
simple get config - - global, vous n'avez qu'à

118
00:10:29,030 --> 00:10:33,350
faites ceci une fois ne vous inquiétez pas de l'email de point d'utilisateur et si vous avez du mal à le taper juste

119
00:10:33,350 --> 00:10:39,980
copiez-le bien et puis entre guillemets, je vais mettre Robby à la télévision de catégorie 5 et c'est

120
00:10:39,980 --> 00:10:48,890
juste en lui disant mon adresse e-mail, alors je vais utiliser le nom de point d'utilisateur je ne sais pas

121
00:10:48,890 --> 00:10:52,550
si vous pouvez entendre ça mais c'est en fait une très mauvaise tempête en dehors de notre studio

122
00:10:52,550 --> 00:10:56,720
aujourd'hui donc les lumières scintillent plusieurs fois et mais je pense que nous allons avoir

123
00:10:56,720 --> 00:11:02,090
à travers de toute façon alors tout droit, supprimez cela et changez mon nom en Robby

124
00:11:02,090 --> 00:11:06,710
Ferguson entre ok fait donc je n'ai qu'à faire ça une fois donc maintenant scène

125
00:11:06,710 --> 00:11:11,420
la prochaine fois que j'exécute ce git commit - est-ce que je l'ajoute juste bien

126
00:11:11,420 --> 00:11:15,050
donc je l'ai ajouté et il voit qu'un fichier a changé il y en a deux

127
00:11:15,050 --> 00:11:20,270
les insertions et les tests SH est nouveau donc ça va créer ça alors maintenant le final

128
00:11:20,270 --> 00:11:26,450
la commande que je dois entrer est obtenir l'origine du push et je vais spécifier le

129
00:11:26,450 --> 00:11:32,360
master qui est le branch master donc origin master et maintenant ça va

130
00:11:32,360 --> 00:11:35,720
me demander mon nom d'utilisateur et mon mot de passe que j'ai saisi lors de la création de mon

131
00:11:35,720 --> 00:11:44,360
compte donc cat5 TV est mon nom d'utilisateur et mon mot de passe J'utilise LastPass et génère de nouveaux

132
00:11:44,360 --> 00:11:49,430
mots de passe tout le temps et ils sont massifs et fous alors j'ai copié un mot de passe

133
00:11:49,430 --> 00:11:57,500
et puis je l'ai collé et là, il télécharge ces données sur mon

134
00:11:57,500 --> 00:12:02,840
dépôt et c'est fait donc f5 pour se rafraîchir et vous devriez voir le test SH

135
00:12:02,840 --> 00:12:09,200
fait maintenant partie de mon dépôt github et il est là et cela montre que c'est

136
00:12:09,200 --> 00:12:17,330
Exécutif bonjour le monde alors maintenant de retour ici alors faisons simplement semblant d'avoir fait des changements

137
00:12:17,330 --> 00:12:20,750
ailleurs donc sur un autre ordinateur et je vais le faire via le navigateur

138
00:12:20,750 --> 00:12:29,270
Juste pour te montrer que sur ce système, je vais encore faire écho bonjour d'accord et puis

139
00:12:29,270 --> 00:12:33,680
Je vais enregistrer ces changements, je ne vais pas lui donner un nom ou quoi que ce soit du genre

140
00:12:33,680 --> 00:12:37,340
cette description je vais juste confirmer donc maintenant le script ressemble à ça alors voyez

141
00:12:37,340 --> 00:12:41,600
comment je change cela dans le navigateur, vous pouvez le faire de n'importe où, alors maintenant si

142
00:12:41,600 --> 00:12:47,510
Je regarde mon fichier localement sur mon ordinateur dans le référentiel là on y va encore

143
00:12:47,510 --> 00:12:53,630
dit juste bonjour tout le monde d'accord alors je vais aller me faire tirer à nouveau je fais tout ça

144
00:12:53,630 --> 00:12:58,700
dans le dossier de test mon trait de soulignement, git pull recherchera alors tout

145
00:12:58,700 --> 00:13:02,510
les modifications qui ont été apportées ailleurs et les ramener sur mon ordinateur pour

146
00:13:02,510 --> 00:13:07,460
il synchronise toujours ces changements alors maintenant si j'ouvre Nano et ouvre ce fichier

147
00:13:07,460 --> 00:13:14,000
tu peux voir que le nouveau bonjour fait à nouveau partie de ça alors je vais te montrer l'écho

148
00:13:14,000 --> 00:13:20,270
bonjour trois fois et je vais sauver ça et maintenant je vais faire l'exact

149
00:13:20,270 --> 00:13:22,400
la même chose mais vous montre en quoi c'est différent maintenant que

150
00:13:22,400 --> 00:13:28,490
J'ai déjà entré mon nom et mon adresse e-mail pour obtenir la validation d'Ad Star -

151
00:13:28,490 --> 00:13:39,410
suis la dernière mise à jour obtenir push origin master cap 5 TV est mon nom d'utilisateur et mon mot de passe

152
00:13:39,410 --> 00:13:50,120
est une chaîne d'environ 64 caractères sélectionnés au hasard et je vais coller

153
00:13:50,120 --> 00:13:56,060
ça dedans et on y va donc c'est tout ce qu'il y a pour maintenant pousser mes changements

154
00:13:56,060 --> 00:14:00,680
localement sur le serveur github afin qu'il le partage à nouveau avec tout le monde ou

155
00:14:00,680 --> 00:14:05,510
avec mes autres systèmes quand je fais un get pull donc en faisant ça je peux obtenir clomp

156
00:14:05,510 --> 00:14:09,980
pardonnez-moi git cloner quelque chose et ça ne doit pas être le mien ça peut être

157
00:14:09,980 --> 00:14:14,690
le dépôt github de quelqu'un d'autre tant qu'il est public mais que je peux faire

158
00:14:14,690 --> 00:14:19,070
modifie-le sur ma machine locale et puis je peux faire un push maintenant vous devez posséder

159
00:14:19,070 --> 00:14:24,710
le référentiel afin de faire un push donc la façon d'apporter des changements à quelqu'un

160
00:14:24,710 --> 00:14:29,570
le référentiel d'autre consiste à le bifurquer, donc lorsque vous allez dans le référentiel, vous cliquez sur

161
00:14:29,570 --> 00:14:34,040
le bouton appelé fork et il en fait essentiellement une copie dans votre propre compte

162
00:14:34,040 --> 00:14:37,550
que vous pouvez apporter des modifications et c'est là que vous pouvez faire des pull requests

163
00:14:37,550 --> 00:14:41,000
mais ce sont les bases pour commencer qui vont vous permettre de

164
00:14:41,000 --> 00:14:45,680
créer des référentiels télécharger vos fichiers télécharger votre code être capable de manipuler

165
00:14:45,680 --> 00:14:49,250
à partir de n'importe quel système afin que vous puissiez le tester sur un Raspberry Pi sur votre machine Windows

166
00:14:49,250 --> 00:14:54,410
sur votre bureau Linux sur n'importe quoi et ensuite pousser tous ces changements jusqu'au

167
00:14:54,410 --> 00:14:59,030
serveur afin qu'ils puissent être téléchargés ou extraits sur tous vos systèmes.

168
00:14:59,030 --> 00:15:01,810
tout ce qu'il y a à faire

169
00:15:07,430 --> 00:15:10,480
[La musique]

