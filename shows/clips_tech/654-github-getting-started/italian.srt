1
00:00:01,520 --> 00:00:07,200
ora se non ti sei mai unito a noi per una pausa caffè della comunità di categoria 5, lo farai

2
00:00:07,200 --> 00:00:11,490
per saperne di più su TV di categoria cinque punti, scorri verso il basso sulla home page

3
00:00:11,490 --> 00:00:15,570
e vedrai la pausa caffè della comunità lì insieme al nostro programma quando

4
00:00:15,570 --> 00:00:19,920
faremo il prossimo è un evento settimanale che teniamo su zoom '

5
00:00:19,920 --> 00:00:23,430
ed è un'opportunità per la nostra comunità di riunirsi e anche

6
00:00:23,430 --> 00:00:29,189
anche se stiamo tutti sperimentando ciò che stiamo vivendo nel nostro mondo oggi

7
00:00:29,189 --> 00:00:35,370
ha preso l'approccio per dire piuttosto che parlare di quelle cose le cose

8
00:00:35,370 --> 00:00:40,260
che ci stanno abbattendo proprio ora guardiamolo e diciamo guarda siamo tutti

9
00:00:40,260 --> 00:00:47,039
bloccato in questa situazione, quello che sto facendo mi ha eccitato

10
00:00:47,039 --> 00:00:52,010
cos'è che sto sperimentando tecnologicamente che è davvero

11
00:00:52,010 --> 00:00:56,489
interessante per me e aiutandomi a occupare il tempo se sono bloccato a casa

12
00:00:56,489 --> 00:01:03,989
in questo momento o qualunque sia il caso, quindi l'argomento è emerso su GitHub perché

13
00:01:03,989 --> 00:01:10,380
stiamo parlando di programmazione e Peter è lì quasi ogni volta per un

14
00:01:10,380 --> 00:01:14,580
pausa caffè della comunità e Peter stava chiedendo bene come si usa bene GitHub

15
00:01:14,580 --> 00:01:18,750
non sono proprio il qualcosa che possiamo mostrare o parlare, sai che ti accompagna

16
00:01:18,750 --> 00:01:22,799
durante la pausa caffè, ma è venuto fuori che ehi, beh, sarebbe davvero

17
00:01:22,799 --> 00:01:27,330
buon argomento da discutere sulla tecnologia TV di categoria cinque e il motivo

18
00:01:27,330 --> 00:01:34,350
inizialmente è venuto fuori perché quando Microsoft ha acquistato GitHub lo hanno mantenuto

19
00:01:34,350 --> 00:01:39,570
andando una specie di status quo così com'era e dovevi pagare per alcune funzionalità ma

20
00:01:39,570 --> 00:01:48,240
poi improvvisamente molto recentemente Microsoft ha detto e tutti quelli pagati per le funzionalità no

21
00:01:48,240 --> 00:01:51,899
tutti tranne molti di quelli pagati per funzionalità che prima dovevi pagare

22
00:01:51,899 --> 00:01:55,500
perché ora sono gratuiti, quindi stanno prendendo il servizio e sono fondamentalmente

23
00:01:55,500 --> 00:02:00,659
dando via il loro servizio premium assolutamente gratuito su github com, quindi qual è

24
00:02:00,659 --> 00:02:06,600
github beh github è un po 'come un provider di servizi cloud, ma è per

25
00:02:06,600 --> 00:02:10,800
sviluppatori ci aiuta a essere in grado di gestire i nostri progetti in modo che tu possa andare

26
00:02:10,800 --> 00:02:15,050
indietro nel tempo fondamentalmente con il codice ed è davvero utile essere in grado di farlo

27
00:02:15,050 --> 00:02:20,540
guarda quei commit e vedi come i cambiamenti hanno influenzato il tuo progetto è anche un

28
00:02:20,540 --> 00:02:26,330
ottimo meccanismo di archiviazione per il tuo codice perché puoi condividerlo con

29
00:02:26,330 --> 00:02:30,350
altre persone se vuoi ora ovviamente Microsoft lo rende gratuito

30
00:02:30,350 --> 00:02:37,640
ora puoi anche avere repository privati ​​gratuiti e puoi configurare

31
00:02:37,640 --> 00:02:41,300
quanti team vuoi se vuoi collaborare con altri programmatori ma

32
00:02:41,300 --> 00:02:45,920
essenzialmente quello che fa per me è che mi permette di condividere il mio codice online in formato

33
00:02:45,920 --> 00:02:49,459
in modo tale che altre persone possano usarlo open source che possano compilarlo o usarlo

34
00:02:49,459 --> 00:02:55,459
o eseguirlo sui propri computer e poi se decidono vabbè preferisco

35
00:02:55,459 --> 00:02:59,510
funziona in questo modo o forse c'è un bug e posso risolvere il problema che possono fare quello che

36
00:02:59,510 --> 00:03:05,390
chiamato una richiesta di pull quindi fondamentalmente clonano il mio repository GitHub il mio software

37
00:03:05,390 --> 00:03:10,730
code lo aggiustano sul loro computer e poi fanno una richiesta pull che spinge

38
00:03:10,730 --> 00:03:16,100
indietro mentre lo spingono indietro alla loro forcella e quindi crea una richiesta di pull

39
00:03:16,100 --> 00:03:21,709
per me in modo che vedo che hey Joe soffierà sulla loro correzione di questo bug con il mio

40
00:03:21,709 --> 00:03:26,720
software posso fare clic su un pulsante e importerà quella correzione nel mio software così

41
00:03:26,720 --> 00:03:33,890
c'è molto da fare ed è davvero molto potente che possa essere

42
00:03:33,890 --> 00:03:37,519
confondere soprattutto quando si inizia a schiacciare e fondere loro e quelli

43
00:03:37,519 --> 00:03:41,390
tipi di cose in cui non entreremo oggi, ma ciò che voglio

44
00:03:41,390 --> 00:03:47,150
mostrarti come sta andando la conoscenza di base su come funziona

45
00:03:47,150 --> 00:03:53,720
permetterti di usare GitHub in modo efficace pensalo come quello in cui ti trovi

46
00:03:53,720 --> 00:03:58,519
mettere il tuo codice là fuori come software open source e non deve esserlo

47
00:03:58,519 --> 00:04:03,470
puoi averlo privato se vuoi ma nel mio caso è quello che sto facendo che voglio

48
00:04:03,470 --> 00:04:07,130
le persone che collaborano con me di tanto in tanto forse pubblicheranno problemi

49
00:04:07,130 --> 00:04:10,430
se trovano un bug e poi sono ancora la persona che deve risolverlo ma a

50
00:04:10,430 --> 00:04:15,590
almeno la mia comunità sta entrando nel mio repository di software e dicendo che questo è un file

51
00:04:15,590 --> 00:04:21,769
problema e devi risolverlo tutto bene, quindi github calm è dove vai è segno

52
00:04:21,769 --> 00:04:26,360
per il tuo account gratuito tutto ciò che devi fare è fare clic sul collegamento e fare clic su

53
00:04:26,360 --> 00:04:30,080
registrati ora Ho già un account, quindi accedo come me stesso

54
00:04:30,080 --> 00:04:37,789
e accedi in modo da poter vedere qui che se vado ai miei repository quindi se salto

55
00:04:37,789 --> 00:04:47,569
a casa qui e vai a lasciarlo caricare qui lasciarlo caricare bene Io vado e basta

56
00:04:47,569 --> 00:04:56,000
straight to cat 5 TV è dove ospito tutto il mio software, quindi vai lì

57
00:04:56,000 --> 00:04:58,909
github.com slash cat 5 TV e vedrai come funziona

58
00:04:58,909 --> 00:05:02,779
così puoi vedere che ho un sacco di repository software e sono tutti

59
00:05:02,779 --> 00:05:07,099
progetti diversi tutte cose diverse che ho fatto o che sto continuando

60
00:05:07,099 --> 00:05:12,889
da fare e ci sono pagine e pagine e pagine di esso, quindi una volta che hai il tuo github

61
00:05:12,889 --> 00:05:19,340
account puoi accedere a quello che vedi qui che è il mio elenco di repository ma

62
00:05:19,340 --> 00:05:23,090
quando ti registri per la prima volta non avrai tutto ciò che devi creare

63
00:05:23,090 --> 00:05:26,750
il tuo primo repository quindi il modo in cui lo farò ora lo capisci

64
00:05:26,750 --> 00:05:33,289
github non è richiesto dimentica ok e git non è la stessa cosa di github github è un file

65
00:05:33,289 --> 00:05:39,919
servizio online e pensalo come un cloud storage dimentica ok non è la stessa cosa

66
00:05:39,919 --> 00:05:46,400
cosa è un archivio online per quello strumento di gestione dei pacchetti open source o un file

67
00:05:46,400 --> 00:05:50,960
strumento di gestione dei progetti, quindi qui su GitHub l'hanno reso davvero davvero

68
00:05:50,960 --> 00:05:55,400
facile dire semplicemente nuovo repository, quindi sono andato ai miei repository e ho

69
00:05:55,400 --> 00:05:59,360
cliccato su nuovo e poi gli darò un nome che chiamerò questo

70
00:05:59,360 --> 00:06:07,419
uno il mio test di sottolineatura e una descrizione opzionale questo è un test per lo spettacolo

71
00:06:07,419 --> 00:06:12,800
se vuoi che sia pubblico o privato e quindi inizializzalo con un file

72
00:06:12,800 --> 00:06:17,029
readme è sempre meglio farlo in modo che le persone possano accedervi

73
00:06:17,029 --> 00:06:20,839
subito compreso te stesso che vuoi aggiungere una licenza vuoi aggiungere un file

74
00:06:20,839 --> 00:06:24,740
git ignore Lascerò entrambi vuoti e scoprirai cosa significa

75
00:06:24,740 --> 00:06:30,680
il futuro e crea il tuo repository così ora ne ho uno chiamato test di sottolineatura

76
00:06:30,680 --> 00:06:34,459
ma non c'è niente lì e ho finito con il browser quindi ora cosa sto andando

77
00:06:34,459 --> 00:06:39,830
quello che devo fare è aprire il mio terminale e nel mio terminale lo farò

78
00:06:39,830 --> 00:06:43,320
digita okay così puoi vedere che ho

79
00:06:43,320 --> 00:06:48,330
già installato se non lo hai installato quindi sono su Linux sono su

80
00:06:48,330 --> 00:06:53,460
Debian Linux qui puoi digitare apt install git che è quello che stai per fare

81
00:06:53,460 --> 00:07:05,640
tipo non sono scortese sudo su loggato è rock ok apt install ma lo dirà

82
00:07:05,640 --> 00:07:09,660
io che ho già la corrente oh c'è un no no l'ho già presa

83
00:07:09,660 --> 00:07:13,500
ci sono altri aggiornamenti per me, ma get è già la versione più recente così

84
00:07:13,500 --> 00:07:17,430
se non ce l'hai devi installarlo se sei su un RPM

85
00:07:17,430 --> 00:07:22,980
sistema sarà yum install git e puoi anche trovarlo nella tua GUI

86
00:07:22,980 --> 00:07:28,740
gestore di repository il tuo gestore di pacchetti o qualsiasi cosa tu usi come un sinaptico

87
00:07:28,740 --> 00:07:33,750
gestore di pacchetti, ad esempio, quindi una volta installato crea una cartella

88
00:07:33,750 --> 00:07:41,100
probabilmente nella tua cartella home e chiameremo questi repository solo in modo che io

89
00:07:41,100 --> 00:07:46,290
avere un posto dove so sempre che il mio codice è corretto, quindi questo sarà un file

90
00:07:46,290 --> 00:07:52,650
copia locale del mio repository git quindi ora digiterò git clone e siamo

91
00:07:52,650 --> 00:08:00,210
copierò questo URL github.com slash cat 5 TV slash il mio test di sottolineatura così posso

92
00:08:00,210 --> 00:08:08,010
copia quello solo con ctrl C ti abituerai a digitarlo semplicemente è il tuo

93
00:08:08,010 --> 00:08:13,560
nome utente taglia il tuo repository e ora quindi se guardo il mio file system allora è

94
00:08:13,560 --> 00:08:20,760
clonato ottieni clone e quindi il nome del o l'URL del repository quindi ora

95
00:08:20,760 --> 00:08:25,920
se vado nella mia cartella home e poi nei repository noto che è di proprietà di root

96
00:08:25,920 --> 00:08:31,740
perché vedo un super utente che fa causa, quindi ora c'è una cartella chiamata my test e

97
00:08:31,740 --> 00:08:38,250
all'interno del mio test c'è un file chiamato readme MD quindi all'interno di questa cartella quindi sono

98
00:08:38,250 --> 00:08:43,250
vado nel mio test e voglio creare un nuovo file che chiamerò questo

99
00:08:43,250 --> 00:08:50,970
nano test dot SH e creeremo un file SH veloce per eseguire uno script bash e

100
00:08:50,970 --> 00:08:55,640
Vado a digitare echo ciao là come va oh dovrei davvero

101
00:08:55,640 --> 00:09:00,970
attenersi alla norma ciao mondo, come va?

102
00:09:00,970 --> 00:09:05,690
quindi l'ho scritto e l'ho chiuso, quindi ora vedi che c'è un file chiamato

103
00:09:05,690 --> 00:09:13,910
test dot s H ora quando trasferisco un file su github i permessi sono

104
00:09:13,910 --> 00:09:18,500
sarà incluso con quella spinta, quindi se eseguo il test del punto barra, il punto s H tu

105
00:09:18,500 --> 00:09:23,360
nota che dice che il permesso negato devo renderlo esecutivo esecutivo tutto chmod

106
00:09:23,360 --> 00:09:30,680
più x test dot s H quindi ora se digito test dot s HS s hello world quindi ora

107
00:09:30,680 --> 00:09:35,510
avere il mio primissimo pezzo di script pronto per andare su GitHub fa parte del mio

108
00:09:35,510 --> 00:09:41,870
repository sul mio computer locale ma non è ancora in GitHub, quindi se guardi

109
00:09:41,870 --> 00:09:45,500
github aggiornerò solo per provare che vedi il tuo elenco di file qui e

110
00:09:45,500 --> 00:09:50,390
c'è ancora solo il file readme ok quindi ora di nuovo nella mia finestra del terminale vado

111
00:09:50,390 --> 00:09:56,330
usa di nuovo quel comando git che andrò a ottenere add star all'interno dei repository

112
00:09:56,330 --> 00:10:01,270
cartella che dice trova tutti i file che hanno modifiche e aggiungili ok get

113
00:10:01,270 --> 00:10:09,680
commit - am e poi tra virgolette dai un nome al tuo commit così dirò

114
00:10:09,680 --> 00:10:14,480
il mio primo script e queste sono solo brevi descrizioni e premi invio e

115
00:10:14,480 --> 00:10:19,220
ora sta dicendo hey devi dirci chi sei perché non l'hai mai e poi mai

116
00:10:19,220 --> 00:10:24,380
esegui git su questo computer prima, quindi devi eseguire questi due comandi abbastanza

117
00:10:24,380 --> 00:10:29,030
semplice get config - - globale devi solo

118
00:10:29,030 --> 00:10:33,350
fallo una volta non preoccuparti per l'email dell'utente e se hai problemi a digitarlo basta

119
00:10:33,350 --> 00:10:39,980
copialo ok e poi tra virgolette metto Robby nella categoria 5 TV e basta

120
00:10:39,980 --> 00:10:48,890
dicendogli solo il mio indirizzo e-mail, poi vado con nome punto utente non lo so

121
00:10:48,890 --> 00:10:52,550
se puoi sentirlo, ma in realtà è davvero una brutta tempesta fuori dal nostro studio

122
00:10:52,550 --> 00:10:56,720
oggi quindi le luci tremolano un paio di volte e ma penso che arriveremo

123
00:10:56,720 --> 00:11:02,090
attraverso di esso comunque quindi va bene cancellalo e cambia il mio nome in Robby

124
00:11:02,090 --> 00:11:06,710
Ferguson entra ok fatto quindi devo farlo solo una volta quindi ora scena

125
00:11:06,710 --> 00:11:11,420
la prossima volta che eseguo quel git commit - lo sto solo aggiungendo ok

126
00:11:11,420 --> 00:11:15,050
quindi l'ho aggiunto e vede che un file è cambiato ce ne sono due

127
00:11:15,050 --> 00:11:20,270
inserimenti e testare SH è nuovo, quindi lo creerà, quindi ora il finale

128
00:11:20,270 --> 00:11:26,450
il comando che devo inserire è get push origin e specificherò il file

129
00:11:26,450 --> 00:11:32,360
master che è il branch master quindi origin master e ora va a

130
00:11:32,360 --> 00:11:35,720
chiedimi il mio nome utente e la password che ho inserito quando ho creato il mio

131
00:11:35,720 --> 00:11:44,360
account quindi cat5 TV è il mio nome utente e la mia password. Uso LastPass e ne creo di nuovi

132
00:11:44,360 --> 00:11:49,430
password tutto il tempo e sono enormi e folli, quindi ho copiato una password

133
00:11:49,430 --> 00:11:57,500
e poi l'ho incollato ed ecco che sta caricando quei dati nel mio file

134
00:11:57,500 --> 00:12:02,840
repository ed è fatto così f5 per aggiornare e dovresti vedere il test SH

135
00:12:02,840 --> 00:12:09,200
ora fa parte del mio repository GitHub ed eccolo lì e mostra che è

136
00:12:09,200 --> 00:12:17,330
ciao mondo esecutivo quindi ora di nuovo qui quindi facciamo finta di aver apportato modifiche

137
00:12:17,330 --> 00:12:20,750
altrove quindi su un altro computer e lo farò tramite il browser

138
00:12:20,750 --> 00:12:29,270
solo per mostrarti così su questo sistema andrò di nuovo echo ciao okay e poi

139
00:12:29,270 --> 00:12:33,680
Salverò quei cambiamenti, non gli darò un nome o qualcosa di simile

140
00:12:33,680 --> 00:12:37,340
quella descrizione la confermerò quindi ora lo script ha questo aspetto, quindi guarda

141
00:12:37,340 --> 00:12:41,600
come lo cambio anche nel browser, puoi farlo da qualsiasi luogo, quindi ora se

142
00:12:41,600 --> 00:12:47,510
Guardo il mio file localmente sul mio computer nel repository, ci andiamo ancora

143
00:12:47,510 --> 00:12:53,630
Dico solo ciao mondo, okay quindi vado a tirare di nuovo sto facendo tutto questo

144
00:12:53,630 --> 00:12:58,700
all'interno della cartella di test my underscore quindi git pull cercherà qualsiasi file

145
00:12:58,700 --> 00:13:02,510
modifiche che sono state apportate altrove e quindi trasferirle sul mio computer

146
00:13:02,510 --> 00:13:07,460
sincronizza sempre le modifiche, quindi ora se apro Nano e apro quel file

147
00:13:07,460 --> 00:13:14,000
puoi vedere di nuovo quel nuovo ciao ora fa parte di questo, quindi ti mostrerò l'eco

148
00:13:14,000 --> 00:13:20,270
ciao volte tre e lo salverò e ora farò l'esatto

149
00:13:20,270 --> 00:13:22,400
la stessa cosa ma ti mostro come è diverso ora

150
00:13:22,400 --> 00:13:28,490
Ho già inserito il mio nome e il mio indirizzo email get Ad Star get commit -

151
00:13:28,490 --> 00:13:39,410
sono l'aggiornamento finale ottenere push origin master cap 5 TV è il mio nome utente e la mia password

152
00:13:39,410 --> 00:13:50,120
è una stringa di circa 64 caratteri selezionati casualmente e ho intenzione di incollare

153
00:13:50,120 --> 00:13:56,060
che dentro e ci andiamo, quindi è tutto quello che c'è da fare ora per spingere i miei cambiamenti

154
00:13:56,060 --> 00:14:00,680
localmente al server GitHub in modo che lo condivida di nuovo con tutti gli altri o

155
00:14:00,680 --> 00:14:05,510
con gli altri miei sistemi quando eseguo un get pull, così facendo posso ottenere clomp

156
00:14:05,510 --> 00:14:09,980
scusami, clona qualcosa e non deve essere mio, può essere

157
00:14:09,980 --> 00:14:14,690
il repository GitHub di qualcun altro fintanto che è pubblico ma poi posso creare

158
00:14:14,690 --> 00:14:19,070
le modifiche sulla mia macchina locale e poi posso fare una spinta ora che devi possedere

159
00:14:19,070 --> 00:14:24,710
il repository per fare un push così il modo per apportare modifiche a qualcuno

160
00:14:24,710 --> 00:14:29,570
il repository di altro deve eseguirne il fork, quindi quando vai al repository fai clic su

161
00:14:29,570 --> 00:14:34,040
il pulsante chiamato fork e fondamentalmente ne fa una copia nel tuo account

162
00:14:34,040 --> 00:14:37,550
a cui puoi apportare modifiche e quindi è lì che puoi eseguire le richieste pull

163
00:14:37,550 --> 00:14:41,000
ma queste sono le basi per iniziare che te lo permetteranno

164
00:14:41,000 --> 00:14:45,680
crea repository carica i tuoi file carica il tuo codice essere in grado di manipolare

165
00:14:45,680 --> 00:14:49,250
da qualsiasi sistema in modo da poterlo testare su un Raspberry Pi sulla tua macchina Windows

166
00:14:49,250 --> 00:14:54,410
sul tuo desktop Linux su qualsiasi cosa e quindi sposta tutte queste modifiche fino al file

167
00:14:54,410 --> 00:14:59,030
server in modo che possano essere scaricati o estratti su tutti i tuoi sistemi, quindi è

168
00:14:59,030 --> 00:15:01,810
tutto quello che c'è da fare

169
00:15:07,430 --> 00:15:10,480
[Musica]

