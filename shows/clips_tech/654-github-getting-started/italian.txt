ora se non ti sei mai unito a noi per una pausa caffè della comunità di categoria 5, lo farai
per saperne di più su TV di categoria cinque punti, scorri verso il basso sulla home page
e vedrai la pausa caffè della comunità lì insieme al nostro programma quando
faremo il prossimo è un evento settimanale che teniamo su zoom '
ed è un'opportunità per la nostra comunità di riunirsi e anche
anche se stiamo tutti sperimentando ciò che stiamo vivendo nel nostro mondo oggi
ha preso l'approccio per dire piuttosto che parlare di quelle cose le cose
che ci stanno abbattendo proprio ora guardiamolo e diciamo guarda siamo tutti
bloccato in questa situazione, quello che sto facendo mi ha eccitato
cos'è che sto sperimentando tecnologicamente che è davvero
interessante per me e aiutandomi a occupare il tempo se sono bloccato a casa
in questo momento o qualunque sia il caso, quindi l'argomento è emerso su GitHub perché
stiamo parlando di programmazione e Peter è lì quasi ogni volta per un
pausa caffè della comunità e Peter stava chiedendo bene come si usa bene GitHub
non sono proprio il qualcosa che possiamo mostrare o parlare, sai che ti accompagna
durante la pausa caffè, ma è venuto fuori che ehi, beh, sarebbe davvero
buon argomento da discutere sulla tecnologia TV di categoria cinque e il motivo
inizialmente è venuto fuori perché quando Microsoft ha acquistato GitHub lo hanno mantenuto
andando una specie di status quo così com'era e dovevi pagare per alcune funzionalità ma
poi improvvisamente molto recentemente Microsoft ha detto e tutti quelli pagati per le funzionalità no
tutti tranne molti di quelli pagati per funzionalità che prima dovevi pagare
perché ora sono gratuiti, quindi stanno prendendo il servizio e sono fondamentalmente
dando via il loro servizio premium assolutamente gratuito su github com, quindi qual è
github beh github è un po 'come un provider di servizi cloud, ma è per
sviluppatori ci aiuta a essere in grado di gestire i nostri progetti in modo che tu possa andare
indietro nel tempo fondamentalmente con il codice ed è davvero utile essere in grado di farlo
guarda quei commit e vedi come i cambiamenti hanno influenzato il tuo progetto è anche un
ottimo meccanismo di archiviazione per il tuo codice perché puoi condividerlo con
altre persone se vuoi ora ovviamente Microsoft lo rende gratuito
ora puoi anche avere repository privati ​​gratuiti e puoi configurare
quanti team vuoi se vuoi collaborare con altri programmatori ma
essenzialmente quello che fa per me è che mi permette di condividere il mio codice online in formato
in modo tale che altre persone possano usarlo open source che possano compilarlo o usarlo
o eseguirlo sui propri computer e poi se decidono vabbè preferisco
funziona in questo modo o forse c'è un bug e posso risolvere il problema che possono fare quello che
chiamato una richiesta di pull quindi fondamentalmente clonano il mio repository GitHub il mio software
code lo aggiustano sul loro computer e poi fanno una richiesta pull che spinge
indietro mentre lo spingono indietro alla loro forcella e quindi crea una richiesta di pull
per me in modo che vedo che hey Joe soffierà sulla loro correzione di questo bug con il mio
software posso fare clic su un pulsante e importerà quella correzione nel mio software così
c'è molto da fare ed è davvero molto potente che possa essere
confondere soprattutto quando si inizia a schiacciare e fondere loro e quelli
tipi di cose in cui non entreremo oggi, ma ciò che voglio
mostrarti come sta andando la conoscenza di base su come funziona
permetterti di usare GitHub in modo efficace pensalo come quello in cui ti trovi
mettere il tuo codice là fuori come software open source e non deve esserlo
puoi averlo privato se vuoi ma nel mio caso è quello che sto facendo che voglio
le persone che collaborano con me di tanto in tanto forse pubblicheranno problemi
se trovano un bug e poi sono ancora la persona che deve risolverlo ma a
almeno la mia comunità sta entrando nel mio repository di software e dicendo che questo è un file
problema e devi risolverlo tutto bene, quindi github calm è dove vai è segno
per il tuo account gratuito tutto ciò che devi fare è fare clic sul collegamento e fare clic su
registrati ora Ho già un account, quindi accedo come me stesso
e accedi in modo da poter vedere qui che se vado ai miei repository quindi se salto
a casa qui e vai a lasciarlo caricare qui lasciarlo caricare bene Io vado e basta
straight to cat 5 TV è dove ospito tutto il mio software, quindi vai lì
github.com slash cat 5 TV e vedrai come funziona
così puoi vedere che ho un sacco di repository software e sono tutti
progetti diversi tutte cose diverse che ho fatto o che sto continuando
da fare e ci sono pagine e pagine e pagine di esso, quindi una volta che hai il tuo github
account puoi accedere a quello che vedi qui che è il mio elenco di repository ma
quando ti registri per la prima volta non avrai tutto ciò che devi creare
il tuo primo repository quindi il modo in cui lo farò ora lo capisci
github non è richiesto dimentica ok e git non è la stessa cosa di github github è un file
servizio online e pensalo come un cloud storage dimentica ok non è la stessa cosa
cosa è un archivio online per quello strumento di gestione dei pacchetti open source o un file
strumento di gestione dei progetti, quindi qui su GitHub l'hanno reso davvero davvero
facile dire semplicemente nuovo repository, quindi sono andato ai miei repository e ho
cliccato su nuovo e poi gli darò un nome che chiamerò questo
uno il mio test di sottolineatura e una descrizione opzionale questo è un test per lo spettacolo
se vuoi che sia pubblico o privato e quindi inizializzalo con un file
readme è sempre meglio farlo in modo che le persone possano accedervi
subito compreso te stesso che vuoi aggiungere una licenza vuoi aggiungere un file
git ignore Lascerò entrambi vuoti e scoprirai cosa significa
il futuro e crea il tuo repository così ora ne ho uno chiamato test di sottolineatura
ma non c'è niente lì e ho finito con il browser quindi ora cosa sto andando
quello che devo fare è aprire il mio terminale e nel mio terminale lo farò
digita okay così puoi vedere che ho
già installato se non lo hai installato quindi sono su Linux sono su
Debian Linux qui puoi digitare apt install git che è quello che stai per fare
tipo non sono scortese sudo su loggato è rock ok apt install ma lo dirà
io che ho già la corrente oh c'è un no no l'ho già presa
ci sono altri aggiornamenti per me, ma get è già la versione più recente così
se non ce l'hai devi installarlo se sei su un RPM
sistema sarà yum install git e puoi anche trovarlo nella tua GUI
gestore di repository il tuo gestore di pacchetti o qualsiasi cosa tu usi come un sinaptico
gestore di pacchetti, ad esempio, quindi una volta installato crea una cartella
probabilmente nella tua cartella home e chiameremo questi repository solo in modo che io
avere un posto dove so sempre che il mio codice è corretto, quindi questo sarà un file
copia locale del mio repository git quindi ora digiterò git clone e siamo
copierò questo URL github.com slash cat 5 TV slash il mio test di sottolineatura così posso
copia quello solo con ctrl C ti abituerai a digitarlo semplicemente è il tuo
nome utente taglia il tuo repository e ora quindi se guardo il mio file system allora è
clonato ottieni clone e quindi il nome del o l'URL del repository quindi ora
se vado nella mia cartella home e poi nei repository noto che è di proprietà di root
perché vedo un super utente che fa causa, quindi ora c'è una cartella chiamata my test e
all'interno del mio test c'è un file chiamato readme MD quindi all'interno di questa cartella quindi sono
vado nel mio test e voglio creare un nuovo file che chiamerò questo
nano test dot SH e creeremo un file SH veloce per eseguire uno script bash e
Vado a digitare echo ciao là come va oh dovrei davvero
attenersi alla norma ciao mondo, come va?
quindi l'ho scritto e l'ho chiuso, quindi ora vedi che c'è un file chiamato
test dot s H ora quando trasferisco un file su github i permessi sono
sarà incluso con quella spinta, quindi se eseguo il test del punto barra, il punto s H tu
nota che dice che il permesso negato devo renderlo esecutivo esecutivo tutto chmod
più x test dot s H quindi ora se digito test dot s HS s hello world quindi ora
avere il mio primissimo pezzo di script pronto per andare su GitHub fa parte del mio
repository sul mio computer locale ma non è ancora in GitHub, quindi se guardi
github aggiornerò solo per provare che vedi il tuo elenco di file qui e
c'è ancora solo il file readme ok quindi ora di nuovo nella mia finestra del terminale vado
usa di nuovo quel comando git che andrò a ottenere add star all'interno dei repository
cartella che dice trova tutti i file che hanno modifiche e aggiungili ok get
commit - am e poi tra virgolette dai un nome al tuo commit così dirò
il mio primo script e queste sono solo brevi descrizioni e premi invio e
ora sta dicendo hey devi dirci chi sei perché non l'hai mai e poi mai
esegui git su questo computer prima, quindi devi eseguire questi due comandi abbastanza
semplice get config - - globale devi solo
fallo una volta non preoccuparti per l'email dell'utente e se hai problemi a digitarlo basta
copialo ok e poi tra virgolette metto Robby nella categoria 5 TV e basta
dicendogli solo il mio indirizzo e-mail, poi vado con nome punto utente non lo so
se puoi sentirlo, ma in realtà è davvero una brutta tempesta fuori dal nostro studio
oggi quindi le luci tremolano un paio di volte e ma penso che arriveremo
attraverso di esso comunque quindi va bene cancellalo e cambia il mio nome in Robby
Ferguson entra ok fatto quindi devo farlo solo una volta quindi ora scena
la prossima volta che eseguo quel git commit - lo sto solo aggiungendo ok
quindi l'ho aggiunto e vede che un file è cambiato ce ne sono due
inserimenti e testare SH è nuovo, quindi lo creerà, quindi ora il finale
il comando che devo inserire è get push origin e specificherò il file
master che è il branch master quindi origin master e ora va a
chiedimi il mio nome utente e la password che ho inserito quando ho creato il mio
account quindi cat5 TV è il mio nome utente e la mia password. Uso LastPass e ne creo di nuovi
password tutto il tempo e sono enormi e folli, quindi ho copiato una password
e poi l'ho incollato ed ecco che sta caricando quei dati nel mio file
repository ed è fatto così f5 per aggiornare e dovresti vedere il test SH
ora fa parte del mio repository GitHub ed eccolo lì e mostra che è
ciao mondo esecutivo quindi ora di nuovo qui quindi facciamo finta di aver apportato modifiche
altrove quindi su un altro computer e lo farò tramite il browser
solo per mostrarti così su questo sistema andrò di nuovo echo ciao okay e poi
Salverò quei cambiamenti, non gli darò un nome o qualcosa di simile
quella descrizione la confermerò quindi ora lo script ha questo aspetto, quindi guarda
come lo cambio anche nel browser, puoi farlo da qualsiasi luogo, quindi ora se
Guardo il mio file localmente sul mio computer nel repository, ci andiamo ancora
Dico solo ciao mondo, okay quindi vado a tirare di nuovo sto facendo tutto questo
all'interno della cartella di test my underscore quindi git pull cercherà qualsiasi file
modifiche che sono state apportate altrove e quindi trasferirle sul mio computer
sincronizza sempre le modifiche, quindi ora se apro Nano e apro quel file
puoi vedere di nuovo quel nuovo ciao ora fa parte di questo, quindi ti mostrerò l'eco
ciao volte tre e lo salverò e ora farò l'esatto
la stessa cosa ma ti mostro come è diverso ora
Ho già inserito il mio nome e il mio indirizzo email get Ad Star get commit -
sono l'aggiornamento finale ottenere push origin master cap 5 TV è il mio nome utente e la mia password
è una stringa di circa 64 caratteri selezionati casualmente e ho intenzione di incollare
che dentro e ci andiamo, quindi è tutto quello che c'è da fare ora per spingere i miei cambiamenti
localmente al server GitHub in modo che lo condivida di nuovo con tutti gli altri o
con gli altri miei sistemi quando eseguo un get pull, così facendo posso ottenere clomp
scusami, clona qualcosa e non deve essere mio, può essere
il repository GitHub di qualcun altro fintanto che è pubblico ma poi posso creare
le modifiche sulla mia macchina locale e poi posso fare una spinta ora che devi possedere
il repository per fare un push così il modo per apportare modifiche a qualcuno
il repository di altro deve eseguirne il fork, quindi quando vai al repository fai clic su
il pulsante chiamato fork e fondamentalmente ne fa una copia nel tuo account
a cui puoi apportare modifiche e quindi è lì che puoi eseguire le richieste pull
ma queste sono le basi per iniziare che te lo permetteranno
crea repository carica i tuoi file carica il tuo codice essere in grado di manipolare
da qualsiasi sistema in modo da poterlo testare su un Raspberry Pi sulla tua macchina Windows
sul tuo desktop Linux su qualsiasi cosa e quindi sposta tutte queste modifiche fino al file
server in modo che possano essere scaricati o estratti su tutti i tuoi sistemi, quindi è
tutto quello che c'è da fare
[Musica]
