1
00:00:01,520 --> 00:00:07,200
カテゴリ5のコミュニティコーヒーブレイクに参加したことがない場合は、

2
00:00:07,200 --> 00:00:11,490
カテゴリで詳細を確認してください-5ドットTVはホームページを下にスクロールするだけです

3
00:00:11,490 --> 00:00:15,570
コミュニティのコーヒーブレイクとスケジュールが表示されます。

4
00:00:15,570 --> 00:00:19,920
次はズームで開催する毎週のイベントです」

5
00:00:19,920 --> 00:00:23,430
そしてそれは私たちのコミュニティが集まり、さらには

6
00:00:23,430 --> 00:00:29,189
私たちは皆、今日私たちの世界で経験していることを経験していますが、私たちは

7
00:00:29,189 --> 00:00:35,370
それらのことについて話すのではなく、言うためのアプローチを取りました

8
00:00:35,370 --> 00:00:40,260
それは今私たちを倒しているそれを見て、私たち全員だと言ってみましょう

9
00:00:40,260 --> 00:00:47,039
この状況で立ち往生している私がしていることは何ですかそれは私を興奮させます

10
00:00:47,039 --> 00:00:52,010
私が技術的に実験しているのは何ですか

11
00:00:52,010 --> 00:00:56,489
私にとって興味深く、家で立ち往生しているかどうかにかかわらず、時間を費やすのを手伝ってくれます

12
00:00:56,489 --> 00:01:03,989
今またはどんな場合でも、トピックはgithubについて出てきました。

13
00:01:03,989 --> 00:01:10,380
私たちはプログラミングについて話していて、ピーターはほぼ毎回そこにいます

14
00:01:10,380 --> 00:01:14,580
コミュニティコーヒーブレイクとピーターは、githubをどのようにうまく使用するかをよく尋ねていました

15
00:01:14,580 --> 00:01:18,750
実際には、私たちが見せたり話したりできるものではありません。

16
00:01:18,750 --> 00:01:22,799
コーヒーブレイクを通り抜けましたが、それは本当にそうだと思いました

17
00:01:22,799 --> 00:01:27,330
カテゴリ5のテクノロジーTVとその理由について話し合うのに良いトピック

18
00:01:27,330 --> 00:01:34,350
最初に出てきたのは、Microsoftがgithubを購入したときにそれを保持していたためです

19
00:01:34,350 --> 00:01:39,570
現状のままで、特定の機能にお金を払わなければなりませんでしたが

20
00:01:39,570 --> 00:01:48,240
それから突然ごく最近マイクロソフトが言ったそしてそれらのすべては機能にお金を払わなかった

21
00:01:48,240 --> 00:01:51,899
それらのすべてを除いて、あなたが支払わなければならなかった機能のために支払われたものの多く

22
00:01:51,899 --> 00:01:55,500
今は無料なので、彼らはサービスを受けており、基本的には

23
00:01:55,500 --> 00:02:00,659
githubcomでプレミアムサービスを完全無料で提供しているので

24
00:02:00,659 --> 00:02:06,600
githubよくgithubはクラウドサービスプロバイダーのようなものですが、

25
00:02:06,600 --> 00:02:10,800
開発者それはあなたが行くことができるように私たちのプロジェクトを管理できるようにするのに役立ちます

26
00:02:10,800 --> 00:02:15,050
基本的にコードで時間を遡り、できることは本当に役に立ちます

27
00:02:15,050 --> 00:02:20,540
それらのコミットを確認し、変更がプロジェクトにどのように影響したかを確認してください。

28
00:02:20,540 --> 00:02:26,330
コードを共有できるため、コードの優れたストレージメカニズム

29
00:02:26,330 --> 00:02:30,350
あなたが今欲しいなら他の人もちろんマイクロソフトはそれを無料にします

30
00:02:30,350 --> 00:02:37,640
無料のプライベートリポジトリも利用できるようになり、設定できるようになりました

31
00:02:37,640 --> 00:02:41,300
他のプログラマーとコラボレーションしたい場合は、必要な数のチームが

32
00:02:41,300 --> 00:02:45,920
本質的にそれが私のために何をするかは私が私のコードをオンラインで共有することを可能にするということです

33
00:02:45,920 --> 00:02:49,459
他の人がそれをオープンソースで使用できるように、コンパイルまたは使用することができます

34
00:02:49,459 --> 00:02:55,459
それを実行するか、自分のコンピューターで実行して、彼らがまあまあ決定した場合、私はむしろ

35
00:02:55,459 --> 00:02:59,510
それはこのように機能するか、おそらくここにバグがあり、私は彼らが何をすることができるかを修正することができます

36
00:02:59,510 --> 00:03:05,390
プルリクエストと呼ばれるので、基本的に彼らは私のgithubリポジトリを私のソフトウェアのクローンにします

37
00:03:05,390 --> 00:03:10,730
彼らは自分のコンピューターでそれを修正し、次にプッシュするプルリクエストを実行するコード

38
00:03:10,730 --> 00:03:16,100
彼らがそれを彼らのフォークに押し戻す間それを戻し、それからそれはプルリクエストを作成します

39
00:03:16,100 --> 00:03:21,709
私にとっては、ジョーがこのバグを修正するために吹き飛ばすことがわかります。

40
00:03:21,709 --> 00:03:26,720
ソフトウェアボタンをクリックすると、その修正がソフトウェアにインポートされます。

41
00:03:26,720 --> 00:03:33,890
それにはたくさんのことがありますそしてそれは本当にそれができる非常に強力です

42
00:03:33,890 --> 00:03:37,519
特にあなたがそれらとそれらを押しつぶしてマージすることに入るとき混乱します

43
00:03:37,519 --> 00:03:41,390
今日は入りませんが、やりたいこと

44
00:03:41,390 --> 00:03:47,150
それがどのように機能するかについての最も基本的な知識がどのように行われるかを示します

45
00:03:47,150 --> 00:03:53,720
githubを効果的に使用できるようにするあなたがいる場所と考えてください

46
00:03:53,720 --> 00:03:58,519
コードをオープンソースソフトウェアとして公開する必要はありません。

47
00:03:58,519 --> 00:04:03,470
必要に応じてプライベートにすることもできますが、私の場合はそれが私がやりたいことです

48
00:04:03,470 --> 00:04:07,130
たまに私と協力してくれる人が問題を投稿するかもしれません

49
00:04:07,130 --> 00:04:10,430
彼らがバグを見つけた場合、それでも私はそれを修正しなければならない人ですが、

50
00:04:10,430 --> 00:04:15,590
少なくとも私のコミュニティは私のソフトウェアリポジトリにやって来て、これは

51
00:04:15,590 --> 00:04:21,769
問題があり、問題を修正する必要があるので、githubcalmがどこに行くのかがわかります

52
00:04:21,769 --> 00:04:26,360
あなたがしなければならないのはあなたの無料のアカウントのためにリンクをクリックしてクリックすることだけです

53
00:04:26,360 --> 00:04:30,080
今すぐサインアップ私はすでにアカウントを持っているので、自分でログインします

54
00:04:30,080 --> 00:04:37,789
サインインすると、リポジトリに移動した場合にジャンプした場合に表示されます。

55
00:04:37,789 --> 00:04:47,569
ここに家に帰ってここにロードさせてロードさせて大丈夫私は行くつもりです

56
00:04:47,569 --> 00:04:56,000
cat 5 TVに直接アクセスすると、すべてのソフトウェアがホストされるので、そこに移動します。

57
00:04:56,000 --> 00:04:58,909
github.comはcat5 TVをスラッシュし、これがどのように機能するかを確認します

58
00:04:58,909 --> 00:05:02,779
だからあなたは私がたくさんのソフトウェアリポジトリを持っているのを見ることができますそしてそれらはすべてです

59
00:05:02,779 --> 00:05:07,099
さまざまなプロジェクト私が行った、または継続しているすべてのさまざまなこと

60
00:05:07,099 --> 00:05:12,889
やるべきこととそれのページとページとページがあるので、あなたがあなたのgithubを手に入れたら

61
00:05:12,889 --> 00:05:19,340
アカウントあなたは私のリポジトリリストであるここに表示されているものにログインできますが

62
00:05:19,340 --> 00:05:23,090
最初にサインアップするとき、作成する必要のあるこれらすべてを持っているわけではありません

63
00:05:23,090 --> 00:05:26,750
あなたの最初のリポジトリなので、私がそれを行う方法は今理解しています

64
00:05:26,750 --> 00:05:33,289
githubは必要ありませんokを忘れてくださいそしてgitはgithubと同じではありませんgithubは

65
00:05:33,289 --> 00:05:39,919
オンラインサービスとそれをクラウドストレージと考えてくださいそれは同じではありません

66
00:05:39,919 --> 00:05:46,400
それがそのオープンソースパッケージ管理ツールのオンラインストレージであるということ、または

67
00:05:46,400 --> 00:05:50,960
プロジェクト管理ツールなので、ここgithubで彼らは本当に本当にそれを作りました

68
00:05:50,960 --> 00:05:55,400
簡単に新しいリポジトリを言うことができるので、私は自分のリポジトリに行き、

69
00:05:55,400 --> 00:05:59,360
新規をクリックしてから、これに名前を付けます。

70
00:05:59,360 --> 00:06:07,419
1つのアンダースコアテストとオプションの説明これはショーのテストです

71
00:06:07,419 --> 00:06:12,800
パブリックにするかプライベートにするかを指定してから、

72
00:06:12,800 --> 00:06:17,029
readmeは、人々がアクセスできるようにするために行うのが常に最善です。

73
00:06:17,029 --> 00:06:20,839
ライセンスを追加したい自分自身を含めてすぐに追加したい

74
00:06:20,839 --> 00:06:24,740
gitignore私はそれらの両方を空のままにするつもりですあなたはそれが何を意味するのかを発見するでしょう

75
00:06:24,740 --> 00:06:30,680
将来的にリポジトリを作成するので、アンダースコアテストと呼ばれるものがあります

76
00:06:30,680 --> 00:06:34,459
しかし、そこには何もありません、そして私はブラウザで終わりました、それで今私が行っていること

77
00:06:34,459 --> 00:06:39,830
やるべきことは、自分のターミナルを立ち上げることであり、自分のターミナルで

78
00:06:39,830 --> 00:06:43,320
タイプは大丈夫ですので、私が

79
00:06:43,320 --> 00:06:48,330
インストールされていない場合はすでにインストールされているので、Linuxを使用しています

80
00:06:48,330 --> 00:06:53,460
ここでDebianLinuxは、apt installgitと入力できます。

81
00:06:53,460 --> 00:07:05,640
タイプ私は失礼ではありませんsudosuログインはrockok aptinstallですがそれは言うつもりです

82
00:07:05,640 --> 00:07:09,660
私はすでに現在を持っていると私はああ、私はすでにそれを持っています

83
00:07:09,660 --> 00:07:13,500
私には他にもアップデートがありますが、getはすでに最新バージョンなので

84
00:07:13,500 --> 00:07:17,430
お持ちでない場合は、RPMベースの場合はインストールする必要があります

85
00:07:17,430 --> 00:07:22,980
システムそれはyuminstall gitになり、GUIでも見つけることができます

86
00:07:22,980 --> 00:07:28,740
リポジトリマネージャー、パッケージマネージャー、またはシナプスのように使用するもの

87
00:07:28,740 --> 00:07:33,750
たとえばパッケージマネージャーなので、インストールしたらフォルダーを作成します

88
00:07:33,750 --> 00:07:41,100
おそらくあなたのホームフォルダにあり、私がこのリポジトリと呼ぶのは

89
00:07:41,100 --> 00:07:46,290
私のコードが正しいことを常に知っている場所があるので、これは

90
00:07:46,290 --> 00:07:52,650
gitリポジトリのローカルコピーなので、git cloneと入力して、次のようにします。

91
00:07:52,650 --> 00:08:00,210
このURLをコピーしますgithub.comslash cat 5 TV slash my underscore test so I can

92
00:08:00,210 --> 00:08:08,010
ctrl Cを使用するだけで、入力するだけで慣れることができます。

93
00:08:08,010 --> 00:08:13,560
ユーザー名はリポジトリを大幅に削減します。ファイルシステムを見ると、

94
00:08:13,560 --> 00:08:20,760
cloned get clone次に、リポジトリの名前またはURL

95
00:08:20,760 --> 00:08:25,920
ホームフォルダに移動してからリポジトリに移動すると、ルートが所有していることに気付きます

96
00:08:25,920 --> 00:08:31,740
スーパーユーザーが訴えるのを見たので、今度は私のテストと呼ばれるフォルダがあり、

97
00:08:31,740 --> 00:08:38,250
私のテストにはreadmeMDというファイルがあるので、このフォルダー内にあります。

98
00:08:38,250 --> 00:08:43,250
私のテストに入り、これを呼び出す新しいファイルを作成したい

99
00:08:43,250 --> 00:08:50,970
nano test dotSHとbashスクリプトを実行するための簡単なSHファイルを作成します

100
00:08:50,970 --> 00:08:55,640
こんにちは、echoと入力します。

101
00:08:55,640 --> 00:09:00,970
規範のハローワールドに固執するそれは大丈夫ですか

102
00:09:00,970 --> 00:09:05,690
だから私はそれを書き留めて閉じたので今あなたはというファイルがあるのを見るでしょう

103
00:09:05,690 --> 00:09:13,910
test dot s Hファイルをgithubに転送すると、パーミッションは

104
00:09:13,910 --> 00:09:18,500
そのプッシュに含まれるので、ドットスラッシュテストを行うと、ドットsHあなた

105
00:09:18,500 --> 00:09:23,360
許可が拒否されたと表示されていることに注意してください。すべてのchmodをエグゼクティブエグゼクティブにする必要があります。

106
00:09:23,360 --> 00:09:30,680
plus x test dot s H so now type test dot s HS s hello world so I now

107
00:09:30,680 --> 00:09:35,510
スクリプトの最初のビットをgithubに移動する準備をしてください。これは私の一部です。

108
00:09:35,510 --> 00:09:41,870
私のローカルコンピュータのリポジトリですが、まだgithubにないので、見てみると

109
00:09:41,870 --> 00:09:45,500
githubここにファイルリストが表示されていることを証明するために更新します

110
00:09:45,500 --> 00:09:50,390
まだreadmeが残っているので、ターミナルウィンドウに戻ります。

111
00:09:50,390 --> 00:09:56,330
もう一度そのgitコマンドを使用しますリポジトリ内にスターを追加します

112
00:09:56,330 --> 00:10:01,270
変更があるファイルを見つけて追加することを言っているフォルダ

113
00:10:01,270 --> 00:10:09,680
コミット-午前と引用符でコミットに名前を付けるので、私は言うつもりです

114
00:10:09,680 --> 00:10:14,480
私の最初のスクリプトとこれらはほんの短い説明であり、Enterキーを押して

115
00:10:14,480 --> 00:10:19,220
今までに一度も行ったことがないので、あなたが誰であるかを私たちに伝える必要があると言っています

116
00:10:19,220 --> 00:10:24,380
前にこのコンピューターでgitを実行するので、これら2つのコマンドをかなり実行する必要があります

117
00:10:24,380 --> 00:10:29,030
簡単なgetconfig ----グローバルあなたがする必要があるのは

118
00:10:29,030 --> 00:10:33,350
これを一度行うと、ユーザーのドットメールを心配する必要はありません。入力に問題がある場合は、

119
00:10:33,350 --> 00:10:39,980
それをコピーして大丈夫、それから引用符で私はロビーをカテゴリー5のテレビに入れるつもりですそしてそれは

120
00:10:39,980 --> 00:10:48,890
メールアドレスを伝えるだけで、わからないユーザードット名になります

121
00:10:48,890 --> 00:10:52,550
あなたがそれを聞くことができるが、それは実際には私たちのスタジオの外で本当にひどい嵐です

122
00:10:52,550 --> 00:10:56,720
今日はライトが数回ちらつきますが、私たちは得るつもりだと思います

123
00:10:56,720 --> 00:11:02,090
とにかくそれを通して大丈夫それを削除し、私の名前をロビーに変更します

124
00:11:02,090 --> 00:11:06,710
ファーガソンは大丈夫ですので、一度だけ行う必要があります。

125
00:11:06,710 --> 00:11:11,420
次回そのgitcommitを実行するときは、追加するだけで大​​丈夫ですか？

126
00:11:11,420 --> 00:11:15,050
追加したところ、1つのファイルが変更されたことがわかります。2つあります。

127
00:11:15,050 --> 00:11:20,270
挿入とテストSHは新しいので、それを作成します。

128
00:11:20,270 --> 00:11:26,450
入力する必要のあるコマンドは、プッシュオリジンを取得することです。これを指定します。

129
00:11:26,450 --> 00:11:32,360
ブランチマスターであるマスターなので、オリジンマスターになります。

130
00:11:32,360 --> 00:11:35,720
作成時に入力したユーザー名とパスワードを尋ねる

131
00:11:35,720 --> 00:11:44,360
アカウントなので、cat5 TVが私のユーザー名とパスワードで、LastPassを使用して新しいものを生成します

132
00:11:44,360 --> 00:11:49,430
パスワードはいつも巨大でクレイジーなので、パスワードをコピーしました

133
00:11:49,430 --> 00:11:57,500
それを貼り付けたら、そのデータを自分のデータにアップロードします

134
00:11:57,500 --> 00:12:02,840
リポジトリとそれはf5で更新され、テストSHが表示されるはずです。

135
00:12:02,840 --> 00:12:09,200
は私のgithubリポジトリの一部になりましたが、そこにあり、それが

136
00:12:09,200 --> 00:12:17,330
Executive hello worldだから今ここに戻ってきたので、変更を加えたふりをしましょう

137
00:12:17,330 --> 00:12:20,750
他の場所では別のコンピューターでこれを行うのはブラウザーです

138
00:12:20,750 --> 00:12:29,270
このシステムであなたにそのように見せるために、私は再びエコーハローに行きます

139
00:12:29,270 --> 00:12:33,680
これらの変更を保存します。名前などを付けるつもりはありません。

140
00:12:33,680 --> 00:12:37,340
その説明を確認するだけなので、スクリプトは次のようになります。を参照してください。

141
00:12:37,340 --> 00:12:41,600
私がブラウザでそれをどのように変更するかあなたはどこからでもこれを行うことができるので今なら

142
00:12:41,600 --> 00:12:47,510
私は自分のファイルを自分のコンピューターのリポジトリーにローカルで見ています。

143
00:12:47,510 --> 00:12:53,630
Hello worldは大丈夫だと言っているので、もう一度引っ張って行きます。これをすべてやっています。

144
00:12:53,630 --> 00:12:58,700
私のアンダースコアテストフォルダ内にあるので、gitpullはそれから何かを探します

145
00:12:58,700 --> 00:13:02,510
他の場所で行われた変更を私のコンピューターにプルダウンするので

146
00:13:02,510 --> 00:13:07,460
常にそれらの変更を同期しているので、Nanoを開いてそのファイルを開くと

147
00:13:07,460 --> 00:13:14,000
新しいこんにちはが再びその一部になっていることがわかりますので、エコーをお見せします

148
00:13:14,000 --> 00:13:20,270
こんにちは3回、私はそれを保存するつもりですそして今私は正確なことをするつもりです

149
00:13:20,270 --> 00:13:22,400
同じことですが、今ではどのように違うのかをお見せします

150
00:13:22,400 --> 00:13:28,490
私はすでに私の名前を入力し、私のメールアドレスはAdStarを取得してコミットします-

151
00:13:28,490 --> 00:13:39,410
最終更新はプッシュオリジンマスターキャップを取得します5TVは私のユーザー名とパスワードです

152
00:13:39,410 --> 00:13:50,120
ランダムに選択された約64文字の文字列で、貼り付けます

153
00:13:50,120 --> 00:13:56,060
あちこちで行くので、これで私の変更をプッシュすることができます

154
00:13:56,060 --> 00:14:00,680
githubサーバーにローカルで接続して、他のすべてのユーザーと再度共有するか、

155
00:14:00,680 --> 00:14:05,510
他のシステムでは、get pullを実行すると、clompを取得できます。

156
00:14:05,510 --> 00:14:09,980
何かをgitcloneしてください。私のものである必要はありません。

157
00:14:09,980 --> 00:14:14,690
公開されている限り、他の誰かのgithubリポジトリですが、作成できます

158
00:14:14,690 --> 00:14:19,070
ローカルマシンで変更すると、プッシュを実行できるようになります。

159
00:14:19,070 --> 00:14:24,710
プッシュを行うためのリポジトリなので、誰かに変更を加える方法

160
00:14:24,710 --> 00:14:29,570
elseのリポジトリはそれをフォークするので、リポジトリに移動するときにクリックします

161
00:14:29,570 --> 00:14:34,040
フォークと呼ばれるボタンで、基本的に自分のアカウントにコピーを作成します

162
00:14:34,040 --> 00:14:37,550
変更を加えることができ、プルリクエストを実行できる場所です

163
00:14:37,550 --> 00:14:41,000
しかし、これらはあなたが始めるための基本であり、あなたができるようになるでしょう

164
00:14:41,000 --> 00:14:45,680
リポジトリを作成するファイルをアップロードするコードをアップロードする操作できるようにする

165
00:14:45,680 --> 00:14:49,250
WindowsマシンのRaspberryPiでテストできるように、任意のシステムから取得できます

166
00:14:49,250 --> 00:14:54,410
Linuxデスクトップで何でも、それらすべての変更を

167
00:14:54,410 --> 00:14:59,030
サーバーをダウンロードしたり、すべてのシステムにプルしたりできるようにします。

168
00:14:59,030 --> 00:15:01,810
そこにあるすべて

169
00:15:07,430 --> 00:15:10,480
[音楽]

