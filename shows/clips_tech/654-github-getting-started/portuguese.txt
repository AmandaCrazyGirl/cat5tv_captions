agora, se você nunca se juntou a nós para uma pausa para o café da comunidade de categoria 5, você
descubra mais sobre isso na categoria cinco dot TV, basta rolar para baixo na página inicial
e você verá o intervalo para o café da comunidade junto com nossa programação quando
vamos fazer o próximo, é um evento semanal que fazemos zoom '
e é uma oportunidade para nossa comunidade se reunir e até mesmo
embora todos estejamos experimentando o que estamos experimentando em nosso mundo hoje, nós
adotou a abordagem de dizer em vez de falar sobre essas coisas, as coisas
que estão nos deixando para baixo agora, vamos dar uma olhada e dizer olhe, todos nós
preso nesta situação, o que é o que estou fazendo que me deixa animado
o que estou experimentando tecnologicamente que é realmente
interessante para mim e me ajudando a ocupar o tempo se estou preso em casa
agora ou qualquer que seja o caso, então o assunto surgiu sobre o github porque
estamos falando sobre programação e Peter está lá quase sempre para um
pausa para o café da comunidade e Peter estava perguntando bem como você usa bem o github
não são realmente algo que podemos mostrar ou falar, você sabe, caminhar com você
durante a pausa para o café, mas descobri que, ei, isso seria realmente
bom tópico para discutir na TV de tecnologia da categoria cinco e o motivo pelo qual
surgiu inicialmente porque quando a Microsoft comprou o github eles o mantiveram
indo até o status quo como estava e você tinha que pagar por alguns recursos, mas
então, de repente, muito recentemente a Microsoft disse e todos aqueles pagos por recursos não
todos eles, mas muitos daqueles pagos por recursos que você costumava ter que pagar
por agora são gratuitos, então eles estão usando o serviço e estão basicamente
oferecendo seu serviço premium totalmente gratuito no github com, então o que
github well github é como um provedor de serviços em nuvem, mas é para
desenvolvedores nos ajuda a sermos capazes de gerenciar nossos projetos para que vocês possam ir
voltar no tempo, basicamente com o código e é realmente útil ser capaz de
veja esses commits e veja como as mudanças impactaram seu projeto, é também um
ótimo mecanismo de armazenamento para o seu código, porque você pode compartilhá-lo com
outras pessoas, se você quiser agora, é claro que a Microsoft está tornando-o gratuito
agora você pode ter repositórios privados gratuitos também e pode configurar
quantas equipes você quiser, se quiser colaborar com outros programadores, mas
essencialmente, o que ele faz para mim é permitir que eu compartilhe meu código online em
de forma que outras pessoas possam usá-lo de código aberto, eles podem compilá-lo ou usar
ou executá-lo em seus próprios computadores e, se decidirem, tudo bem, prefiro
funciona assim ou talvez haja um bug e posso consertar que eles podem fazer o que
chamado de pull request, então basicamente eles clonam meu repositório github meu software
código, eles corrigem no computador e, em seguida, fazem uma solicitação de pull que empurra
de volta enquanto eles o empurram de volta para o garfo e, em seguida, ele cria uma solicitação de pull
para mim, para que eu veja que ei Joe vai acabar com a correção desse bug com o meu
software, posso clicar em um botão e ele importará essa correção para o meu software,
há muito nisso e é realmente muito poderoso, pode ser
confuso, especialmente quando você começa a comprimi-los e mesclá-los com aqueles
tipos de coisas que não vamos abordar hoje, mas o que eu quero
mostrar como o conhecimento mais básico sobre como funciona vai
permitem que você use o github de uma maneira eficaz, pense nisso como onde você está
colocar seu código lá fora como um software de código aberto e não precisa ser
você pode ter privado se quiser, mas no meu caso é o que estou fazendo, eu quero
pessoas colaborem comigo ocasionalmente, talvez postem problemas
se eles encontrarem um bug e eu ainda sou a pessoa que deve consertá-lo, mas em
pelo menos minha comunidade está entrando em meu repositório de software e dizendo que este é um
problema e você precisa consertá-lo, então github, calma, é onde você vai é sinal
para obter sua conta gratuita, tudo o que você precisa fazer é clicar no link e clicar
inscreva-se agora já tenho uma conta, então vou entrar como eu mesmo
e faça login para ver aqui que se eu for para meus repositórios, se eu pular
casa aqui e vai deixar carregar aqui deixa carregar tudo bem eu só vou ir
direto para cat 5 TV é onde eu hospedo todos os meus softwares, então você vai lá
github.com slash cat 5 TV e você verá como isso funciona
então você pode ver que tenho uma tonelada de repositórios de software e todos eles
projetos diferentes, todas as coisas diferentes que fiz ou continuo
para fazer e há páginas e mais páginas disso, então quando você tiver seu github
conta você pode entrar no que você vê aqui, que é a minha lista de repositórios, mas
quando você se inscrever pela primeira vez, não terá tudo o que precisa para criar
seu primeiro repositório, então a maneira que vou fazer agora entendo
github não é obrigatório, esqueça ok e git não é o mesmo que github github é um
serviço online e pense nisso como armazenamento em nuvem esqueça ok não é o mesmo
coisa que é um armazenamento online para essa ferramenta de gerenciamento de pacote de código aberto ou um
ferramenta de gerenciamento de projetos, então aqui no github eles fizeram isso realmente
fácil simplesmente dizer novo repositório, então fui para meus repositórios e
clicou em novo e, em seguida, vou dar-lhe um nome que vou chamar de
um meu teste de sublinhado e uma descrição opcional este é um teste para o show
se você deseja que seja público ou privado e, em seguida, inicialize-o com um
leia-me, é sempre melhor fazer isso, é para que as pessoas possam acessá-lo
imediatamente incluindo você mesmo, você deseja adicionar uma licença você deseja adicionar um
git ignore, vou deixar ambos vazios, você descobrirá o que isso significa em
o futuro e crie seu repositório, então agora eu tenho um chamado meu teste de sublinhado
mas não há nada lá e eu terminei com o navegador, então agora o que vou fazer
a fazer é abrir o meu terminal e no meu terminal vou
digite fique bem para que você possa ver que eu
já instalei se não tiver instalado então estou no Linux estou no
Debian Linux aqui você pode digitar apt install git é isso que você vai
digite eu não sou rude sudo su logado é rock ok apt instalar ainda vai dizer
eu que eu já tenho o atual oh não há um não eu já tenho
existem outras atualizações para mim, mas get já é a versão mais recente, então
se você não tiver, você precisa instalá-lo se estiver em um RPM baseado
sistema será yum install git e você também pode encontrá-lo em sua GUI
gerenciador de repositório seu gerenciador de pacotes ou o que você usar como algum sináptico
gerenciador de pacotes, por exemplo, uma vez instalado, crie uma pasta
provavelmente em sua pasta de início e vamos chamá-los de repositórios apenas para que eu
tenho um lugar onde sempre sei que meu código está certo, então isso vai ser um
cópia local do meu repositório git, então agora vou digitar git clone e vamos
vou copiar este URL github.com slash cat 5 TV slash meu teste de sublinhado para que eu possa
copie isso apenas com ctrl C você vai se acostumar apenas a digitar é seu
nome de usuário corta seu repositório e agora, se eu olhar para o meu sistema de arquivos, é
clonado obter clone e então o nome do ou a URL do repositório agora
se eu for para a minha pasta pessoal e depois para os repositórios, noto que é propriedade do root
porque vejo cara superusuário processando, então agora há uma pasta chamada meu teste e
dentro do meu teste, há um arquivo chamado readme MD, então dentro desta pasta estou
vou para o meu teste e quero criar um novo arquivo, vou chamá-lo
nano test dot SH e vamos criar um arquivo SH rápido para executar um script bash e
Vou digitar echo oi como é isso, eu realmente deveria
siga as normas, olá, mundo, tudo bem
então eu escrevi e fechei, então agora você vê que há um arquivo chamado
teste o ponto s H agora, quando eu transferir um arquivo para o github, as permissões são
vai ser incluído com aquele push, então se eu fizer o teste ponto slash ponto s H você
observe que diz permissão negada, preciso torná-lo executivo executivo todo chmod
mais x test dot s H então agora se eu digitar test dot s HS s hello world então eu agora
tenho meu primeiro pedaço de script pronto para ir para o github, é parte do meu
repositório no meu computador local, mas ainda não está no github, então se você olhar
github vou atualizar apenas para provar que você vê sua lista de arquivos aqui e
ainda há apenas o readme ok então agora de volta na janela do meu terminal eu vou
novamente, use o comando git. Vou buscar add star dentro dos repositórios
pasta que está dizendo: encontre todos os arquivos que tenham quaisquer alterações e adicione-os ok get
commit - am e depois entre aspas dê um nome ao seu commit, então vou dizer
meu primeiro script e essas são apenas pequenas descrições e pressione Enter e
agora está dizendo ei, você precisa nos dizer quem você é porque você nunca, nunca
execute o git neste computador antes, então você precisa executar esses dois comandos muito
obter configuração direta - - global, você só precisa
faça isso uma vez, não se preocupe com o e-mail do usuário e, se tiver problemas para digitar, basta
copie-o ok e então entre aspas vou colocar Robby na categoria 5 de TV e isso é
apenas informando meu endereço de e-mail, então eu irei usuário nome de ponto eu não sei
se você pode ouvir isso, mas na verdade é uma tempestade muito forte fora do nosso estúdio
hoje, então as luzes estão piscando algumas vezes e acho que vamos conseguir
através dele de qualquer maneira, tudo bem, exclua isso e mude meu nome para Robby
Ferguson entra ok feito então eu só tenho que fazer isso uma vez então agora cena
da próxima vez que eu executar o git commit - ele está apenas adicionando, certo?
então eu adicionei e ele vê que um arquivo foi alterado, há dois
inserções e teste de SH é novo, então ele vai criar isso agora o final
comando que preciso inserir é get push origin e vou especificar o
mestre que é o mestre do ramo, então o mestre de origem e agora vai
peça meu nome de usuário e senha que eu inseri quando criei meu
conta, então cat5 TV é meu nome de usuário e minha senha Eu uso o LastPass e gero novos
senhas o tempo todo e elas são enormes e malucas, então copiei uma senha
e então eu colei e pronto, carreguei os dados para o meu
repositório e é feito então f5 para atualizar e você deve ver o teste SH
agora faz parte do meu repositório github e aí está e mostra que é
olá, mundo executivo, agora de volta aqui, vamos apenas fingir que fiz alterações
em outro lugar, então em outro computador e vou fazer isso por meio do navegador
só para te mostrar neste sistema eu vou ecoar olá novamente ok e então
Vou salvar essas alterações, não vou dar um nome ou algo parecido
essa descrição vou apenas confirmar, então agora o script se parece com isso, então veja
como eu mudo isso no navegador também, você pode fazer isso de qualquer lugar, então agora se
Eu vejo meu arquivo localmente no meu computador no repositório lá vamos nós ainda
apenas diga olá, mundo, ok, então eu vou conseguir puxar novamente Estou fazendo isso tudo
dentro da minha pasta de teste de sublinhado, então git pull irá procurar por qualquer
mudanças que foram feitas em outro lugar e puxá-las para o meu computador para
está sempre sincronizando essas mudanças, então agora, se eu abrir o Nano e abrir aquele arquivo
você pode ver que aquele novo olá de novo agora faz parte disso, então vou mostrar o eco
olá três vezes e vou salvar isso e agora vou fazer o exato
a mesma coisa, mas mostrar como é diferente agora que
Já inseri meu nome e meu endereço de e-mail get Ad Star get commit -
sou final update get push origin master cap 5 TV é meu nome de usuário e minha senha
é uma string de cerca de 64 caracteres selecionados aleatoriamente e vou colar
isso e lá vamos nós, então isso é tudo que temos agora empurrando minhas mudanças
localmente para o servidor github para que o compartilhe novamente com todos os outros ou
com meus outros sistemas quando faço um puxão, então posso obter clomp
me perdoe, clone algo e não precisa ser meu, pode ser
o repositório github de outra pessoa, desde que seja público, mas então posso
mudanças nele na minha máquina local e então posso fazer um push agora que você precisa
o repositório, a fim de fazer um push, a maneira de fazer alterações para alguém
o repositório do outro é bifurcá-lo, então quando você for para o repositório, clique em
o botão chamado fork e basicamente faz uma cópia dele em sua própria conta
onde você pode fazer alterações e aí é onde você pode fazer solicitações de pull
mas esses são os princípios básicos para você começar, que lhe permitirão
criar repositórios, carregar seus arquivos, carregar seu código, ser capaz de manipular
de qualquer sistema para que você possa testá-lo em um Raspberry Pi em sua máquina Windows
em seu desktop Linux em qualquer coisa e, em seguida, envie todas essas mudanças para
servidor para que possam ser baixados ou puxados para todos os seus sistemas para que
tudo que há para isso
[Música]
