1
00:00:01,520 --> 00:00:07,200
ahora, si nunca se ha unido a nosotros para un café comunitario de categoría 5,

2
00:00:07,200 --> 00:00:11,490
Obtenga más información al respecto en TV de categoría cinco puntos, simplemente desplácese hacia abajo en la página de inicio

3
00:00:11,490 --> 00:00:15,570
y verá el café comunitario allí junto con nuestro horario cuando

4
00:00:15,570 --> 00:00:19,920
vamos a hacer el próximo es un evento semanal que mantenemos en zoom '

5
00:00:19,920 --> 00:00:23,430
y es una oportunidad para que nuestra comunidad se una e incluso

6
00:00:23,430 --> 00:00:29,189
aunque todos estamos experimentando lo que estamos experimentando en nuestro mundo hoy, hemos

7
00:00:29,189 --> 00:00:35,370
tomó el enfoque de decir en lugar de hablar de esas cosas, las cosas

8
00:00:35,370 --> 00:00:40,260
que nos están derribando ahora mismo, veámoslo y digamos, mira, estamos todos

9
00:00:40,260 --> 00:00:47,039
atrapado en esta situación, ¿qué es lo que estoy haciendo que me emocionó?

10
00:00:47,039 --> 00:00:52,010
¿Qué es lo que estoy experimentando tecnológicamente que es realmente

11
00:00:52,010 --> 00:00:56,489
interesante para mí y ayudándome a ocupar el tiempo si estoy atrapado en casa

12
00:00:56,489 --> 00:01:03,989
ahora mismo o cualquiera que sea el caso, entonces el tema surgió sobre github porque

13
00:01:03,989 --> 00:01:10,380
estamos hablando de programación y Peter está ahí casi siempre durante un

14
00:01:10,380 --> 00:01:14,580
pausa para el café de la comunidad y Peter estaba preguntando cómo se usa bien github

15
00:01:14,580 --> 00:01:18,750
realmente no son algo que podemos mostrar o hablar, sabes, camina

16
00:01:18,750 --> 00:01:22,799
durante la pausa para el café, pero resultó que, bueno, eso sería realmente un

17
00:01:22,799 --> 00:01:27,330
buen tema para discutir sobre la tecnología de televisión de categoría cinco y la razón por la que

18
00:01:27,330 --> 00:01:34,350
surgió inicialmente es porque cuando Microsoft compró github lo mantuvieron

19
00:01:34,350 --> 00:01:39,570
estaba en una especie de status quo como estaba y tenías que pagar por ciertas funciones, pero

20
00:01:39,570 --> 00:01:48,240
luego, de repente, muy recientemente, Microsoft dijo y todos los que pagaron por características no

21
00:01:48,240 --> 00:01:51,899
todos ellos, pero muchos de ellos pagaban por funciones que antes tenía que pagar

22
00:01:51,899 --> 00:01:55,500
porque ahora son gratis, por lo que están tomando el servicio y son básicamente

23
00:01:55,500 --> 00:02:00,659
regalando su servicio premium absolutamente gratis en github com.

24
00:02:00,659 --> 00:02:06,600
github bueno, github es como un proveedor de servicios en la nube, pero es para

25
00:02:06,600 --> 00:02:10,800
desarrolladores nos ayuda a poder gestionar nuestros proyectos para que puedas ir

26
00:02:10,800 --> 00:02:15,050
retroceder en el tiempo básicamente con código y realmente es útil poder

27
00:02:15,050 --> 00:02:20,540
ver esas confirmaciones y ver cómo los cambios han impactado su proyecto también es un

28
00:02:20,540 --> 00:02:26,330
gran mecanismo de almacenamiento para su código porque puede compartirlo con

29
00:02:26,330 --> 00:02:30,350
otras personas si quieres ahora, por supuesto, Microsoft lo hace gratis

30
00:02:30,350 --> 00:02:37,640
ahora también puede tener repositorios privados gratuitos y puede configurar

31
00:02:37,640 --> 00:02:41,300
tantos equipos como quieras si quieres colaborar con otros programadores pero

32
00:02:41,300 --> 00:02:45,920
esencialmente lo que hace por mí es que me permite compartir mi código en línea en

33
00:02:45,920 --> 00:02:49,459
de tal manera que otras personas puedan usarlo de código abierto, puedan compilarlo o usarlo

34
00:02:49,459 --> 00:02:55,459
o ejecutarlo en sus propias computadoras y luego, si deciden, bueno, prefiero

35
00:02:55,459 --> 00:02:59,510
funciona de esta manera o tal vez hay un error y puedo arreglar que pueden hacer lo que

36
00:02:59,510 --> 00:03:05,390
llamó a una solicitud de extracción, así que básicamente clonaron mi repositorio de github, mi software

37
00:03:05,390 --> 00:03:10,730
código, lo arreglan en su computadora y luego hacen una solicitud de extracción que empuja

38
00:03:10,730 --> 00:03:16,100
lo devuelve mientras lo empujan hacia su bifurcación y luego crea una solicitud de extracción

39
00:03:16,100 --> 00:03:21,709
para mí para que vea que oye Joe soplará su solución este error con mi

40
00:03:21,709 --> 00:03:26,720
software Puedo hacer clic en un botón e importará esa solución a mi software

41
00:03:26,720 --> 00:03:33,890
hay mucho que hacer y es realmente muy poderoso, puede ser

42
00:03:33,890 --> 00:03:37,519
confuso especialmente cuando te metes en aplastarlos y fusionarlos y esos

43
00:03:37,519 --> 00:03:41,390
tipos de cosas en las que no vamos a entrar hoy, pero que sí quiero

44
00:03:41,390 --> 00:03:47,150
mostrarle cómo el conocimiento más básico sobre cómo funciona

45
00:03:47,150 --> 00:03:53,720
le permite usar github de una manera efectiva, piense en ello como donde está

46
00:03:53,720 --> 00:03:58,519
poner su código como software de código abierto y no tiene que ser

47
00:03:58,519 --> 00:04:03,470
puedes tenerlo privado si quieres pero en mi caso eso es lo que estoy haciendo yo quiero

48
00:04:03,470 --> 00:04:07,130
personas que colaboren conmigo ocasionalmente tal vez publiquen problemas

49
00:04:07,130 --> 00:04:10,430
si encuentran un error y yo sigo siendo la persona que tiene que arreglarlo, pero en

50
00:04:10,430 --> 00:04:15,590
al menos mi comunidad está entrando en mi repositorio de software y dice que esto es un

51
00:04:15,590 --> 00:04:21,769
problema y necesitas arreglarlo bien, así que github calm es donde debes ir.

52
00:04:21,769 --> 00:04:26,360
para obtener su cuenta gratuita, todo lo que tiene que hacer es hacer clic en el enlace y hacer clic en

53
00:04:26,360 --> 00:04:30,080
regístrate ahora ya tengo una cuenta así que voy a iniciar sesión como yo mismo

54
00:04:30,080 --> 00:04:37,789
e inicie sesión para que pueda ver aquí que si voy a mis repositorios, si salto

55
00:04:37,789 --> 00:04:47,569
a casa aquí e ir a dejar que se cargue aquí dejar que se cargue bien, solo voy a ir

56
00:04:47,569 --> 00:04:56,000
directamente a cat 5 TV es donde alojo todo mi software para que vayas allí

57
00:04:56,000 --> 00:04:58,909
github.com slash cat 5 TV y ves cómo funciona esto

58
00:04:58,909 --> 00:05:02,779
para que pueda ver que tengo un montón de repositorios de software y todos

59
00:05:02,779 --> 00:05:07,099
diferentes proyectos todas las cosas diferentes que he hecho o que sigo

60
00:05:07,099 --> 00:05:12,889
que hacer y hay páginas y páginas y páginas, así que una vez que tenga su github

61
00:05:12,889 --> 00:05:19,340
cuenta, puede iniciar sesión en lo que ve aquí, que es mi lista de repositorios, pero

62
00:05:19,340 --> 00:05:23,090
cuando se registre por primera vez, no tendrá todos estos elementos que necesita para crear

63
00:05:23,090 --> 00:05:26,750
tu primer repositorio, así que la forma en que voy a hacer eso ahora entiendo

64
00:05:26,750 --> 00:05:33,289
github no es necesario, olvídalo bien y git no es lo mismo que github github es un

65
00:05:33,289 --> 00:05:39,919
servicio en línea y piense en ello como almacenamiento en la nube, olvídese de acuerdo, no es lo mismo

66
00:05:39,919 --> 00:05:46,400
lo que es un almacenamiento en línea para esa herramienta de gestión de paquetes de código abierto o un

67
00:05:46,400 --> 00:05:50,960
herramienta de gestión de proyectos, así que aquí en github lo han hecho realmente

68
00:05:50,960 --> 00:05:55,400
fácil de decir simplemente nuevo repositorio, así que he ido a mis repositorios y he

69
00:05:55,400 --> 00:05:59,360
hice clic en nuevo y luego le daré un nombre que voy a llamar a esto

70
00:05:59,360 --> 00:06:07,419
una mi prueba de subrayado y una descripción opcional esta es una prueba para el programa

71
00:06:07,419 --> 00:06:12,800
si desea que sea público o privado y luego inicializarlo con un

72
00:06:12,800 --> 00:06:17,029
Léame, siempre es mejor hacerlo de modo que la gente pueda acceder a él.

73
00:06:17,029 --> 00:06:20,839
Inmediatamente incluyéndote a ti mismo quieres agregar una licencia ¿quieres agregar una

74
00:06:20,839 --> 00:06:24,740
git ignore Voy a dejar ambos vacíos, descubrirás lo que eso significa en

75
00:06:24,740 --> 00:06:30,680
el futuro y crea tu repositorio, así que ahora tengo uno llamado mi prueba de subrayado

76
00:06:30,680 --> 00:06:34,459
pero no hay nada allí y he terminado con el navegador, así que ahora, ¿qué voy a hacer?

77
00:06:34,459 --> 00:06:39,830
que hacer es abrir mi terminal y en mi terminal voy a

78
00:06:39,830 --> 00:06:43,320
escriba get okay para que pueda ver que he

79
00:06:43,320 --> 00:06:48,330
ya lo instalé si no lo tiene instalado, así que estoy en Linux estoy en

80
00:06:48,330 --> 00:06:53,460
Debian Linux aquí puede escribir apt install git, eso es lo que va a hacer

81
00:06:53,460 --> 00:07:05,640
escriba No soy grosero sudo su log in is rock ok apta instalar pero lo dirá

82
00:07:05,640 --> 00:07:09,660
yo que ya tengo la corriente oh hay un no no ya la tengo

83
00:07:09,660 --> 00:07:13,500
Sin embargo, hay otras actualizaciones para mí, pero get ya es la versión más nueva, así que

84
00:07:13,500 --> 00:07:17,430
si no lo tiene, debe instalarlo si está en un RPM

85
00:07:17,430 --> 00:07:22,980
sistema será yum install git y también puede encontrarlo en su GUI

86
00:07:22,980 --> 00:07:28,740
administrador de repositorio su administrador de paquetes o lo que sea que use como un sináptico

87
00:07:28,740 --> 00:07:33,750
administrador de paquetes, por ejemplo, una vez que lo haya instalado, cree una carpeta

88
00:07:33,750 --> 00:07:41,100
probablemente en su carpeta de inicio y lo llamaremos repositorios solo para que yo

89
00:07:41,100 --> 00:07:46,290
tener un lugar donde siempre sepa que mi código es correcto, por lo que este será un

90
00:07:46,290 --> 00:07:52,650
copia local de mi repositorio de git, así que ahora voy a escribir git clone y estamos

91
00:07:52,650 --> 00:08:00,210
voy a copiar esta URL github.com slash cat 5 TV slash mi prueba de subrayado para poder

92
00:08:00,210 --> 00:08:08,010
copia que solo con ctrl C te acostumbrarás a escribirlo es tu

93
00:08:08,010 --> 00:08:13,560
el nombre de usuario barra su repositorio y ahora, si miro mi sistema de archivos, es

94
00:08:13,560 --> 00:08:20,760
clonado obtener clon y luego el nombre o la URL del repositorio, así que ahora

95
00:08:20,760 --> 00:08:25,920
si voy a mi carpeta de inicio y luego a los repositorios, noto que es propiedad de root

96
00:08:25,920 --> 00:08:31,740
porque veo que el tipo superusuario demandará, así que ahora hay una carpeta llamada mi prueba y

97
00:08:31,740 --> 00:08:38,250
dentro de mi prueba hay un archivo llamado readme MD, así que dentro de esta carpeta estoy

98
00:08:38,250 --> 00:08:43,250
voy a pasar a mi prueba y quiero crear un nuevo archivo, voy a llamar a esto

99
00:08:43,250 --> 00:08:50,970
nano prueba dot SH y crearemos un archivo SH rápido para ejecutar un script bash y

100
00:08:50,970 --> 00:08:55,640
Voy a escribir echo hola ¿cómo es eso?

101
00:08:55,640 --> 00:09:00,970
Quédate con la norma, hola mundo, ¿qué te parece?

102
00:09:00,970 --> 00:09:05,690
así que lo escribí y lo cerré, así que ahora ves que hay un archivo llamado

103
00:09:05,690 --> 00:09:13,910
prueba dot s H ahora cuando transfiero un archivo a github, los permisos son

104
00:09:13,910 --> 00:09:18,500
se incluirá con ese empuje, así que si hago una prueba de barra de puntos, punto s H,

105
00:09:18,500 --> 00:09:23,360
tenga en cuenta que dice permiso denegado.Necesito convertirlo en ejecutivo ejecutivo todo chmod

106
00:09:23,360 --> 00:09:30,680
más x punto de prueba s H así que ahora si escribo punto de prueba s HS s hola mundo así que ahora

107
00:09:30,680 --> 00:09:35,510
tener mi primer fragmento de script listo para subir a github es parte de mi

108
00:09:35,510 --> 00:09:41,870
repositorio en mi computadora local pero aún no está en github, así que si miras

109
00:09:41,870 --> 00:09:45,500
github Voy a actualizar solo para demostrarlo, ve su lista de archivos aquí y

110
00:09:45,500 --> 00:09:50,390
todavía está el archivo Léame ok, así que ahora de vuelta en mi ventana de terminal voy a

111
00:09:50,390 --> 00:09:56,330
nuevamente use ese comando git voy a ir a agregar una estrella dentro de los repositorios

112
00:09:56,330 --> 00:10:01,270
carpeta que dice busque los archivos que tengan cambios y agréguelos.

113
00:10:01,270 --> 00:10:09,680
commit - am y luego entre comillas dale un nombre a tu commit, así que voy a decir

114
00:10:09,680 --> 00:10:14,480
mi primer guión y estas son solo pequeñas descripciones breves y presione enter y

115
00:10:14,480 --> 00:10:19,220
ahora dice, oye, tienes que decirnos quién eres porque nunca jamás

116
00:10:19,220 --> 00:10:24,380
ejecute git en esta computadora antes, así que debe ejecutar estos dos comandos bastante

117
00:10:24,380 --> 00:10:29,030
get config sencillo - - global solo tiene que

118
00:10:29,030 --> 00:10:33,350
haz esto una vez, no te preocupes, el usuario tiene un correo electrónico y si tienes problemas para escribir eso,

119
00:10:33,350 --> 00:10:39,980
Cópialo bien y luego, entre comillas, voy a poner a Robby en la categoría 5 TV y eso es

120
00:10:39,980 --> 00:10:48,890
simplemente diciéndole mi dirección de correo electrónico y luego voy a usar el nombre del punto de usuario que no sé

121
00:10:48,890 --> 00:10:52,550
si puedes escuchar eso, pero en realidad es una tormenta muy fuerte fuera de nuestro estudio

122
00:10:52,550 --> 00:10:56,720
hoy, las luces parpadean un par de veces y creo que vamos a conseguir

123
00:10:56,720 --> 00:11:02,090
a través de él de todos modos, así que está bien, borra eso y cambia mi nombre a Robby

124
00:11:02,090 --> 00:11:06,710
Ferguson entra bien hecho, así que solo tengo que hacer eso una vez, así que ahora escena

125
00:11:06,710 --> 00:11:11,420
La próxima vez que ejecute ese git commit, ¿solo lo está agregando?

126
00:11:11,420 --> 00:11:15,050
así que lo agregué y ve que un archivo ha cambiado, hay dos

127
00:11:15,050 --> 00:11:20,270
inserciones y probar SH es nuevo, así que lo creará, así que ahora el final

128
00:11:20,270 --> 00:11:26,450
comando que necesito ingresar es get push origin y voy a especificar el

129
00:11:26,450 --> 00:11:32,360
master, que es el maestro de la rama, así que el maestro de origen y ahora va a

130
00:11:32,360 --> 00:11:35,720
pedirme mi nombre de usuario y contraseña que ingresé cuando creé mi

131
00:11:35,720 --> 00:11:44,360
cuenta, por lo que cat5 TV es mi nombre de usuario y mi contraseña. Uso LastPass y genero nuevos

132
00:11:44,360 --> 00:11:49,430
contraseñas todo el tiempo y son enormes y locas, así que copié una contraseña

133
00:11:49,430 --> 00:11:57,500
y luego lo pegué y ahí va, está cargando esos datos en mi

134
00:11:57,500 --> 00:12:02,840
repositorio y está hecho, así que f5 para actualizar y debería ver la prueba SH

135
00:12:02,840 --> 00:12:09,200
ahora es parte de mi repositorio de github y ahí está y muestra que es

136
00:12:09,200 --> 00:12:17,330
ejecutivo hola mundo, así que ahora de vuelta aquí, así que finjamos que hice cambios

137
00:12:17,330 --> 00:12:20,750
en otro lugar, así que en otra computadora y lo haré a través del navegador

138
00:12:20,750 --> 00:12:29,270
solo para mostrarte que en este sistema voy a hacer un eco de hola de nuevo, bien y luego

139
00:12:29,270 --> 00:12:33,680
Voy a guardar esos cambios, no le voy a poner un nombre ni nada parecido

140
00:12:33,680 --> 00:12:37,340
la descripción que voy a confirmar, así que ahora el guión se ve así, mira

141
00:12:37,340 --> 00:12:41,600
cómo cambio eso en el navegador, también puedes hacerlo desde cualquier lugar, así que ahora si

142
00:12:41,600 --> 00:12:47,510
Miro mi archivo localmente en mi computadora en el repositorio allí lo seguimos

143
00:12:47,510 --> 00:12:53,630
solo dice hola mundo, está bien, así que voy a volver a tirar. Estoy haciendo todo esto.

144
00:12:53,630 --> 00:12:58,700
dentro de la carpeta de prueba de mi subrayado, por lo que git pull va a buscar cualquier

145
00:12:58,700 --> 00:13:02,510
cambios que se han realizado en otro lugar y los baja a mi computadora para

146
00:13:02,510 --> 00:13:07,460
siempre está sincronizando esos cambios, así que ahora si abro Nano y abro ese archivo

147
00:13:07,460 --> 00:13:14,000
puedes ver que el nuevo hola de nuevo es ahora parte de eso, así que te mostraré el eco

148
00:13:14,000 --> 00:13:20,270
hola por tres y voy a guardar eso y ahora voy a hacer exactamente lo

149
00:13:20,270 --> 00:13:22,400
lo mismo, pero mostrarte cómo es diferente ahora que

150
00:13:22,400 --> 00:13:28,490
Ya ingresé mi nombre y mi dirección de correo electrónico. Obtener Ad Star, comprometerse.

151
00:13:28,490 --> 00:13:39,410
Soy actualización final get push origin master cap 5 TV es mi nombre de usuario y mi contraseña

152
00:13:39,410 --> 00:13:50,120
es una cadena de aproximadamente 64 caracteres seleccionados al azar y voy a pegar

153
00:13:50,120 --> 00:13:56,060
que adentro y ahí vamos, así que eso es todo lo que hay para ahora impulsar mis cambios

154
00:13:56,060 --> 00:14:00,680
localmente al servidor github para que lo comparta de nuevo con todos los demás o

155
00:14:00,680 --> 00:14:05,510
con mis otros sistemas cuando hago un get pull, así que al hacerlo puedo obtener clomp

156
00:14:05,510 --> 00:14:09,980
perdóname, clona algo y no tiene que ser mío, puede ser

157
00:14:09,980 --> 00:14:14,690
repositorio de github de otra persona, siempre que sea público, pero luego puedo hacer

158
00:14:14,690 --> 00:14:19,070
lo cambia en mi máquina local y luego puedo hacer un empujón ahora usted tiene que poseer

159
00:14:19,070 --> 00:14:24,710
el repositorio para hacer un empuje, por lo que la forma de realizar cambios en alguien

160
00:14:24,710 --> 00:14:29,570
el repositorio de else es bifurcarlo para que cuando vaya al repositorio haga clic en

161
00:14:29,570 --> 00:14:34,040
el botón llamado fork y básicamente hace una copia en su propia cuenta

162
00:14:34,040 --> 00:14:37,550
en el que puede realizar cambios y luego es donde puede realizar solicitudes de extracción

163
00:14:37,550 --> 00:14:41,000
pero esos son los conceptos básicos para comenzar que te permitirán

164
00:14:41,000 --> 00:14:45,680
crea repositorios sube tus archivos sube tu código poder manipular

165
00:14:45,680 --> 00:14:49,250
desde cualquier sistema para que pueda probarlo en una Raspberry Pi en su máquina Windows

166
00:14:49,250 --> 00:14:54,410
en su escritorio Linux en lo que sea y luego empuje todos esos cambios a la

167
00:14:54,410 --> 00:14:59,030
servidor para que se puedan descargar o extraer a todos sus sistemas, por lo que

168
00:14:59,030 --> 00:15:01,810
todo lo que hay que hacer

169
00:15:07,430 --> 00:15:10,480
[Música]

