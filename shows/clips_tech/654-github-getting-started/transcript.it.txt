ora, se non ti sei mai unito a noi per una pausa caffè comunitaria di categoria 5, lo farai
per saperne di più su TV a cinque punti della categoria basta scorrere verso il basso sulla homepage
e vedrai la pausa caffè della comunità lì insieme al nostro programma quando
faremo il prossimo è un evento settimanale che teniamo sullo zoom "
ed è un'opportunità per la nostra comunità di riunirsi e anche
anche se stiamo tutti vivendo quello che stiamo vivendo nel nostro mondo oggi
ha adottato l'approccio per dire piuttosto che parlare di quelle cose le cose
che ci stanno abbattendo proprio ora guardiamolo e diciamo che siamo tutti
bloccato in questa situazione, cos'è che sto facendo che mi ha entusiasmato
cos'è che sto sperimentando tecnologicamente che è davvero
interessante per me e aiutarmi ad occupare il tempo se sono bloccato a casa
proprio ora o qualunque sia il caso, quindi l'argomento è venuto su github perché
stiamo parlando di programmazione e Peter è lì quasi ogni volta per a
pausa caffè della comunità e Peter stava chiedendo bene come usare bene Github
in realtà non sono qualcosa che possiamo mostrare o parlare, sai che ti accompagna
durante la pausa caffè, ma è venuto fuori che ehi bene sarebbe stato davvero
buon argomento da discutere sulla tecnologia TV di categoria cinque e il motivo per cui
inizialmente è venuto perché quando Microsoft ha acquistato Github lo hanno tenuto
andando un po 'di status quo com'era e dovevi pagare per alcune funzionalità ma
poi improvvisamente molto recentemente Microsoft ha detto e tutti quelli pagati per le funzionalità no
tutti, ma molti di quelli pagati per le funzionalità che un tempo dovevi pagare
perché ora sono gratuiti, quindi stanno prendendo il servizio e sono fondamentalmente
offrendo il loro servizio premium in modo assolutamente gratuito su github com
github bene github è un po 'come un fornitore di servizi cloud, ma lo è per
sviluppatori ci aiuta a essere in grado di gestire i nostri progetti in modo che tu possa andare
indietro nel tempo fondamentalmente con il codice ed è davvero utile poterlo fare
vedere questi impegni e vedere come i cambiamenti hanno influito sul tuo progetto
ottimo meccanismo di archiviazione per il tuo codice perché sei in grado di condividerlo
altre persone se vuoi ora ovviamente Microsoft lo rende gratuito
ora puoi avere anche repository privati ​​gratuiti e puoi impostare
quante squadre vuoi se vuoi collaborare con altri programmatori ma
essenzialmente quello che fa per me è che mi permette di condividere il mio codice online
in modo tale che altre persone possano usarlo open source che possono compilarlo o usare
o eseguirlo sui propri computer e quindi se decidono vabbè preferirei
funziona in questo modo o forse ecco un bug e posso risolvere che possono fare ciò che è
chiamato una richiesta pull in modo da clonare il mio repository github il mio software
codice lo riparano sul loro computer e poi fanno una richiesta pull che spinge
indietro mentre lo spingono indietro verso la loro forcella e quindi crea una richiesta pull
per me, così vedo che hey Joe farà esplodere questo bug con il mio
software Posso fare clic su un pulsante e importerà tale correzione nel mio software così
c'è molto da fare ed è davvero molto potente che può essere
confusione soprattutto quando si inizia a schiacciare e fondere loro e quelli
tipi di cose in cui non entreremo oggi, ma cosa voglio fare
mostrarti come stanno andando le conoscenze di base su come funziona
ti permettono di usare github in modo efficace pensalo come quello in cui ti trovi
mettendo il tuo codice là fuori come software open source e non deve esserlo
puoi averlo privato se vuoi, ma nel mio caso è quello che sto facendo, voglio
le persone a collaborare con me di tanto in tanto potrebbero pubblicare problemi
se trovano un bug e poi sono ancora la persona che deve risolverlo ma a
almeno la mia comunità sta entrando nel mio repository di software e dicendo che questo è un
problema e devi risolverlo bene, quindi la calma github è dove vai è segno
per il tuo account gratuito tutto ciò che devi fare è fare clic sul collegamento e fare clic
Iscriviti ora Ho già un account, quindi accederò come me stesso
e accedi in modo da poter vedere qui che se vado nei miei repository, quindi se salto
casa qui e vai a lasciarlo caricare qui lascialo caricare bene andrò
straight to cat 5 TV è dove ospito tutto il mio software in modo da andare lì
github.com slash cat 5 TV e vedi come funziona
quindi puoi vedere che ho un sacco di repository di software e sono tutti
progetti diversi tutte le diverse cose che ho fatto o che sto continuando
da fare e ci sono pagine e pagine e pagine di esso così una volta che hai il tuo github
account puoi accedere a quello che vedi qui che è il mio elenco di repository ma
quando ti iscrivi per la prima volta non avrai tutti questi che devi creare
il tuo primo repository in modo che il modo in cui lo farò ora capisca
github non è necessario dimenticare ok e git non è lo stesso di github github è un
servizio online e pensalo come cloud storage dimentica ok non è lo stesso
cosa è un archivio online per quello strumento di gestione dei pacchetti open source o a
strumento di gestione del progetto, quindi qui su github ce l'hanno fatta davvero
facile dire semplicemente un nuovo repository, quindi sono andato ai miei repository e l'ho fatto
cliccato su nuovo e poi gli darò un nome che chiamerò questo
un mio test di sottolineatura e una descrizione facoltativa questo è un test per lo spettacolo
se vuoi che sia pubblico o privato e poi inizializzalo con a
Leggimi è sempre meglio farlo perché lo fa in modo che le persone possano accedervi
subito compreso te stesso vuoi aggiungere una licenza vuoi aggiungere un
git ignora, lascerò entrambi vuoti e scoprirai cosa significa
il futuro e crea il tuo repository, quindi ora ne ho uno chiamato il mio test di sottolineatura
ma non c'è niente lì e ho finito con il browser, quindi ora cosa sto andando
per fare è farò apparire il mio terminale e nel mio terminale lo farò
digita ok quindi puoi vedere che ho
l'ho già installato se non hai installato, quindi sono su Linux
Debian Linux qui puoi digitare apt install git è quello che stai per fare
tipo non sono maleducato sudo su il login è rock ok apt installa ancora lo dirà
io che ho già la corrente oh c'è un no no l'ho già capito
ci sono altri aggiornamenti per me però, ma get è già la versione più recente
se non lo hai, devi installarlo se sei su un RPM
sistema sarà yum installa git e puoi trovarlo anche nella tua GUI
gestore repository il gestore pacchetti o qualunque cosa tu usi come un sinaptico
gestore pacchetti per esempio, quindi una volta installato, crea una cartella
probabilmente nella tua cartella home e chiameremo questo repository solo per me
ho un posto dove so sempre che il mio codice è giusto, quindi questo sarà un
copia locale del mio repository git quindi ora ho intenzione di digitare git clone e siamo
copierò questo URL github.com slash cat 5 TV slash il mio trattino di sottolineatura così posso
copia che solo con Ctrl C ti abituerai a digitarlo è tuo
il nome utente riduce il repository e ora se guardo il mio file system lo è
clonato get clone e quindi il nome o l'URL del repository così ora
se vado nella mia cartella home e poi nei repository noterò che è di proprietà di root
perché vedo amico superutente fare causa quindi ora c'è una cartella chiamata il mio test e
nel mio test c'è un file chiamato readme MD, quindi in questa cartella lo sono
andrò nel mio test e voglio creare un nuovo file che chiamerò questo
nano test dot SH e creeremo un rapido file SH per eseguire uno script bash e
Ho intenzione di digitare echo ciao come va oh dovrei davvero
resta fedele al mondo della normalità, ciao, come va?
quindi l'ho scritto e l'ho chiuso, quindi ora vedi che c'è un file chiamato
test punto s H ora quando trasferisco un file su Github le autorizzazioni sono
sarà incluso in quella spinta, quindi se faccio il test del punto slash punto s H tu
notate che dice che è stato negato il permesso che devo renderlo esecutivo esecutivo tutto chmod
più x punto di prova s ​​H così ora se scrivo punto di prova s ​​HS ciao mondo così io ora
ho il mio primo pezzo di sceneggiatura pronto per andare su Github fa parte del mio
repository sul mio computer locale ma non è ancora in github, quindi se guardi
github Ho intenzione di aggiornare solo per dimostrare che vedi l'elenco dei tuoi file qui e
c'è ancora solo il readme ok quindi ora tornerò nella finestra del mio terminale
usa di nuovo quel comando git. Vado a prendere una stella nei repository
cartella che dice trova tutti i file che hanno delle modifiche e aggiungili ok get
commit - am e poi tra virgolette dai un nome al tuo commit, quindi dirò
la mia prima sceneggiatura e queste sono solo brevi descrizioni e premi invio e
ora sta dicendo hey devi dirci chi sei perché non l'hai mai fatto
eseguire git su questo computer prima, quindi è necessario eseguire questi due comandi piuttosto
ottieni subito la configurazione - - globale devi solo
fallo una volta, non preoccuparti della posta elettronica dell'utente e se hai problemi a digitarla
copiarlo ok e poi tra virgolette metterò Robby nella categoria 5 TV e questo è tutto
dico solo il mio indirizzo e-mail, quindi vado a usare il nome utente non lo so
se riesci a sentirlo, ma in realtà è una brutta tempesta fuori dal nostro studio
oggi quindi le luci tremolano un paio di volte e penso che avremo
comunque, quindi cancellalo e cambia il mio nome in Robby
Ferguson entra ok fatto quindi devo farlo solo una volta così ora scena
la prossima volta che eseguo quel git commit - sto solo aggiungendolo bene
quindi l'ho aggiunto e vede che un file è cambiato, ce ne sono due
inserimenti e test SH è nuovo, quindi lo creerà così ora il finale
comando che devo inserire è get push origin e ho intenzione di specificare il
master che è il branch branch, quindi origin master e ora lo farà
chiedimi nome utente e password che ho inserito al momento della creazione
account quindi cat5 TV è il mio nome utente e la mia password che uso LastPass e genera nuovi
password per tutto il tempo e sono enormi e folli, quindi ho copiato una password
e poi l'ho incollato ed ecco che sta caricando quei dati sul mio
repository ed è fatto così f5 per aggiornare e dovresti vedere il test SH
ora fa parte del mio repository github ed eccolo lì e lo dimostra che lo è
ciao mondo esecutivo quindi ora di nuovo qui quindi facciamo finta di aver apportato modifiche
altrove su un altro computer e lo farò tramite il browser
solo per mostrartelo su questo sistema, vado di nuovo a salutare, okay e poi
Salverò quei cambiamenti, non gli darò un nome o qualcosa del genere
quella descrizione lo confermerò, quindi ora la sceneggiatura è simile a quella, quindi vedi
come lo cambio anche nel browser, puoi farlo da qualsiasi luogo, quindi ora se
Guardo il mio file localmente sul mio computer nel repository lì andiamo ancora
dice solo ciao mondo, okay, quindi vado a tirare di nuovo, sto facendo tutto questo
all'interno della mia cartella di prova del carattere di sottolineatura, quindi git pull cercherà qualsiasi
i cambiamenti che sono stati fatti altrove e li trascino sul mio computer così
sincronizza sempre queste modifiche, quindi ora apro Nano e apro quel file
puoi vedere che il nuovo ciao è di nuovo parte di quello, quindi ti mostrerò l'eco
ciao tre volte e lo salverò e ora farò l'esatto
stessa cosa, ma ti mostra come è diverso adesso
Ho già inserito il mio nome e il mio indirizzo email get Ad Star get commit -
Sono l'aggiornamento finale ottieni push origin master cap 5 TV è il mio nome utente e la mia password
è una stringa di circa 64 caratteri selezionati casualmente e ho intenzione di incollare
che dentro e là andiamo, quindi è tutto quello che c'è da fare ora spingendo i miei cambiamenti
localmente sul server github in modo che lo condivida nuovamente con tutti gli altri o
con i miei altri sistemi quando faccio un pull quindi facendo ciò posso ottenere clomp
scusatemi, clonate qualcosa e non deve essere mio, può essere
qualcun altro repository github fintanto che è pubblico ma poi posso farlo
cambia ad esso sul mio computer locale e quindi posso fare una spinta ora che devi possedere
il repository per fare una spinta così il modo di apportare modifiche a qualcuno
il repository di altro è di fork in modo da quando vai nel repository su cui fai clic
il pulsante chiamato fork e fondamentalmente ne fa una copia nel tuo account
a cui puoi apportare modifiche e quindi è lì che puoi fare richieste pull
ma queste sono le basi per iniziare che ti permetterà
crea repository carica i tuoi file carica il tuo codice per poterlo manipolare
da qualsiasi sistema in modo da poterlo testare su un Raspberry Pi sul tuo computer Windows
sul desktop Linux su qualunque cosa e quindi inviare tutte quelle modifiche al
server in modo che possano essere scaricati o estratti su tutti i tuoi sistemi
tutto ciò che c'è da fare
[Musica]
