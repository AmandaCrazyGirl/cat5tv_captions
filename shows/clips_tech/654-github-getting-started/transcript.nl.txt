als je nog nooit bij ons bent geweest voor een community-koffiepauze van categorie 5, zul je dat doen
Lees er meer over op categorie-5-punt-tv, scrol gewoon naar beneden op de startpagina
en je zult de gemeenschappelijke koffiepauze daar zien, samen met ons schema wanneer
we gaan de volgende doen, het is een wekelijks evenement dat we op zoom houden '
en het is een kans voor onze gemeenschap om samen te komen en zelfs
hoewel we allemaal ervaren wat we vandaag in onze wereld ervaren, hebben we
nam de benadering om te zeggen in plaats van over die dingen de dingen te praten
die ons nu naar beneden halen, laten we ernaar kijken en zeggen dat we allemaal zijn
vast in deze situatie, wat is wat ik doe dat me opwindt
wat is het waarmee ik technologisch experimenteer dat is echt
interessant voor mij en helpt me tijd te besteden, of ik nu thuis zit
nu of wat het geval ook is, dus het onderwerp kwam over github omdat
we hebben het over programmeren en Peter is er bijna altijd voor een
gemeenschap koffiepauze en Peter vroeg goed hoe gebruik je github goed
niet echt iets dat we kunnen laten zien of praten, weet je
door op de koffiepauze maar het kwam naar voren dat hey dat zou echt zijn
goed onderwerp om te bespreken op categorie vijf technologie-tv en de reden daarvoor
kwam in eerste instantie omdat omdat Microsoft github kocht, ze het bewaarden
ging een soort status quo zoals het was en je moest betalen voor bepaalde functies, maar
toen zei heel plotseling heel recent Microsoft en al degenen die voor functies betaalden niet
allemaal, maar veel daarvan betaalden voor functies die u vroeger moest betalen
want ze zijn nu gratis, dus ze nemen de service en ze zijn eigenlijk
het weggeven van hun premium service helemaal gratis bij github com dus wat is
github nou github is een soort van cloud service provider, maar toch is het voor
ontwikkelaars helpt het ons om onze projecten te kunnen managen zodat u kunt gaan
terug in de tijd met code en het is echt nuttig om dat te kunnen
zie die toezeggingen en zie hoe veranderingen uw project hebben beïnvloed, het is ook een
geweldig opslagmechanisme voor uw code omdat u deze kunt delen
andere mensen als je wilt dat Microsoft het natuurlijk gratis maakt
u kunt nu ook gratis privérepository's hebben en u kunt instellen
zoveel teams als je wilt als je wilt samenwerken met andere programmeurs maar
wat het in feite voor mij doet, is dat ik mijn code online kan delen
zodanig dat andere mensen het open source kunnen gebruiken, kunnen ze het compileren of gebruiken
of ze draaien het op hun eigen computers en als ze beslissen, ach, dan heb ik liever
het werkt op deze manier of misschien is hier een bug en kan ik oplossen dat ze kunnen doen wat
belde een pull-verzoek, dus in feite klonen ze mijn github-repository mijn software
code ze repareren het op hun computer en vervolgens doen ze een pull-verzoek dat pusht
het terug terwijl ze het terug naar hun vork duwen en dan creëert het een trekverzoek
voor mij zodat ik zie dat hey Joe hun bug zal oplossen met mijn
software Ik kan op een knop klikken en het zal die fix dus in mijn software importeren
er komt heel veel bij kijken en het is echt zo krachtig dat het kan zijn
verwarrend, vooral als je begint te pletten en ze en die samen te voegen
dingen waar we vandaag niet op ingaan, maar wat ik wel wil
laten zien hoe de meest elementaire kennis over hoe het werkt gaat
sta je toe om github op een effectieve manier te gebruiken, beschouw het als dat waar je bent
het plaatsen van uw code als open source-software en dat hoeft niet zo te zijn
je kunt het privé hebben als je wilt, maar in mijn geval wil ik dat
mensen die af en toe met mij samenwerken, misschien plaatsen ze problemen
als ze een bug vinden en dan ben ik nog steeds de persoon die het moet repareren, maar op
in ieder geval komt mijn gemeenschap in mijn softwarebibliotheek en zegt dat dit een
probleem en je moet het in orde maken, dus github kalm is waar je naartoe gaat is teken
voor je gratis account hoef je alleen maar op de link te klikken en te klikken
meld je nu aan Ik heb al een account dus ik log in als mezelf
en meld je aan zodat je hier kunt zien dat als ik naar mijn opslagplaatsen ga, dus als ik spring
thuis hier en ga om het hier te laten laden laat het goed laden ik ga gewoon
rechtstreeks naar cat 5 TV is waar ik al mijn software host, dus ga daarheen
github.com slash cat 5 tv en je ziet hoe dit werkt
dus je kunt zien dat ik een heleboel softwarebronnen heb en dat zijn ze allemaal
verschillende projecten allemaal verschillende dingen die ik heb gedaan of waar ik mee bezig ben
te doen en er zijn pagina's en pagina's en pagina's ervan, dus als je eenmaal je github hebt
account kunt u inloggen op wat u hier ziet, wat mijn lijst met opslagplaatsen is, maar
wanneer u zich voor het eerst aanmeldt, zult u niet al deze hebben die u moet maken
je eerste repository, dus de manier waarop ik dat ga doen, begrijp nu
github is niet vereist vergeet ok en git is niet hetzelfde als github github is een
online service en beschouw het als cloudopslag vergeet ok het is niet hetzelfde
ding is het een online opslag voor die open-source tool voor pakketbeheer of een
project management tool dus hier op github hebben ze het echt echt gemaakt
eenvoudig om eenvoudig een nieuwe repository te zeggen, dus ik ben naar mijn repositories gegaan en ik heb
klikte op nieuw en dan geef ik het een naam die ik dit ga noemen
een mijn underscore-test en een optionele beschrijving dit is een test voor de show
of u wilt dat het openbaar of privé is en initialiseer het vervolgens met een
readme het is altijd het beste om te doen dat het ervoor zorgt dat mensen er toegang toe hebben
meteen inclusief jezelf je wilt een licentie toevoegen wil je er een toevoegen
git negeer Ik laat beide leeg, je zult ontdekken wat dat betekent
de toekomst en maak je repository, dus nu heb ik er een genaamd mijn underscore-test
maar er is niets en ik ben klaar met de browser, dus nu wat ik ga doen
wat ik moet doen is mijn terminal oproepen en in mijn terminal ga ik
typ oké zodat je kunt zien dat ik
heb het al geïnstalleerd als je niet hoeft te worden geïnstalleerd, dus ik gebruik Linux
Debian Linux hier kun je apt install git typen, dat is wat je gaat doen
type Ik ben niet onbeleefd sudo su ingelogd is rock ok apt installatie maar het zal het vertellen
ik dat ik de stroom al heb oh er is een nee nee ik heb het al
er zijn echter nog andere updates voor mij maar get is al de nieuwste versie dus
als je het niet hebt moet je het installeren als je op een RPM gebaseerd bent
systeem zal het yum install git zijn en je kunt het ook vinden in je GUI
repository manager uw pakketbeheerder of wat u ook gebruikt, zoals een synaptische
pakketbeheer bijvoorbeeld, dus als je eenmaal geïnstalleerd bent, maak dan een map aan
waarschijnlijk in uw thuismap en we zullen deze opslagplaatsen noemen zodat ik
een plaats hebben waar ik altijd weet dat mijn code klopt, dus dit wordt een
lokale kopie van mijn git-repository, dus nu ga ik git clone typen en we zijn
ga deze URL kopiëren github.com slash cat 5 TV slash mijn onderstrepingstest zodat ik kan
kopieer dat gewoon met ctrl C je zult eraan wennen om het gewoon te typen, het is jouw
gebruikersnaam slash je repository en nu dus als ik naar mijn bestandssysteem kijk dus
cloned get clone en dan de naam van de of de URL van de repository dus nu
als ik naar mijn thuismap ga en dan in opslagplaatsen zie, is het eigendom van root
omdat ik super user dude zie aanklagen, dus nu is er een map genaamd mijn test en
binnen mijn test is er een bestand genaamd readme MD dus in deze map dus ik ben
ga naar mijn test en ik wil een nieuw bestand maken dat ik dit ga noemen
nano test dot SH en we zullen een snel SH-bestand maken om een ​​bash-script uit te voeren en
Ik ga echo typen, hallo, hoe kan dat oh dat zou ik echt moeten doen
blijf bij de norm hallo wereld, hoe is dat goed
dus ik heb dat uitgeschreven en ik heb het gesloten, dus nu zie je dat er een bestand is genaamd
test punt s H nu wanneer ik een bestand naar github overbreng, zijn de rechten
zal worden opgenomen met die push, dus als ik dot slash test dot s H you
merk op dat er toestemming is geweigerd Ik moet het uitvoerende uitvoerende alle chmod maken
plus x testpunt s H dus nu als ik testpunt s HS s hallo wereld typ, dus ik nu
heb mijn allereerste stukje script klaar om naar github te gaan, het maakt deel uit van mijn
repository op mijn lokale computer, maar het staat nog niet in github, dus als je kijkt naar
github Ik ga vernieuwen om te bewijzen dat je hier je bestandslijst ziet en
er is nog steeds alleen de readme ok dus nu terug in mijn terminalvenster ga ik
gebruik opnieuw dat git-commando. Ik ga een ster binnen de opslagplaatsen halen
map die zegt vind alle bestanden die wijzigingen hebben en voeg ze toe ok krijgen
commit - ben en geef dan tussen aanhalingstekens je commit een naam, dus ik zeg het
mijn eerste script en dit zijn slechts korte beschrijvingen en druk op enter en
nu zegt het hey dat je ons moet vertellen wie je bent, omdat je dat nog nooit hebt gedaan
voer git eerder op deze computer uit, dus je moet deze twee opdrachten behoorlijk uitvoeren
eenvoudig get config - - global je hoeft alleen maar
doe dit een keer, maak je geen zorgen, dot e-mail van de gebruiker en als je problemen hebt om dat gewoon te typen
kopieer het ok en dan tussen aanhalingstekens ga ik Robby in categorie 5 TV zetten en dat is
Ik vertel het gewoon mijn e-mailadres en dan ga ik naar de naam van de gebruikerspunt die ik niet weet
als je dat kunt horen, maar het is eigenlijk een heel zware storm buiten onze studio
vandaag, zodat de lichten een paar keer flikkeren en ik denk dat we het zullen krijgen
erdoorheen, hoe dan ook, verwijder dat en verander mijn naam in Robby
Ferguson komt oké klaar dus dat hoef ik maar één keer te doen dus nu scene
de volgende keer dat ik die git commit uitvoer, ben ik het gewoon aan het toevoegen
dus ik heb het toegevoegd en het ziet dat er één bestand is veranderd, er zijn er twee
invoegingen en testen SH is nieuw, dus het gaat dat creëren, dus nu de finale
commando dat ik moet invoeren is get push origin en ik ga het specificeren
master die de branchmaster is, dus origin master en nu gaat het
vraag me naar mijn gebruikersnaam en wachtwoord die ik heb ingevoerd toen ik mijn aanmaakte
account dus cat5 TV is mijn gebruikersnaam en mijn wachtwoord Ik gebruik LastPass en genereer nieuw
wachtwoorden de hele tijd en ze zijn enorm en gek, dus ik heb een wachtwoord gekopieerd
en dan heb ik het geplakt en daar gaat het die gegevens uploaden naar mijn
repository en het is zo gedaan f5 om te vernieuwen en je zou de test SH moeten zien
is nu onderdeel van mijn github-repository en daar is het en het laat zien dat het dat is
executive hallo wereld, dus nu hier, dus laten we net doen of ik veranderingen heb aangebracht
ergens anders op een andere computer en ik ga dit doen via de browser
alleen om je dit te laten zien op dit systeem ga ik weer echo hallo oké en dan
Ik ga die wijzigingen opslaan. Ik geef het geen naam of iets dergelijks
die beschrijving ga ik gewoon bevestigen, dus nu ziet het script er zo uit, dus zie
hoe ik dat ook in de browser verander, je kunt dit overal doen, dus nu als
Ik bekijk mijn bestand lokaal op mijn computer in de repository daar gaan we nog steeds
zegt gewoon hallo wereld, oké, dus ik ga weer trekken, ik doe dit allemaal
in de my underscore-testmap, dus git pull gaat er dan naar zoeken
wijzigingen die elders zijn aangebracht en ze naar mijn computer terugtrekken
het synchroniseert altijd die veranderingen, dus als ik nu Nano open en dat bestand open
je kunt zien dat nieuwe hallo nu daar deel van uitmaakt, dus ik laat je echo zien
hallo keer drie en ik ga dat opslaan en nu ga ik precies hetzelfde doen
hetzelfde maar laat je zien hoe het anders is nu
Ik heb mijn naam en mijn e-mailadres al ingevoerd Ad Star get commit -
ben laatste update krijg push origin master cap 5 TV is mijn gebruikersnaam en mijn wachtwoord
is een reeks van ongeveer 64 willekeurig gekozen tekens en ik ga plakken
dat in en daar gaan we dus dat is alles wat er is om nu mijn veranderingen door te voeren
lokaal naar de github-server zodat deze het opnieuw deelt met iedereen of
met mijn andere systemen als ik een get pull doe, zodat ik dat kan doen
vergeef me git kloon iets en het hoeft niet van mij te zijn, het kan zijn
de github-opslagplaats van iemand anders zolang het openbaar is, maar dan kan ik het maken
verandert het op mijn lokale computer en dan kan ik een push doen, nu moet je het bezitten
de repository om een ​​push te doen, zodat de manier om iemand te veranderen
anders is de repository om het te splitsen, dus als je naar de repository gaat, klik je op
de knop genaamd fork en het maakt in feite een kopie ervan in je eigen account
waar u wijzigingen in kunt aanbrengen en dat is waar u pull-verzoeken kunt doen
maar dat zijn de basisprincipes om u op weg te helpen, zodat u dat kunt
maak repositories upload uw bestanden upload uw code om te kunnen manipuleren
het vanaf elk systeem zodat je het kunt testen op een Raspberry Pi op je Windows-machine
op je Linux-desktop op wat dan ook en push al die wijzigingen naar de
server zodat ze kunnen worden gedownload of naar al uw systemen kunnen worden getrokken, dus dat is het
alles is er aan de hand
[Muziek]
