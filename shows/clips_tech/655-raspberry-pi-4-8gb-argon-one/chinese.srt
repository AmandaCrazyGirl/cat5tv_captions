1
00:00:01,760 --> 00:00:10,500
Raspberry Pi 4现在可用于2 4甚至8 GB的型号

2
00:00:10,500 --> 00:00:15,450
RAM支持最多解码h.265视频

3
00:00:15,450 --> 00:00:26,789
4k 60 + H点264全高清，具有双HDMI输出多个USB 3.0和2.0

4
00:00:26,789 --> 00:00:32,640
端口千兆以太网802 11 AC无线支持2.4和5

5
00:00:32,640 --> 00:00:38,940
千兆赫频率的蓝牙5.0，如果您没有抓住它，我已经

6
00:00:38,940 --> 00:00:49,230
提到它，但现在它具有8 GB的DDR4 3200 RAM 8 GB

7
00:00:49,230 --> 00:00:56,760
在SBC中，Raspberry Pi 4将会在生产之前

8
00:00:56,760 --> 00:01:02,449
至少到2020 6，这是个进入单板计算机的好时机，我的朋友们

9
00:01:02,449 --> 00:01:09,000
或者如果您已经设置了Raspberry Pi，那么该是时候升级

10
00:01:09,000 --> 00:01:14,939
这款特殊的Raspberry Pi与预算PC一致，因此我们想看看

11
00:01:14,939 --> 00:01:21,360
使其看起来像是一种时尚的现代台式设备，而不仅仅是一件

12
00:01:21,360 --> 00:01:25,740
制造商的技术，一束电线从GPIO伸出，

13
00:01:25,740 --> 00:01:32,630
朋友们是这种时尚的铝合金机身中氩气1盒的所在

14
00:01:32,630 --> 00:01:39,329
既有被动冷却又有主动冷却的组合，它既有动力

15
00:01:39,329 --> 00:01:44,820
按钮可以安全地控制Raspberry Pi 4的电源状态，

16
00:01:44,820 --> 00:01:51,780
使得氩气1箱成为美丽选择的几点

17
00:01:51,780 --> 00:01:57,570
进入它，让我们首先让我们的制造商吸引更多的人，我已经

18
00:01:57,570 --> 00:02:04,500
具有8 GB RAM的Raspberry Pi 4看起来好像没有磁带

19
00:02:04,500 --> 00:02:09,119
这是我喜欢的盒子

20
00:02:09,119 --> 00:02:17,510
好吧，它甚至没有一个疯狂的，甚至没有

21
00:02:17,510 --> 00:02:24,540
防静电袋，所以我们希望它在途中不会遇到任何静电

22
00:02:24,540 --> 00:02:30,239
否则，我们在盒子里什么都没有，这是他们不要碰的东西，

23
00:02:30,239 --> 00:02:39,060
好的手册，我们都已经为我们看到了Raspberry Pi

24
00:02:39,060 --> 00:02:44,819
知道他们看起来像那里的人是有微型HDMI的

25
00:02:44,819 --> 00:02:50,940
USB C电源输入，带有耳机组合插孔，USB至USB

26
00:02:50,940 --> 00:02:57,870
三个千兆以太网40针GPIO电源通过以太网连接器，因此可以购买

27
00:02:57,870 --> 00:03:03,720
一顶帽子，有一个摄像头连接器，有视频连接器，还有

28
00:03:03,720 --> 00:03:07,650
SOC Wi-Fi芯片可用于其他所有方面，因此我们很熟悉，我不需要

29
00:03:07,650 --> 00:03:12,299
进入一个氩气PI 4案例的细节太多了，我应该提到

30
00:03:12,299 --> 00:03:18,630
他们确实出售与PI 3兼容的氩气，因此请记住这一点，但是您不能

31
00:03:18,630 --> 00:03:24,120
混合，因此如果您使用的是PI 4，则必须获取PI 4模型

32
00:03:24,120 --> 00:03:29,250
使用PI 3来确保您获得PI 3模型（在我们的情况下）

33
00:03:29,250 --> 00:03:36,599
回家的人们，让我们从开放的PI 4 8 GB入手

34
00:03:36,599 --> 00:03:44,480
在此之前，我们先来看一下此盒子中的内容

35
00:03:44,480 --> 00:03:54,109
纸什么是保修卡，这是什么

36
00:03:54,109 --> 00:04:00,540
有关您不需要的操作说明，您正在观看视频，

37
00:04:00,540 --> 00:04:11,030
想必我会做得很好，让我们进入书包啊，那是

38
00:04:11,030 --> 00:04:16,949
谁仍然在清理工作室的空间，比如几周不值得

39
00:04:16,949 --> 00:04:22,200
所以开玩笑吧，那上面有保护膜

40
00:04:22,200 --> 00:04:24,919
塑料钻头

41
00:04:24,980 --> 00:04:31,610
这是我的朋友，这是氩气一台Raspberry Pi型号，对不起

42
00:04:31,610 --> 00:04:41,200
Raspberry Pi可以打开它，看看里面有什么，好了，我们已经有了

43
00:04:41,200 --> 00:04:52,850
扩展板，这很酷，因此Raspberry Pi的功能之一

44
00:04:52,850 --> 00:04:57,740
或任何单板计算机在大多数情况下都是

45
00:04:57,740 --> 00:05:02,060
电路板上的所有连接器，因此很难使其看起来很漂亮

46
00:05:02,060 --> 00:05:04,400
架子上有以太网出来了

47
00:05:04,400 --> 00:05:08,180
一边，您的另一端有HDMI出，而电源和视频也出在这里

48
00:05:08,180 --> 00:05:11,690
来到这里，还有吉普车之类的东西，所以他们所做的是

49
00:05:11,690 --> 00:05:17,690
他们提供了一个基本的适配器，只需将其插入

50
00:05:17,690 --> 00:05:23,540
板连接到耳机插孔和双HDMI输出，它的作用是

51
00:05:23,540 --> 00:05:30,380
所有这些插孔都直接放在Raspberry Pi的背面，所以我只是

52
00:05:30,380 --> 00:05:35,530
考虑到一个不错的小推动，我要小心，实际上我握着

53
00:05:35,530 --> 00:05:40,220
我在董事会上提出的要点，以免意外

54
00:05:40,220 --> 00:05:44,720
断开焊点，因为我不知道会发生这种情况，但我想

55
00:05:44,720 --> 00:05:48,740
小心，所以你有它，所以这将把音频和双

56
00:05:48,740 --> 00:05:58,520
背面的HDMI以及USB USB 3和千兆以太网进一步进入了

57
00:05:58,520 --> 00:06:02,150
盒子好吧，我们有一些导热垫，我们需要那些来做导热垫

58
00:06:02,150 --> 00:06:10,160
与SOC和RAM接触，这是氩气的内部

59
00:06:10,160 --> 00:06:17,360
Raspberry Pi 4的外壳，所以我们可以看到带有GPIO GPIO的风扇控制器

60
00:06:17,360 --> 00:06:23,870
转接针，因此Raspberry Pi 4将与GPIO连接

61
00:06:23,870 --> 00:06:29,210
所以这真的很酷，如果我可以在内部向您展示，

62
00:06:29,210 --> 00:06:34,400
您不会失去GPIO的实际作用就是在这种磁场下

63
00:06:34,400 --> 00:06:38,780
罩在这里，如果我能把它拿走，我们就去

64
00:06:38,780 --> 00:06:45,020
它的gpio从板上上升了，所以这里是实际的GPIO和

65
00:06:45,020 --> 00:06:51,950
它使用一个不错的H GPIO标头标识符将其移到这里，因此您没有

66
00:06:51,950 --> 00:06:55,850
寻找那张卡片有多酷，所以如果您想进入制造商技术领域

67
00:06:55,850 --> 00:07:00,380
虽然看起来很漂亮，但您可以轻松卸下此磁性盖

68
00:07:00,380 --> 00:07:06,889
并访问GPIO，这样我们就可以将其组装起来

69
00:07:06,889 --> 00:07:15,890
我们现在可以启动它，我提到这是主动和被动冷却

70
00:07:15,890 --> 00:07:24,620
因此请记住，这是氩气的塑料底座，这是

71
00:07:24,620 --> 00:07:29,900
铝盖好，所以这实际上是为了散热铝

72
00:07:29,900 --> 00:07:35,120
可以将热量从SOC中带走，这是两个接触点，因此我们

73
00:07:35,120 --> 00:07:40,220
有一个用于SOC本身，一个用于RAM，然后我们得到了

74
00:07:40,220 --> 00:07:47,360
主动式冷却器，因此即使散热片仍然过热，

75
00:07:47,360 --> 00:07:52,550
通过铝加热，然后风扇控制器上的风扇将旋转

76
00:07:52,550 --> 00:07:58,130
根据我要显示的温度达到您指定的指定速度

77
00:07:58,130 --> 00:08:02,510
您一会儿如何工作，所以我需要这个导热垫

78
00:08:02,510 --> 00:08:07,880
将与S进行很好的接触，这些不是

79
00:08:07,880 --> 00:08:14,720
导热垫这些是脚，哇，我就像嘿，导热垫这些是脚，

80
00:08:14,720 --> 00:08:25,130
这种情况下我会继续这样做的，很酷，我可以先做，我不能做

81
00:08:25,130 --> 00:08:29,990
事情错了，我敢肯定，这就是指示说要把

82
00:08:29,990 --> 00:08:36,830
就像Ravi在第5类上一样，我先站着，这样我就不会忘记或丢失

83
00:08:36,830 --> 00:08:43,159
他们有多少人坐在这些橡胶脚上

84
00:08:43,159 --> 00:08:47,220
他们的工具箱在那里我们现在就可以完成了

85
00:08:47,220 --> 00:08:52,559
放在一边，现在我确实有这些导热垫，

86
00:08:52,559 --> 00:09:00,089
他们在两侧都喜欢我们粘合剂，所以只要剥掉塑料

87
00:09:00,089 --> 00:09:06,259
确保您不想将塑料放在上面并融化在您身上

88
00:09:06,379 --> 00:09:11,189
当您进行电视节目表演时，为美观起见，最好修剪指甲

89
00:09:11,189 --> 00:09:24,569
可怕的是将塑料从胶粘剂的背面剥离

90
00:09:24,569 --> 00:09:42,410
就在那里，与此相同，我们在那里

91
00:09:42,410 --> 00:09:47,439
它真的很真实，已经有点像

92
00:09:47,439 --> 00:09:56,119
预先组装好的男孩，哦，男孩，如果您有选择的话，请不要在指甲前修剪指甲

93
00:09:56,119 --> 00:09:58,809
做这个

94
00:10:03,769 --> 00:10:07,550
那里我们一点都不麻烦

95
00:10:07,550 --> 00:10:13,009
安装和执行此操作最具挑战性的事情不是很好吗

96
00:10:13,009 --> 00:10:18,739
这是您自己设置的Raspberry Pi，用于在氩气中具有八个演出的RAM

97
00:10:18,739 --> 00:10:26,929
最难的一件事是取下粘性部分

98
00:10:26,929 --> 00:10:31,579
散热垫还可以，所以请注意GPIO的位置

99
00:10:31,579 --> 00:10:36,199
它，我们将其直接定位在GPIO上，小心不要

100
00:10:36,199 --> 00:10:39,649
弯曲任何别针，我将把它转过来，这样您就可以看到

101
00:10:39,649 --> 00:10:42,679
一边，我只是将其推下

102
00:10:42,679 --> 00:10:53,980
很好，很贴心，就像GPIO屎一样进入了

103
00:10:53,980 --> 00:10:59,929
确保所有东西都对齐好，我猜所有这些螺丝

104
00:10:59,929 --> 00:11:05,329
是时候把它们放在一起了，看起来我已经一二三四了

105
00:11:05,329 --> 00:11:10,699
在内部拧入点，然后在盖子上拧上四个，这样就可以

106
00:11:10,699 --> 00:11:14,980
这些里面的小螺丝

107
00:11:22,610 --> 00:11:26,839
我们注意到，Raspberry Pi上有一个洞，

108
00:11:26,839 --> 00:11:30,620
没有僵局，所以您不必担心，我们将这四个外部

109
00:11:30,620 --> 00:11:35,630
那些是外壳的底部，所以现在我要把它放在顶部并抓住

110
00:11:35,630 --> 00:11:53,120
四个更长的螺丝，我们将把那些螺丝放在那里

111
00:11:53,120 --> 00:11:57,380
祝贺你做到了，做到了，不是那么难

112
00:11:57,380 --> 00:12:02,870
查看背面的端口，我喜欢外观如此光滑，请注意没有

113
00:12:02,870 --> 00:12:07,670
我们周围的其他端口的确有一个SD micro SD端口

114
00:12:07,670 --> 00:12:14,390
前端隐藏在底部，但是所有I / O已移至

115
00:12:14,390 --> 00:12:19,279
背面我很喜欢，再加上我们有这个电源按钮，这绝对是

116
00:12:19,279 --> 00:12:24,290
睡觉，当我们返回时，我们必须休息一下，我要把它点火

117
00:12:24,290 --> 00:12:29,899
我们一起来检查一下氩气的特征

118
00:12:29,899 --> 00:12:35,680
大约8 GB的Raspberry Pi 4棒

119
00:12:53,140 --> 00:12:57,230
在休息期间，我用最新版本的

120
00:12:57,230 --> 00:13:01,580
我想说的是Raspberry Pi操作系统，但是他们改了名字，所以

121
00:13:01,580 --> 00:13:06,680
它被称为Raspberry Pi OS，现在我跟踪到5伏3.5安电流

122
00:13:06,680 --> 00:13:11,720
供应，请记住，Raspberry Pi 4是耗电的野兽

123
00:13:11,720 --> 00:13:17,060
因此，虽然我可能可以使用3安培电源为其供电，或者可能

124
00:13:17,060 --> 00:13:21,080
即使没有一点东西，如果没有，您可能会损坏SD卡

125
00:13:21,080 --> 00:13:26,090
足够的功率，而且这非常容易做到，让我说我愿意

126
00:13:26,090 --> 00:13:30,260
在可以从USB端口汲取安培或其他东西的USB设备中

127
00:13:30,260 --> 00:13:36,260
你走了，所以我宁可谨慎一点，所以要使用3.5安培的电源

128
00:13:36,260 --> 00:13:40,460
只是为了安全起见，这将确保我获得最佳的可靠性

129
00:13:40,460 --> 00:13:45,470
我的Raspberry Pi 4没问题，所有电缆都连接好了

130
00:13:45,470 --> 00:13:50,620
只需按一下Aragon上的电源按钮即可打开Raspberry Pi 4

131
00:13:50,620 --> 00:13:57,140
而且我听到的只是风扇的一点旋转声，我什至不认为您能够

132
00:13:57,140 --> 00:14:00,680
听到我们的压缩机和其他所有东西，但这只是我的一点

133
00:14:00,680 --> 00:14:06,490
可以知道风扇已打开且已关闭，并且我进入了发行版

134
00:14:06,490 --> 00:14:15,110
好极了，我要说的一件事就是

135
00:14:15,110 --> 00:14:19,570
凉爽的感觉很好加电很棒

136
00:14:21,190 --> 00:14:26,380
我认为有一种可能会消失

137
00:14:26,380 --> 00:14:31,720
想念船，那就是我们仍在使用micro-hdmi，所以我

138
00:14:31,720 --> 00:14:36,160
仍然必须使用微型HDMI到HDMI电缆才能将其插入我的电视

139
00:14:36,160 --> 00:14:41,470
并进入捕获设备，以便您现在可以在家中看到它

140
00:14:41,470 --> 00:14:45,010
觉得自己像B一样错过了船，因为他们本可以制作完整的HDMI

141
00:14:45,010 --> 00:14:49,120
他们有足够的空间，他们本来可以做到的，而且他们可以控制

142
00:14:49,120 --> 00:14:56,650
他们对案子的看法，但是随着我的讲解，这根本不是一团糟

143
00:14:56,650 --> 00:15:02,260
HDMI上没有断开连接，我不了解您，但是当我插入时

144
00:15:02,260 --> 00:15:07,660
将Raspberry Pi开发板直接插入HDMI电缆，就像我对

145
00:15:07,660 --> 00:15:13,720
氩气如果我稍稍移动一下，屏幕会变成绿色或类似

146
00:15:13,720 --> 00:15:17,500
数字失真或某些东西，所以我必须再次摇晃电缆，

147
00:15:17,500 --> 00:15:21,339
然后，如果它移动了，我就会失去连接，这会引起问题

148
00:15:21,339 --> 00:15:28,890
好吧，尽管它仍然是微型HDMI，

149
00:15:28,890 --> 00:15:34,480
尽管它仍然不是这种事情的完美连接

150
00:15:34,480 --> 00:15:39,970
微型HDMI，它比内置的微型HDMI坚固得多

151
00:15:39,970 --> 00:15:46,089
进入Raspberry Pi，我立即注意到这一点，所以我想您会

152
00:15:46,089 --> 00:15:51,760
感谢我提到我正在使用高清micro HDMI到HDMI电缆，您可以

153
00:15:51,760 --> 00:15:57,910
如果愿意，也可以使用micro HDMI到全尺寸HDMI适配器，而氩

154
00:15:57,910 --> 00:16:06,160
情况肯定可以让我更好地连接到该HDMI输出，好吧，我

155
00:16:06,160 --> 00:16:08,940
插上了键盘

156
00:16:09,300 --> 00:16:16,570
我已经插入USB无线鼠标，键盘在这里，

157
00:16:16,570 --> 00:16:19,690
只需将其插入USB 2即可，因为我要将这些USB 3保存为

158
00:16:19,690 --> 00:16:27,430
那里的其他东西我们都很好，所以解雇了哦，有点延迟

159
00:16:27,430 --> 00:16:33,040
我首先要考虑的是我要提到的是

160
00:16:33,040 --> 00:16:37,160
这是一个智能电源开关，因此

161
00:16:37,160 --> 00:16:43,779
电源开关是可编程的，有源散热器的散热是

162
00:16:43,779 --> 00:16:49,129
实际上是可编程的，我开始在那里感到温暖

163
00:16:49,129 --> 00:16:53,089
这就是让我想到该冷却系统的原因，所以您可以看到

164
00:16:53,089 --> 00:16:56,660
侧面的通风孔，这在冷却Raspberry方面做得非常好

165
00:16:56,660 --> 00:17:01,519
皮，但是它开始变热了，如果要

166
00:17:01,519 --> 00:17:07,250
它开始变得有点太热，所以它从

167
00:17:07,250 --> 00:17:11,600
铝，它有一个主动冷却系统，风扇将作为

168
00:17:11,600 --> 00:17:16,429
需要，所以让我们进入终端，我需要成为root用户，所以我只是

169
00:17:16,429 --> 00:17:24,559
要键入sudo su-在那里我是root，所以我是root，您会看到

170
00:17:24,559 --> 00:17:31,880
说去卷曲，然后URL HTTP冒号斜杠的说明

171
00:17:31,880 --> 00:17:42,799
下载点氩40平静斜线氩，然后它是第一SH和

172
00:17:42,799 --> 00:17:53,090
然后是烟斗，为什么我不能想到bash这个词好了，所以我想分解一下

173
00:17:53,090 --> 00:17:56,120
该命令对您来说好吧，我实际上正在做的就是告诉它使用

174
00:17:56,120 --> 00:18:04,580
curl从下载argon-40的过程中基本上下载到输出此脚本

175
00:18:04,580 --> 00:18:11,210
斜杠氩一个点sh但不是将其输出到我的屏幕上

176
00:18:11,210 --> 00:18:16,700
如果我删除烟斗重击会发生，那是脚本，所以烟斗会发生

177
00:18:16,700 --> 00:18:23,600
bash说，让我们实际上在bash中运行该脚本，将输出的管道

178
00:18:23,600 --> 00:18:31,130
扑朔迷离，所以，如果我想采用其他方法并说我想控制什么

179
00:18:31,130 --> 00:18:35,360
这实际上是在做还是我想在修改脚本之前安装此安装程序

180
00:18:35,360 --> 00:18:40,909
我实际上安装得很好，让我们采用不同的方法，所以我要去

181
00:18:40,909 --> 00:18:46,720
W得到

182
00:18:46,750 --> 00:18:50,860
否则我本来可以吹卷发的，所以我会得到哦，这有点像猴子

183
00:18:50,860 --> 00:18:53,890
在我的终端窗口中，我将控制C，以便您可以看到

184
00:18:53,890 --> 00:18:58,270
好一点W去哦，我们走了

185
00:18:58,270 --> 00:19:01,960
因此W get是另一种下载工具，但该工具实际上将保存

186
00:19:01,960 --> 00:19:08,110
归档到我们的GaN一个SH上，现在抓取到我拥有的文件，而我所要做的就是

187
00:19:08,110 --> 00:19:13,600
为了编辑该文件，我可以使用Nano例如，所以Nano消失了

188
00:19:13,600 --> 00:19:19,390
一个圆点H可以将它带到我最喜欢的文本编辑器中，所以

189
00:19:19,390 --> 00:19:22,300
我看到的第一件事，我应该说，做事情的一件好事

190
00:19:22,300 --> 00:19:26,380
这样可以检查代码，这是其中之一

191
00:19:26,380 --> 00:19:30,100
关于开放源代码和Linux工作方式，您可以浏览一下，看看是否

192
00:19:30,100 --> 00:19:33,520
有什么您想要更改或想要执行的操作，但是首先

193
00:19:33,520 --> 00:19:37,270
我基本上看到了几个函数，以便它们可以重用一些

194
00:19:37,270 --> 00:19:41,910
诸如创建触摸文件并在设置权限之前

195
00:19:41,910 --> 00:19:48,550
添加内容检查是否安装了软件包，以便让他们看到

196
00:19:48,550 --> 00:19:53,950
如果ng的响应代码不好，或者如果

197
00:19:53,950 --> 00:19:58,930
在dpkg查询中找不到软件包，该软件包将在以后调用

198
00:19:58,930 --> 00:20:05,140
使用此循环获取诸如raspy之类的软件包列表-GPIO Python敏锐

199
00:20:05,140 --> 00:20:09,010
在GPIO上等等等等，因此基本上将要获得的软件包

200
00:20:09,010 --> 00:20:14,260
与apt-get一起安装，因此它在软件包列表中通过了一个循环，

201
00:20:14,260 --> 00:20:18,130
它经历了安装和批准每个安装的循环

202
00:20:18,130 --> 00:20:23,440
这些软件包，但是如果其中任何一个软件包无法通过以下命令安装响应

203
00:20:23,440 --> 00:20:27,430
ng然后会说嘿，您未连接到某处错误

204
00:20:27,430 --> 00:20:32,770
互联网，但是如果它消失了，因为没有别的了

205
00:20:32,770 --> 00:20:36,970
只是要恢复，如果那没有发生，那么它将继续

206
00:20:36,970 --> 00:20:43,690
在这里，我们将守护进程Argan命名为D，并获得了电源按钮脚本

207
00:20:43,690 --> 00:20:49,750
将在用户斜杠bin斜杠Argan 1d dot pi中创建，我们有一个

208
00:20:49,750 --> 00:20:58,480
Lib系统D中的关闭脚本称为Argan D Argan一个D点-关机点

209
00:20:58,480 --> 00:21:02,290
pi等，依此类推，这些只是

210
00:21:02,290 --> 00:21:06,310
文件名，以便可以重复使用这些命令

211
00:21:06,310 --> 00:21:13,810
使我平方C，我想做谷物必须是谷物

212
00:21:13,810 --> 00:21:18,280
我的猜测还可以，然后我们开始写文件，所以如果Damon

213
00:21:18,280 --> 00:21:22,720
配置文件不存在，让我们创建它，由于某些原因我们触摸它

214
00:21:22,720 --> 00:21:27,640
在这里不使用他们的功能也许是一个错误，我们可以修复它

215
00:21:27,640 --> 00:21:32,920
没关系，它做的是完全相同的事情，只是有趣的是

216
00:21:32,920 --> 00:21:36,280
多余地发生，他们本可以使用这些功能，例如注释和

217
00:21:36,280 --> 00:21:41,620
然后在配置文件的底部是温度与风扇速度之比

218
00:21:41,620 --> 00:21:47,710
因此，如果达到55度，则将风扇速度设置为10％（如果达到60度）

219
00:21:47,710 --> 00:21:53,170
摄氏度将风扇速度设置为55和65摄氏度

220
00:21:53,170 --> 00:21:58,810
将风扇速度设置为完全100％，因此希望我们永远都不能达到这一点

221
00:21:58,810 --> 00:22:02,770
这些配置项当然可以在安装前在此处进行更改

222
00:22:02,770 --> 00:22:06,880
它或那只是要更改Damon配置文件的输出或

223
00:22:06,880 --> 00:22:10,450
当然，您可以稍后进行编辑，也可以使用他们将要使用的工具

224
00:22:10,450 --> 00:22:16,750
给你以便自己进行更改关闭脚本，我们去看看

225
00:22:16,750 --> 00:22:21,760
要么现在使用氩气创建文件，这是一个Python脚本

226
00:22:21,760 --> 00:22:26,110
创建，尽管它正在bash中运行它，所以它正在做的是

227
00:22:26,110 --> 00:22:31,120
使用bash命令将其导入sis SM输出到关闭脚本

228
00:22:31,120 --> 00:22:36,100
总线从Raspberry Pi GPIO作为GPIO，然后检查版本号

229
00:22:36,100 --> 00:22:41,920
Raspberry Pi并相应地向下移动电源按钮脚本，这是

230
00:22:41,920 --> 00:22:45,160
当您按下电源按钮时，将会发生什么

231
00:22:45,160 --> 00:22:52,000
脚本让抓总线时间抓GPIO OS，而不仅仅是

232
00:22:52,000 --> 00:22:56,620
时间就像柜台和时钟，其他都还可以

233
00:22:56,620 --> 00:23:01,500
这里发生了什么，所以再次检查修订并采取相应措施

234
00:23:01,500 --> 00:23:06,640
因为根据版本的修改可能会有一些不同的响应

235
00:23:06,640 --> 00:23:13,019
板，所以它正在检查关机检查此

236
00:23:13,019 --> 00:23:18,479
是一个功能，是的，当您按下按钮时它会响应，因此当您按下它时

237
00:23:18,479 --> 00:23:23,119
当您没问题时，它会增加称为“脉冲时间”的时间

238
00:23:23,119 --> 00:23:28,259
整数字符串，不是整数字符串，而是整数

239
00:23:28,259 --> 00:23:32,580
不断增加，每次您按下按钮时，就算是

240
00:23:32,580 --> 00:23:39,239
因此，当您两次按下它时，它将立即安全地重新启动树莓派

241
00:23:39,239 --> 00:23:44,489
知道两次按下该按钮时实际发生的情况是

242
00:23:44,489 --> 00:23:50,249
运行操作系统的系统命令重新启动，所以它不做硬重启不是

243
00:23:50,249 --> 00:23:53,609
切断电源，然后重新打开电源，否，它实际上正在运行重启

244
00:23:53,609 --> 00:23:58,019
我将在Vash提示符下运行的命令，这样可以安全重启

245
00:23:58,019 --> 00:24:02,700
自动同步您的SSD，它将保存您的文件以及其他任何内容

246
00:24:02,700 --> 00:24:06,599
它通常会在重新启动命令期间执行，您也可以添加自己的内容

247
00:24:06,599 --> 00:24:11,479
在这里，如果您想喜欢我可以做些类似的事情，请记住，这是

248
00:24:11,479 --> 00:24:15,989
即使我们在bash中键入此内容，这也将是Python脚本，因此

249
00:24:15,989 --> 00:24:22,619
您可以将任何Python放在这里，然后确保将管道

250
00:24:22,619 --> 00:24:29,940
没有管道，但直接将其指向美元符号电源按钮脚本

251
00:24:29,940 --> 00:24:39,330
您还可以随时编辑该文件，也可以编辑该电源按钮

252
00:24:39,330 --> 00:24:43,729
如果您备份的脚本将被保存

253
00:24:43,729 --> 00:24:48,840
电源按钮脚本斜杠用户斜杠bin斜杠氩

254
00:24:48,840 --> 00:24:54,479
一维点pi，因此您可以编辑该脚本，然后就可以更改

255
00:24:54,479 --> 00:24:57,570
按下电源按钮两次或按住电源按钮时会做什么

256
00:24:57,570 --> 00:25:02,940
三秒钟，您就可以按照自己想要的方式做出反应，也许您想要

257
00:25:02,940 --> 00:25:06,869
给您发送电子邮件或类似的东西，您可以做到

258
00:25:06,869 --> 00:25:10,769
您想要安全关闭的其他东西（例如APC UPS）或

259
00:25:10,769 --> 00:25:13,320
30秒后发生的事情，或者我不知道也许您有看门狗

260
00:25:13,320 --> 00:25:19,529
插入GPIO，您也可以使用它，所以，如果您按一下按钮

261
00:25:19,529 --> 00:25:25,049
因为如果你持续三秒钟，它将关闭

262
00:25:25,049 --> 00:25:30,629
现在关闭-嗯，这实际上是一个安全的关机命令，可以关闭您的电源

263
00:25:30,629 --> 00:25:34,440
电脑，因此您不只是在消磨力量，如果继续

264
00:25:34,440 --> 00:25:38,009
按住该按钮五秒钟，这不是一种安全的方法

265
00:25:38,009 --> 00:25:43,470
就像您的最后一招，但是此脚本就像您看到的那样运行这些命令

266
00:25:43,470 --> 00:25:48,210
通常情况下，您可以安全地按下该按钮并触发GPIO和

267
00:25:48,210 --> 00:25:51,299
它监视您按了多长时间或按了几次然后按

268
00:25:51,299 --> 00:25:55,049
做出相应的反应，因此只要具备一点Python知识，您就可以做到

269
00:25:55,049 --> 00:26:00,440
按下三下就可以播放我喜欢的歌曲

270
00:26:00,440 --> 00:26:03,509
那种东西，无论你认为你能看穿什么

271
00:26:03,509 --> 00:26:09,360
在这里有很多乐趣，所以我喜欢你喜欢的人

272
00:26:09,360 --> 00:26:14,549
我们可以这样做，然后说完之后，我们做了一些更改，我们可以

273
00:26:14,549 --> 00:26:19,440
控制进入输入以编写我们的更改，然后控制X退出，现在我

274
00:26:19,440 --> 00:26:26,249
只需要去chmod加x就去了一个点Sh，现在我可以通过

275
00:26:26,249 --> 00:26:32,610
正点斜线氩1点Sh完全一样

276
00:26:32,610 --> 00:26:39,570
作为使用curl将URL管道输送到bash的方法，我将在这里运行它

277
00:26:39,570 --> 00:26:42,899
去，它已经有GPIO，它已经有一个

278
00:26:42,899 --> 00:26:50,100
几件事消失了，需要我平方C已经

279
00:26:50,100 --> 00:26:56,759
安装并处于活动状态并准备好运行，我们完成了创建快捷方式的操作，好吗

280
00:26:56,759 --> 00:27:03,029
哦，是的，我的桌面上确实有捷径

281
00:27:03,029 --> 00:27:09,570
一种配置让我们运行它，我们将在终端中全部执行

282
00:27:09,570 --> 00:27:12,179
正确的氩气一风扇速度配置工具

283
00:27:12,179 --> 00:27:16,860
这将删除现有配置，按Y，好吧，你要做什么

284
00:27:16,860 --> 00:27:22,950
永远在线，让我们尝试吧，是的，我听到了，你们听到了，即使在

285
00:27:22,950 --> 00:27:29,560
对此相当不错，但是因为它是

286
00:27:29,560 --> 00:27:38,590
由I平方C控制器控制，而不是仅由GPIO引脚控制

287
00:27:38,590 --> 00:27:43,180
只需打开或关闭它，您就可以设置阈值，这样我们就可以运行

288
00:27:43,180 --> 00:27:47,950
再次配置脚本，并说要调整温度，让我们带

289
00:27:47,950 --> 00:27:53,520
在我们的屏幕上显示一点点，我在屏幕上看不到

290
00:27:56,160 --> 00:28:03,480
好吧，请提供以下温度下的风扇转速55摄氏度

291
00:28:03,480 --> 00:28:14,590
25％风扇速度60 C，让我们做50％风扇速度65 C，好吧90％好的，现在

292
00:28:14,590 --> 00:28:19,900
风扇刚刚关闭，因为它使用被动冷却来保持

293
00:28:19,900 --> 00:28:26,680
55岁以下的东西，我想是这样，如果我开始使用

294
00:28:26,680 --> 00:28:33,550
Raspberry Pi快要死了，它会旋转风扇，所以现在我有了

295
00:28:33,550 --> 00:28:36,730
该脚本大概是在我按下电源按钮时安装的，

296
00:28:36,730 --> 00:28:43,030
什么都不做，但是如果我按两次它会做什么，

297
00:28:43,030 --> 00:28:47,440
我们将在这里丢失屏幕，但是如果它能正常工作，我们就知道了

298
00:28:47,440 --> 00:28:51,670
现在注意到它并没有杀死我不知道是否可以看到的力量

299
00:28:51,670 --> 00:28:59,740
但实际上是完成了安全重启，这真是太棒了

300
00:28:59,740 --> 00:29:06,640
具有8 GB RAM的Pi 4加上氩气，这简直太棒了

301
00:29:06,640 --> 00:29:10,690
我对此感到非常满意，我仍然可以访问

302
00:29:10,690 --> 00:29:16,490
GPIO，无需拆开很酷的外壳

303
00:29:16,490 --> 00:29:20,380
绝对华丽

