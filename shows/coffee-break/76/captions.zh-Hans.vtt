WEBVTT
Kind: captions
Language: zh-Hans

00:00:02.240 --> 00:00:06.640
你好，这是第五类电视

00:00:06.640 --> 00:00:11.599
五个电视喝咖啡休息时间，我是bp9，在那儿给你挥手致意

00:00:11.599 --> 00:00:15.759
索尔伯格（Solberg）给了我们解决方法

00:00:15.759 --> 00:00:19.359
哦，好吧，足够近了，然后我们就知道了

00:00:19.359 --> 00:00:26.400
给我们走，你好，你去，你好，彼得给我们走，彼得

00:00:26.400 --> 00:00:30.000
在那里，我们去彼得问好，然后欢迎来到

00:00:30.000 --> 00:00:34.559
喝咖啡休息时间，这个星期我的新闻基本上

00:00:34.559 --> 00:00:40.160
嗯，昨天和昨天有关系吗？我想我说了

00:00:40.160 --> 00:00:45.440
大概是嗯

00:00:45.440 --> 00:00:51.199
在C程序中进行单元测试，这对我来说意义重大，因为我

00:00:51.199 --> 00:00:56.719
过去一直在Java中这样做，我会尝试获得70或80

00:00:56.719 --> 00:01:01.920
由于商业原因，我对我的Java代码的了解

00:01:01.920 --> 00:01:03.840
被要求您知道您需要确定

00:01:03.840 --> 00:01:09.920
您的代码与您的代码实际是否符合您的预期

00:01:11.280 --> 00:01:15.759
所以我要做的是，我们要做的另一件事是

00:01:15.759 --> 00:01:20.880
确保您获得良好的代码覆盖率，并且具有一定的代码覆盖率

00:01:20.880 --> 00:01:24.240
那是不好的，我不认为那是相当

00:01:24.240 --> 00:01:30.479
um和c一起使用很容易，但事实证明这很简单

00:01:30.479 --> 00:01:35.920
gcc编译器将很高兴产生覆盖率

00:01:35.920 --> 00:01:41.439
您使用负负覆盖范围时的数据

00:01:41.439 --> 00:01:45.360
命令一个参数，以便您将该命令行参数提供给

00:01:45.360 --> 00:01:51.840
到编译器和链接器，然后在运行程序时

00:01:51.840 --> 00:01:55.040
您的测试工具将会发生什么，它将运行所有

00:01:55.040 --> 00:01:59.280
测试，它将只是...呃，您只需运行所有

00:01:59.280 --> 00:02:02.719
测试套件中的测试

00:02:02.719 --> 00:02:05.759
最终，您获得了一堆覆盖率数据，然后将其转换为

00:02:05.759 --> 00:02:11.520
一个HTML页面，你会得到一个很好的

00:02:11.520 --> 00:02:17.200
嗯，这是一个网站，基本上可以告诉您多少

00:02:17.200 --> 00:02:19.520
您在整个计划级别的覆盖范围

00:02:19.520 --> 00:02:22.720
然后在每个文件级别甚至每个级别

00:02:22.720 --> 00:02:26.239
um函数和行级别（如果要执行此操作）

00:02:26.239 --> 00:02:30.000
所以对我来说这很有趣

00:02:30.000 --> 00:02:35.519
嗯，我一直在研究我提到的客户端服务器程序

00:02:35.519 --> 00:02:40.560
一两个星期前，我一直在尝试获取嗯

00:02:40.560 --> 00:02:48.160
嗯，我一直在试图得到嗯，嗯，

00:02:48.160 --> 00:02:51.360
客户端进行加密，然后对有效负载进行签名

00:02:51.360 --> 00:02:57.040
然后让服务器um uh解密，然后在

00:02:57.040 --> 00:02:59.760
有效载荷，但我无法做到这一点

00:02:59.760 --> 00:03:04.319
起初可靠地工作，直到我想通了，我根本无法使它工作

00:03:04.319 --> 00:03:07.840
只看别人的代码如何

00:03:07.840 --> 00:03:11.440
我如何创建有效负载的哈希值然后进行加密

00:03:11.440 --> 00:03:17.840
然后签名的哈希有效，但它不能可靠地我可以

00:03:17.840 --> 00:03:21.200
在十次运行中，我可以使它运行七次

00:03:21.200 --> 00:03:25.040
在那十个中，但我没有做任何更改，我要做的就是运行该测试

00:03:25.040 --> 00:03:29.760
一遍又一遍地驾驭有时会起作用，有时会

00:03:29.760 --> 00:03:35.360
不，我不知道为什么，如果有人对此有任何见识

00:03:35.360 --> 00:03:37.599
我很想听听，因为现在我不能

00:03:37.599 --> 00:03:41.120
呃，现在我对此无能为力

00:03:41.120 --> 00:03:45.360
那么客户端和服务器之间的连接是什么

00:03:45.360 --> 00:03:52.000
嗯，这是一个tcp套接字，但是由于两者都在

00:03:52.000 --> 00:03:57.040
当我在测试装置上运行时进行正确的校正

00:03:57.040 --> 00:04:02.879
um连接没有它们正在同一进程中运行的连接

00:04:02.879 --> 00:04:08.000
嗯，所以我要带一个有效载荷，我要把它放在框架中，我要带一个

00:04:08.000 --> 00:04:13.680
有效负载我正在对其进行签名，然后将其带走了已签名的有效负载

00:04:13.680 --> 00:04:17.120
然后使用其他加密功能验证签名

00:04:17.120 --> 00:04:21.280
全部都在同一台机器上

00:04:21.280 --> 00:04:26.960
是正确的，先生，现在好吧，也许它不喜欢我签名，

00:04:26.960 --> 00:04:30.160
在相同的有效载荷上验证相同的签名

00:04:30.160 --> 00:04:34.400
也许我必须在单独的流程中执行此操作，或者我不知道的某些操作

00:04:34.400 --> 00:04:38.160
在不同的机器上尝试如何

00:04:38.240 --> 00:04:41.600
嗯，我可以这样做，但随后我需要实际编写使

00:04:41.600 --> 00:04:45.840
两台机器之间的连接我尚未编写该代码，但我是

00:04:45.840 --> 00:04:50.400
基本上证明我可以先加密并签名

00:04:50.400 --> 00:04:54.160
然后我要编写代码并验证它是否可以通过

00:04:54.160 --> 00:04:58.479
通过TCP套接字上网我有信心我能做到

00:04:58.479 --> 00:05:01.600
编写足够多的代码，我可以知道

00:05:01.600 --> 00:05:05.520
有信心我可以使那部分工作我不确定

00:05:05.520 --> 00:05:09.039
考虑我只是不可靠

00:05:09.039 --> 00:05:13.440
想知道传输中是否没有掉线

00:05:14.320 --> 00:05:18.160
为此，这不是没有联系

00:05:18.160 --> 00:05:21.680
为此，从字面上看，这只是一个

00:05:21.680 --> 00:05:26.000
嗯，这是一个直接的联系

00:05:26.000 --> 00:05:31.280
嗯嗯，我一直在说连接，我错了

00:05:31.280 --> 00:05:36.479
签名和验证都是完全一样的

00:05:36.479 --> 00:05:41.520
在相同的地址空间中处理没有

00:05:41.520 --> 00:05:45.280
呃，两者之间没有中间连接，不，我们是

00:05:45.280 --> 00:05:49.120
禁止，如果你想说些不，我

00:05:49.120 --> 00:05:51.440
不要以为你想说彼得我

00:05:51.440 --> 00:05:54.000
抱歉，您在吵闹，我必须

00:05:54.000 --> 00:05:59.360
暂时我说这可能是在修改那些

00:05:59.360 --> 00:06:03.360
每次发动攻击时都会再次坚持这是错误的

00:06:03.360 --> 00:06:07.039
从字面上以某种方式更改代码，并且

00:06:07.039 --> 00:06:12.639
可能正在改变为什么第二次或第三次工作的原因

00:06:12.639 --> 00:06:18.000
其中一口井的程序代码每次运行的程序代码都相同

00:06:18.000 --> 00:06:22.000
每次运行的有效载荷都相同，唯一不同的是

00:06:22.000 --> 00:06:26.479
是是有符号值，因为种子略有不同

00:06:26.479 --> 00:06:30.319
每次它每次运行，但我无法想象那会

00:06:30.319 --> 00:06:33.840
任何与呃有关的事我都无法想象

00:06:33.840 --> 00:06:37.520
我唯一能想到的就是

00:06:37.520 --> 00:06:40.720
有些东西在变化，因为它说像某物

00:06:40.720 --> 00:06:45.039
在某个地方改变循环，这就是为什么它不起作用哦，我

00:06:45.039 --> 00:06:50.560
会同意的，我会同意的

00:06:50.560 --> 00:06:53.440
有所不同，但事实是我不知道有什么不同

00:06:53.440 --> 00:06:57.520
这是关于使用的不幸部分

00:06:57.520 --> 00:07:02.240
您的代码中的库，就像您在pascal peter中所做的一样

00:07:02.240 --> 00:07:06.800
您可以正确使用单位，也可以在使用库时依靠这些库

00:07:06.800 --> 00:07:09.759
做正确的事，但是为了让图书馆做

00:07:09.759 --> 00:07:14.160
您必须正确了解图书馆的工作原理

00:07:14.160 --> 00:07:18.319
我不太确定自己是否已经了解所有的规则

00:07:18.319 --> 00:07:22.319
涉及到围绕各种特别

00:07:22.319 --> 00:07:26.560
加密函数，因为它们是如此敏感，非常可怕

00:07:26.560 --> 00:07:29.759
是的，你必须向右拉

00:07:29.759 --> 00:07:32.400
还有东西，因为那可以让你走

00:07:32.400 --> 00:07:38.160
砰哦可以肯定哦绝对可以但是因为我是

00:07:38.160 --> 00:07:43.360
运行完全相同的代码，对不起，有什么办法

00:07:43.360 --> 00:07:46.479
监控吞吐量

00:07:48.319 --> 00:07:52.080
有什么方法可以从字面上监视威胁

00:07:52.080 --> 00:07:57.120
我在想我可以从字面上逐步通过代码

00:07:57.120 --> 00:08:03.280
用gnu调试器um如果我想做那个um我

00:08:03.280 --> 00:08:07.360
通常不喜欢单步执行代码，因为它会更改所有

00:08:07.360 --> 00:08:10.639
围绕代码如何正确工作的时间，所以我

00:08:10.639 --> 00:08:14.800
不确定，所以我不确定

00:08:14.800 --> 00:08:19.520
该代码将非常有效率，是的，我宁愿依靠日志消息

00:08:19.520 --> 00:08:24.560
唯一的问题是日志消息甚至倾向于

00:08:24.560 --> 00:08:28.319
如果您要向

00:08:28.319 --> 00:08:31.599
降低整个程序速度的控制台

00:08:31.599 --> 00:08:36.479
足以掩盖这个错误

00:08:36.479 --> 00:08:40.880
你知道正确的方法

00:08:41.200 --> 00:08:44.399
有什么方法可以记录吞吐量，然后逐步执行

00:08:44.399 --> 00:08:46.959
之后

00:08:50.880 --> 00:08:54.959
我不确定我不确定该怎么做

00:08:54.959 --> 00:09:01.200
嗯，我的意思是，就测试结果而言，我会写日志消息

00:09:01.200 --> 00:09:05.440
因此，我可以告诉um

00:09:05.440 --> 00:09:08.720
加密或签名是否成功

00:09:08.720 --> 00:09:13.040
因为我得到一个返回码，返回零码，所以签名是

00:09:13.040 --> 00:09:17.360
成功，一切都很好，但是如果返回代码返回

00:09:17.360 --> 00:09:21.839
一些无意义的价值和那种无意义的价值

00:09:21.839 --> 00:09:28.800
您将其转换为十六进制，然后就知道将最高的

00:09:28.800 --> 00:09:35.440
它解决的问题解决了我认为是返回码的意思

00:09:35.440 --> 00:09:38.480
某种冲突，但是没有

00:09:38.480 --> 00:09:43.600
关于该冲突返回代码意味着什么的文档只是说嗯

00:09:43.600 --> 00:09:46.380
发生了冲突，非常感谢，我知道

00:09:46.380 --> 00:09:50.370
[笑声]

00:09:52.959 --> 00:09:56.720
如果我正确地读取了返回码，那是什么意思，但是

00:09:56.720 --> 00:10:02.959
但是我到底该怎么办？你知道我该怎么办

00:10:02.959 --> 00:10:08.399
继续进行，我不知道，所以我要继续插拔它

00:10:08.399 --> 00:10:14.399
有时当我从某些过程中看到一些错误消息时，

00:10:14.399 --> 00:10:17.440
有时我想我自己，是的，我知道告诉我

00:10:17.440 --> 00:10:20.320
我不知道的东西

00:10:20.640 --> 00:10:23.760
完全正确，这就是我现在和现在的感觉

00:10:23.760 --> 00:10:28.399
如果我正确地读取了返回码，我就知道了，因为它确实涉及

00:10:28.399 --> 00:10:33.279
将其转换为十六进制，在

00:10:33.279 --> 00:10:36.079
非常高的水平，然后阅读

00:10:36.079 --> 00:10:38.720
余数，因为那是位电平

00:10:38.720 --> 00:10:41.839
零零零零零零零零零然后

00:10:41.839 --> 00:10:46.560
无论返回码的十六进制值是什么，我

00:10:46.560 --> 00:10:49.839
想到是的，你说你在签名

00:10:49.839 --> 00:10:53.440
um有效载荷，然后您正在验证它是

00:10:53.440 --> 00:11:01.839
签名正确正确，是的，您是否尝试过验证

00:11:01.920 --> 00:11:05.680
你尝试过解密吗

00:11:05.680 --> 00:11:09.680
有效负载之后保存每个有效负载

00:11:09.680 --> 00:11:13.440
嗯，保存一个正确的和不正确的

00:11:13.440 --> 00:11:16.880
然后解密每个，然后再看

00:11:16.880 --> 00:11:20.800
有什么不同是的，所以我正在做所以我正在做

00:11:20.800 --> 00:11:26.839
um与签名和签名分开进行加密和解密

00:11:26.839 --> 00:11:31.760
验证以证明我可以单独完成每个任务，然后如果可以证明我

00:11:31.760 --> 00:11:36.560
可以单独做每个，然后我将用有效载荷签名

00:11:36.560 --> 00:11:41.360
加密它，解密它，验证签名，然后

00:11:41.360 --> 00:11:45.440
检索有效负载，但我还没有证明我可以加密和

00:11:45.440 --> 00:11:49.680
完全没有问题，我可以做到的就是解密

00:11:49.680 --> 00:11:53.839
我可以每次都可靠地做到这一点，但一点也不担心

00:11:53.839 --> 00:11:57.120
这是整个签名，然后

00:11:57.120 --> 00:12:01.120
验证正在咬我的有效载荷的签名

00:12:01.120 --> 00:12:04.560
是的，这正是我的意思

00:12:04.560 --> 00:12:10.880
只是试图验证您是否知道要消除

00:12:10.880 --> 00:12:16.480
那两个有效载荷实际上是相同的，即使您

00:12:16.480 --> 00:12:20.160
嗯，你还没来得及

00:12:20.160 --> 00:12:23.040
很好用，但只是为了验证

00:12:23.040 --> 00:12:25.839
没关系

00:12:26.079 --> 00:12:33.360
是的，我已经做到了，很好，所以我已经做到了

00:12:33.360 --> 00:12:37.040
用加密和解密

00:12:37.519 --> 00:12:44.079
好的，彼得，先生，我会很无礼，但是他们可以

00:12:44.079 --> 00:12:47.839
校验和，然后将其检查以查看其编号是否更改

00:12:47.839 --> 00:12:51.440
因为我知道，是的，那不知道

00:12:51.440 --> 00:12:57.760
好吧，所以事情是有效载荷是纯文本好吧，只是

00:12:57.760 --> 00:13:04.320
它实际上是一个json文档，所以验证

00:13:04.320 --> 00:13:09.760
有效负载现在与签署有效负载的操作相同

00:13:09.760 --> 00:13:14.639
不会更改有效负载，对有效负载进行签名会创建一个

00:13:14.639 --> 00:13:20.959
分开一个十六进制的字符串，你可以分开存储，然后

00:13:20.959 --> 00:13:26.160
你把这两个都加密了

00:13:26.160 --> 00:13:29.360
然后在您通过互联网或其他方式发送之后

00:13:29.360 --> 00:13:32.720
你解密它，然后你拿那个签名，你

00:13:32.720 --> 00:13:37.600
知道后验证有效载荷

00:13:37.600 --> 00:13:44.320
从您不签名，当您

00:13:44.320 --> 00:13:48.000
签名或验证签名，以便

00:13:48.000 --> 00:13:52.959
技巧是为了进行测试以确保签名和验证工作

00:13:52.959 --> 00:13:57.040
是你签名就得到签名

00:13:57.040 --> 00:14:01.600
然后将签名和有效载荷一起传递给验证

00:14:01.600 --> 00:14:04.959
你说好，这是否验证了

00:14:04.959 --> 00:14:09.120
这是否正确验证了我唯一可以做的

00:14:09.120 --> 00:14:13.760
想到那个嗯，我可以想到两个地方

00:14:13.760 --> 00:14:17.360
可能是一个问题

00:14:17.360 --> 00:14:23.760
签名，呃，以某种方式失败或验证

00:14:23.760 --> 00:14:27.440
失败了，它并没有告诉你为什么或在那里

00:14:27.440 --> 00:14:34.880
是的，所以失败的地方是签名

00:14:34.880 --> 00:14:41.199
因为我可以看到签名并获得零返回码

00:14:41.199 --> 00:14:46.160
只要签名操作正确，它就会起作用

00:14:46.160 --> 00:14:52.639
这样我就可以看到签名了，因为ii在我的日志消息中打印了该签名

00:14:52.639 --> 00:14:59.120
因此，如果签名不起作用，那么我的测试代码是愚蠢的，那就继续吧

00:14:59.120 --> 00:15:01.920
并尝试进行验证，但是当然没有任何验证，因为

00:15:01.920 --> 00:15:06.959
签名失败，所以指出失败的地方是

00:15:06.959 --> 00:15:10.399
签名是有效载荷的签名

00:15:10.399 --> 00:15:13.519
那是失败发生的地方，我可以告诉你

00:15:13.519 --> 00:15:18.720
毫无疑问，我从来没有遇到过问题，如果它成功签署

00:15:18.720 --> 00:15:22.240
如果签名成功，则验证失败

00:15:22.240 --> 00:15:26.079
验证每次都有效，但签名

00:15:26.079 --> 00:15:31.120
是它的备案地点

00:15:31.279 --> 00:15:35.040
可能是时间问题，嗯

00:15:35.040 --> 00:15:40.320
我只是像往常一样在脑海中思考

00:15:40.320 --> 00:15:43.839
但它开始在有效载荷之前签名

00:15:43.839 --> 00:15:48.000
正确交付，以便签署某些东西，

00:15:48.000 --> 00:15:52.399
嗯，我认为它运行得太早了，可以这么说

00:15:52.399 --> 00:15:56.480
哦，所以测试代码，所以测试代码不会运行

00:15:56.480 --> 00:16:00.000
不会尝试验证签名

00:16:00.000 --> 00:16:04.880
直到签名过程完成之后

00:16:04.880 --> 00:16:09.440
因为在我看到良好的效果之前，我不会继续进行下一个操作

00:16:09.440 --> 00:16:13.519
签名过程中的零返回码

00:16:13.519 --> 00:16:17.120
是的，但是我不认为它可以移动我不

00:16:17.120 --> 00:16:22.959
认为它可以继续进行验证，直到我知道签名的有效性为止

00:16:22.959 --> 00:16:28.720
是的，这是我们的调试器或调试消息会在哪里

00:16:28.720 --> 00:16:33.040
派上用场，因为这样你就可以看看

00:16:33.040 --> 00:16:39.199
如果有时间管理员，顺便说一句

00:16:39.199 --> 00:16:43.040
glib uh测试工具

00:16:43.040 --> 00:16:46.639
他们做得很好他们做得很好

00:16:46.639 --> 00:16:50.160
使测试工具看起来和工作起来像

00:16:50.160 --> 00:16:57.040
呃，尽我所能

00:16:57.040 --> 00:17:00.399
他们做得更好，例如我的笨拙测试

00:17:00.399 --> 00:17:03.839
线束只运行所有测试，我不在乎它需要多长时间，但是

00:17:03.839 --> 00:17:07.600
您可以对测试进行分类以说明它们是否真的运行很长时间

00:17:07.600 --> 00:17:11.760
因此，是否选择在常规测试工具上运行它们

00:17:11.760 --> 00:17:15.439
所有这些东西，但现在是否正在发生

00:17:15.439 --> 00:17:18.000
使用测试工具，现在您知道可能有些东西

00:17:18.000 --> 00:17:21.520
继续进行我不知道的测试代码，但是

00:17:21.520 --> 00:17:25.439
这也证明了他们正在做某些需要

00:17:25.439 --> 00:17:28.640
加密并正确执行是非常困难的

00:17:28.640 --> 00:17:35.520
所以那些他们和那些进行良好加密的项目

00:17:35.520 --> 00:17:41.280
嗯，他们的一些地方像这样

00:17:41.280 --> 00:17:46.640
问题，他们不得不经历几次才能如此

00:17:46.640 --> 00:17:50.160
是的，只是解释一下

00:17:50.960 --> 00:17:55.679
我很难同意，但是我会再说一遍

00:17:55.679 --> 00:17:59.520
加密非常有效，我可以加密和解密

00:17:59.520 --> 00:18:02.320
内容和我每次都得到相同的有效载荷

00:18:02.320 --> 00:18:07.600
这不是一个很好的问题，这是使我感到痛苦的迹象。

00:18:07.600 --> 00:18:11.280
背面，这是我要尝试的唯一事情

00:18:11.280 --> 00:18:16.960
呃，我想让我的头转转，我不明白我不会用

00:18:18.720 --> 00:18:24.799
rsa，我相信我需要检查一下，我还没有看过我

00:18:24.799 --> 00:18:28.320
可以去看看，我的意思是我可以，但我不想弄乱

00:18:28.320 --> 00:18:32.720
录音，以后再告诉你

00:18:34.559 --> 00:18:40.240
嗯，是的，如果有人遇到其他任何其他事情，这就是我要做的

00:18:40.240 --> 00:18:44.400
我很高兴听到这个想法，所以让我们快速地讨论一下

00:18:44.400 --> 00:18:47.039
因为我在这里花了太多时间

00:18:47.039 --> 00:18:51.840
所以这个周末你要做什么我昨天，今天都在

00:18:51.840 --> 00:19:00.160
而且我一直在帮助我的兄弟搬家，是的，他找到了一份新工作。

00:19:00.160 --> 00:19:09.360
所以他必须关闭或结束他的呃

00:19:09.360 --> 00:19:15.360
在他的旧公寓里和他搬家之前的租金协议

00:19:15.360 --> 00:19:20.720
换成新的，他不得不同意，所以他动了，他有一个临时工

00:19:20.720 --> 00:19:25.760
我一半的家具都留在我的地方

00:19:25.760 --> 00:19:30.640
车库现在如此，他对美国人来说还有一些

00:19:30.640 --> 00:19:34.640
对于美国人来说，在平台上是

00:19:34.640 --> 00:19:39.840
和公寓一样，对吧

00:19:39.919 --> 00:19:43.039
那就是我一直在做的事，我知道你知道之后

00:19:43.039 --> 00:19:50.640
喝咖啡休息时间，我要进去，把我的拖车挂在车上，然后开车

00:19:50.640 --> 00:19:54.000
在某个地方遇见他，然后他接管拖车，

00:19:54.000 --> 00:20:00.880
呃，把最后的那片空气移到多远的地方

00:20:00.880 --> 00:20:04.000
而且距离是两个半小时的车程

00:20:04.000 --> 00:20:08.960
在这里给他哦，所以通勤不是很好

00:20:08.960 --> 00:20:14.000
选择留在他目前的家中去开车去做新工作是

00:20:14.000 --> 00:20:18.159
不是一个真正的选择，然后从他的老地方到呃到

00:20:18.159 --> 00:20:20.720
纽约，你可以工作一个半小时

00:20:20.720 --> 00:20:29.120
是的，哦，好吧，也许两个小时火车公共交通

00:20:29.360 --> 00:20:34.799
是的，那不是一个选择，因为他必须

00:20:38.799 --> 00:20:42.240
如果有人需要去医院然后

00:20:42.240 --> 00:20:46.840
嗯，他还可以接电话的人之一

00:20:46.840 --> 00:20:50.960
好的，是的，这是他是出租车司机

00:20:50.960 --> 00:20:53.200
好

00:20:53.760 --> 00:21:00.640
所以哦，很好，所以他得到了一个新的人，他和那家出租车公司签了合同

00:21:00.640 --> 00:21:04.960
在其中一个城市

00:21:04.960 --> 00:21:11.760
距离我一个小时，他和他从

00:21:11.760 --> 00:21:18.720
在旧工作中，他有10呃工作，而其他所有人都是

00:21:18.720 --> 00:21:22.799
演员和恩，如果有人生病了，他们会打电话给他

00:21:22.799 --> 00:21:27.120
依此类推，但现在他有70

00:21:27.280 --> 00:21:33.360
工作协议，以便他可以计划自己的业余时间

00:21:33.360 --> 00:21:35.600
更好

00:21:36.080 --> 00:21:40.640
所以那座桥看起来很棒航海者桥看起来很棒我看到你

00:21:40.640 --> 00:21:45.280
再次做夜班嗯，您可能想检查一下底部

00:21:45.280 --> 00:21:49.280
您的屏幕上的数字是因为绿色

00:21:49.280 --> 00:21:52.430
屏幕还不能完全到达

00:21:52.430 --> 00:21:58.880
[笑声]我不想引起人们的注意，但是我

00:21:58.880 --> 00:22:00.720
以为你可能想知道你去了

00:22:00.720 --> 00:22:06.320
那里好多了哦是啊好多了更好

00:22:06.960 --> 00:22:10.080
道格先生，你要怎么做

00:22:10.080 --> 00:22:15.039
首先，我感觉好多了，我将在星期二重返工作岗位

00:22:15.039 --> 00:22:22.320
很好，我已经出去了三个星期了

00:22:22.320 --> 00:22:26.000
我正在打个电话，所以我可能会失去互联网

00:22:26.000 --> 00:22:30.400
再次，如果是这样，请挂断，不要挂断好吗

00:22:30.400 --> 00:22:35.200
所以我接到了左右左右的政治呼吁，这很疯狂

00:22:35.200 --> 00:22:40.000
嗯，所以你感觉好点了，以为你会回到

00:22:40.000 --> 00:22:44.480
上周工作很好，然后我和我的医生交谈，他

00:22:44.480 --> 00:22:48.320
说你必须有时间让消化系统恢复

00:22:48.320 --> 00:22:52.240
这就是我一直在做的事情，

00:22:52.240 --> 00:22:56.400
好吧，我过得很好，所以我星期二重返工作

00:22:56.400 --> 00:23:00.799
你回来了吗，你回到了固体食物上，那么一切都很好

00:23:00.799 --> 00:23:07.520
是的，很好，是的，所以那是个好笑的名字

00:23:07.520 --> 00:23:13.559
我上周在笔记中的拼写正确吗

00:23:13.559 --> 00:23:16.480
细菌等待等待让我写下来

00:23:16.480 --> 00:23:22.559
等待再次拼写它c营地实际上

00:23:22.559 --> 00:23:27.679
是啊

00:23:27.799 --> 00:23:32.080
弯曲杆菌

00:23:34.799 --> 00:23:41.600
好吧那里没有b看到我没说对不起

00:23:41.600 --> 00:23:48.320
我以为你说b也许是pe不能属于yecamp

00:23:48.320 --> 00:23:52.400
好的

00:23:53.000 --> 00:23:58.240
lobacter是的，我读到b不是e，所以我认为那是不对的

00:23:58.240 --> 00:24:02.000
某处必须有腹肌

00:24:02.480 --> 00:24:09.760
这次我会闻起来很香，我保证也许是罗比，这是我的家人

00:24:09.760 --> 00:24:13.840
这个用户在拼写时绝对是

00:24:13.840 --> 00:24:21.120
绝对是的，还是你是的，那也是我

00:24:21.120 --> 00:24:23.600
可能可以做到，而且可能可以做到正确

00:24:23.600 --> 00:24:27.279
是的，对不起，我不好，因为他们特别是Google的作品

00:24:27.279 --> 00:24:30.559
拼写很好，很好

00:24:30.559 --> 00:24:34.320
是的，没错，拼写错误会正确输入，会弄清楚

00:24:34.320 --> 00:24:37.679
你想做的是，或者就我而言，duckduckgo我不是

00:24:37.679 --> 00:24:42.159
不知道是的，duckduckgo不会追踪您

00:24:42.159 --> 00:24:46.320
不能正确地跟踪您的起始页

00:24:46.320 --> 00:24:49.440
是的，开始选择另一个搜索引擎哦，是的

00:24:49.440 --> 00:24:55.200
哦，我得写下一句话，你们真的很有帮助，谢谢开始

00:24:55.200 --> 00:25:01.760
页面点com是的甜

00:25:01.760 --> 00:25:04.880
谢谢你欣赏我正在使用我方便的花花公子

00:25:04.880 --> 00:25:13.360
臭dinky微小的小恩，是的，男人很好

00:25:13.360 --> 00:25:17.279
不再爱我了，除了我写支票时，不再有圆珠笔

00:25:17.279 --> 00:25:20.000
因为你做不到，你不能努力下推

00:25:20.000 --> 00:25:24.320
如果您也尝试向下推，足以通过此副本

00:25:24.320 --> 00:25:28.159
很难，它会很好地散布纸张，只会打出尖齿

00:25:28.159 --> 00:25:32.799
现在在钢笔上我不知道你是否能看到它

00:25:32.799 --> 00:25:37.760
因为它不会专注于我的脸它不会专注于那个嗯

00:25:37.760 --> 00:25:41.360
在广告上，它仍然不会集中精力，但是

00:25:41.360 --> 00:25:48.559
事情是那个，它会把牙齿上的尖齿张开

00:25:48.559 --> 00:25:51.039
在钢笔上而不是放在

00:25:51.039 --> 00:25:55.760
纸张上的压力更大，因此您无法获得复印件

00:25:55.760 --> 00:26:00.000
彼得先生，您还剩下四五分钟了

00:26:00.000 --> 00:26:07.279
嗯，我的肩膀还是疼，嗯，去吧，移动它，

00:26:07.279 --> 00:26:13.840
呃，我们又被打倒了哦，再一次，呃，我必须做任何事情

00:26:13.840 --> 00:26:18.159
特别是虽然我已经再次被锁住了

00:26:18.159 --> 00:26:22.000
那里的数字也在上升

00:26:22.000 --> 00:26:27.840
不，不，他们都被疏散了，我也得了流感笑话

00:26:27.840 --> 00:26:32.080
日子还好，妈妈也好

00:26:32.080 --> 00:26:35.360
但是我不能吃鸡蛋，我不能吃鸡蛋

00:26:35.360 --> 00:26:42.559
嗯，我喜欢用混合了橡胶手套的这个嗯

00:26:42.559 --> 00:26:49.120
乳胶是的，是的，我不知道为什么他们要服用它

00:26:49.120 --> 00:26:52.960
我告诉他们是

00:26:53.120 --> 00:27:00.480
哦，亲爱的我知道你会去那里我知道你会去那里为什么我不感到惊讶

00:27:00.880 --> 00:27:04.080
你老婆感觉怎么样？

00:27:04.080 --> 00:27:10.400
编织是她休息了吗，不，你知道她需要表现自己的男人吗

00:27:10.400 --> 00:27:13.679
我知道我可以告诉，但他们不会，他们不会被告知

00:27:13.679 --> 00:27:18.159
不会告诉他们所有这些血腥的事情

00:27:18.159 --> 00:27:20.960
不要只是起床

00:27:21.150 --> 00:27:24.189
[音乐]

00:27:28.320 --> 00:27:33.120
好的，但医生医生必须对如果嗯会发生什么有所了解

00:27:33.120 --> 00:27:37.039
如果她不知道，那你怎么编织得好

00:27:37.039 --> 00:27:44.000
最坏的情况最坏的情况是它应该在那里变形，呃

00:27:44.000 --> 00:27:48.320
只是每次他伸胳膊然后尝试去做都是不对的

00:27:48.320 --> 00:27:51.440
骨头会愈合的一切，骨头

00:27:51.440 --> 00:27:53.600
会再次恢复健康他们只会恢复健康

00:27:53.600 --> 00:27:56.399
是的，这就是我的意思，是的，他们都完成了，他们全部都起来了

00:27:56.399 --> 00:27:59.679
是的，他们虽然去错了地方

00:27:59.679 --> 00:28:03.600
他们可以给她一个问题，但他们已经伸手撞倒了

00:28:03.600 --> 00:28:07.760
在那附近，他们没有被告知没有任何权威告诉我

00:28:07.760 --> 00:28:12.720
我很害怕，所以你知道你知道我们已经做得到了，因为

00:28:12.720 --> 00:28:18.320
你知道，但我很遗憾听到我的意思是，我能

00:28:18.320 --> 00:28:22.880
说是你知道告诉她你知道休息

00:28:22.880 --> 00:28:26.320
up愈，希望一切都会好起来，并且

00:28:26.320 --> 00:28:30.000
我只能说我们的想法与您同在，希望我希望

00:28:30.000 --> 00:28:34.960
一切对您和您的妻子都有效，是的，哦，是的，是的，我

00:28:34.960 --> 00:28:37.200
再见

00:28:37.360 --> 00:28:44.240
像继续吧，继续吧，那不，我只是

00:28:50.720 --> 00:28:55.440
所以任何关闭任何结束评论然后我之前

00:28:55.440 --> 00:28:58.640
在我结束会议之前，因为很难相信我们不仅

00:28:58.640 --> 00:29:04.880
完成了30分钟，这太疯狂了，但是我们只有三个月

00:29:04.880 --> 00:29:10.799
是的，继续吧，是的，上周录音结束了

00:29:10.799 --> 00:29:13.120
当我觉得你失去了你的时候真的有点突然

00:29:13.120 --> 00:29:17.360
互联网连接结束了，太好了

00:29:17.360 --> 00:29:19.919
我喜欢那个

00:29:20.480 --> 00:29:24.720
是的，我告诉罗比，现在我再告诉他，他做得很好

00:29:24.720 --> 00:29:27.520
以那个结尾，我喜欢它，所以

00:29:27.520 --> 00:29:31.919
是整个喝咖啡休息时间的最好画面

00:29:31.919 --> 00:29:38.720
那个结局绝对是哦，非常感谢你

00:29:38.720 --> 00:29:42.399
我很欣赏，所以结局比我们的娱乐更有趣

00:29:42.399 --> 00:29:46.240
漫步，谢谢，我很感激

00:29:49.279 --> 00:29:52.640
好的，然后在那张纸条上，我要继续并关闭

00:29:52.640 --> 00:29:56.399
关闭会议，非常感谢您，希望我们能看到

00:29:56.399 --> 00:30:00.159
你下周可能会抢，你会一次只出现一次

00:30:00.159 --> 00:30:04.159
让我们知道他的工作室的情况如何

00:30:04.159 --> 00:30:08.240
他上周走了，大概是因为他在玩

00:30:08.240 --> 00:30:12.720
主题曲，所以，我们来看看效果如何

00:30:12.720 --> 00:30:16.240
如果他还没有，他已经放弃了那集，我不是，我不是

00:30:16.240 --> 00:30:20.880
知道他上周放弃了吗？

00:30:20.880 --> 00:30:23.200
整个

00:30:30.399 --> 00:30:34.240
但我没办法玩

00:30:34.399 --> 00:30:40.720
哦，确实发生了什么事，好吗？

00:30:40.720 --> 00:30:44.640
圆形的小玩符号，你知道三角形

00:30:44.640 --> 00:30:47.840
在它上面，我击中它，然后它去了什么

00:30:47.840 --> 00:30:51.279
似乎是一张照片，当我单击照片时

00:30:51.279 --> 00:30:55.120
只是一张照片而没有链接到视频

00:30:55.120 --> 00:31:01.440
现在可以吗？你可以从patreon下载视频吗？

00:31:01.440 --> 00:31:04.720
可以下载的地方

00:31:05.360 --> 00:31:08.799
我认为这可能是一件事

00:31:08.799 --> 00:31:15.679
呃还在上传和处理中，以便

00:31:15.679 --> 00:31:19.360
照片是他们即将来临时的预览

00:31:19.360 --> 00:31:22.880
完成了，是的，是的，我想是的，所以你可能只是

00:31:22.880 --> 00:31:29.279
想要再试一次，也许再试一次，是的，好的，好消息

00:31:29.279 --> 00:31:33.440
好的，再次感谢您，一如既往地非常享受它，并且

00:31:33.440 --> 00:31:36.960
非常感谢您的参与，我们下周见。

00:31:36.960 --> 00:31:39.760
而且，嗯，请尝试避免遇到麻烦

00:31:39.760 --> 00:31:44.840
每个人都保持安全好没事再见好吧

00:31:44.840 --> 00:31:47.840
再见

