WEBVTT
Kind: captions
Language: pt

00:00:01.100 --> 00:00:07.980
 cobrindo os melhores idiotas da semana, como 

00:00:04.350 --> 00:00:10.830
 Os invasores do Linux por trás de um dos 

00:00:07.980 --> 00:00:11.429
 peças mais destrutivas do mundo 

00:00:10.830 --> 00:00:14.070
 ransomware 

00:00:11.429 --> 00:00:16.139
 descobriram uma nova maneira de derrotar as defesas 

00:00:14.070 --> 00:00:18.140
 que isso poderia impedir a 

00:00:16.139 --> 00:00:21.420
 ataque de dados de criptografia Incred 

00:00:18.140 --> 00:00:23.640
 instalar um driver de buggy primeiro e depois 

00:00:21.420 --> 00:00:26.910
 cortá-lo para cavar mais fundo no 

00:00:23.640 --> 00:00:29.880
 computador alvo o ransomware neste 

00:00:26.910 --> 00:00:31.740
 caso é Robin Hood conhecido por derrubar 

00:00:29.880 --> 00:00:35.090
 as redes da cidade de Baltimore e 

00:00:31.740 --> 00:00:38.100
 sistemas em Greenville North Carolina 

00:00:35.090 --> 00:00:39.899
 Robin Hood pode facilmente criptografar 

00:00:38.100 --> 00:00:41.640
 arquivos uma vez que uma vulnerabilidade tenha permitido 

00:00:39.899 --> 00:00:44.700
 o malware para obter uma vantagem 

00:00:41.640 --> 00:00:46.559
 para redes melhor fortificadas 

00:00:44.700 --> 00:00:49.980
 o machado ransomware tem mais dificuldade 

00:00:46.559 --> 00:00:52.710
 arrombando agora Robin Hood encontrou um 

00:00:49.980 --> 00:00:54.989
 maneira de derrotar essas defesas em dois 

00:00:52.710 --> 00:00:58.800
 ataques recentes pesquisadores de segurança 

00:00:54.989 --> 00:01:02.579
 A empresa Sophos disse que o ransomware usou 

00:00:58.800 --> 00:01:04.949
 seu acesso a uma máquina direcionada para 

00:01:02.579 --> 00:01:07.890
 instalar um driver a partir de Taiwan 

00:01:04.949 --> 00:01:10.890
 fabricante de placas-mãe gigabyte que 

00:01:07.890 --> 00:01:13.170
 tem uma vulnerabilidade conhecida, é o 

00:01:10.890 --> 00:01:15.150
 mesma vulnerabilidade que levou ao gigabyte 

00:01:13.170 --> 00:01:18.210
 funcionários interrompendo o uso do 

00:01:15.150 --> 00:01:20.400
 driver, mas uma vez que contém gigabytes 

00:01:18.210 --> 00:01:23.220
 assinatura criptográfica do Windows 

00:01:20.400 --> 00:01:25.860
 sistema operacional confia nele e permite 

00:01:23.220 --> 00:01:28.080
 permite que ele seja executado no altamente 

00:01:25.860 --> 00:01:32.490
 região sensível do kernel do Windows do 

00:01:28.080 --> 00:01:35.450
 OS sem dúvida leva um benigno, mas 

00:01:32.490 --> 00:01:37.979
 motorista de buggy instalado Robin Hood então 

00:01:35.450 --> 00:01:40.200
 explorou a vulnerabilidade para obter o 

00:01:37.979 --> 00:01:43.259
 capacidade de ler e escrever para virtualmente 

00:01:40.200 --> 00:01:45.960
 qualquer região de memória escolhida pelo atacante 

00:01:43.259 --> 00:01:49.350
 a exploração de Robin Hood mudou um único 

00:01:45.960 --> 00:01:52.530
 byte para desativar o requisito do windows 

00:01:49.350 --> 00:01:54.869
 que os motoristas sejam assinados com esse Robin 

00:01:52.530 --> 00:01:57.899
 Hood instalou seu próprio driver não assinado 

00:01:54.869 --> 00:02:00.450
 que usou seu kernel altamente privilegiado 

00:01:57.899 --> 00:02:02.670
 acesso para matar processos e arquivos 

00:02:00.450 --> 00:02:05.790
 pertencente a produtos de segurança de terminal 

00:02:02.670 --> 00:02:08.640
 o status avançado do motorista deu 

00:02:05.790 --> 00:02:10.770
 maior capacidade do que outras técnicas 

00:02:08.640 --> 00:02:13.440
 para garantir que os processos direcionados 

00:02:10.770 --> 00:02:15.900
 são permanentemente parados 

00:02:13.440 --> 00:02:18.000
 existem outros drivers confiáveis ​​do Windows 

00:02:15.900 --> 00:02:19.440
 com vulnerabilidades conhecidas que podem ser 

00:02:18.000 --> 00:02:23.700
 usado da mesma maneira que gigabytes 

00:02:19.440 --> 00:02:28.410
 drivers incluem drivers de sinal de 

00:02:23.700 --> 00:02:31.290
 Romance VirtualBox cpu-z e asus e 

00:02:28.410 --> 00:02:33.600
 enquanto o driver gigabyte pode ser o 

00:02:31.290 --> 00:02:36.570
 primeira instância conhecida desse tipo de 

00:02:33.600 --> 00:02:37.110
 cortar é muito bem pode não ser o 

00:02:36.570 --> 00:02:39.510
 último 

00:02:37.110 --> 00:02:41.610
 e aponta para a necessidade da Microsoft 

00:02:39.510 --> 00:02:46.410
 reavaliar a maneira como seu certificado 

00:02:41.610 --> 00:02:48.990
 procedimentos de revogação hmm isso é difícil 

00:02:46.410 --> 00:02:50.850
 mm-hmm porque a parte de mim quer 

00:02:48.990 --> 00:02:53.190
 para dizer Oh, nós apenas revogaremos o 

00:02:50.850 --> 00:02:55.380
 certificado a qualquer momento há uma exploração 

00:02:53.190 --> 00:03:01.080
 mas lembre-se que então isso 

00:02:55.380 --> 00:03:04.230
 anular os motoristas de todo mundo certo modo 

00:03:01.080 --> 00:03:07.890
 isso é tudo toupeira quero dizer como eu estou ouvindo 

00:03:04.230 --> 00:03:10.050
 isso é como uma nova onda de Trojan 

00:03:07.890 --> 00:03:14.720
 ataques por assim dizer sim, é isso que 

00:03:10.050 --> 00:03:17.489
 parece que você está entrando 

00:03:14.720 --> 00:03:21.209
 sim fonte confiável para obter acesso é 

00:03:17.489 --> 00:03:23.970
 que não o princípio básico de trás 

00:03:21.209 --> 00:03:26.340
 ou é uma maneira totalmente diferente de 

00:03:23.970 --> 00:03:29.400
 apenas parece que eles estão usando-o como 

00:03:26.340 --> 00:03:34.200
 uma tática de privilégio elevado para que eles sejam 

00:03:29.400 --> 00:03:38.310
 usando um driver que o Windows confia 

00:03:34.200 --> 00:03:40.260
 por causa da assinatura ser válida para 

00:03:38.310 --> 00:03:43.290
 não é um motorista falso, não é como um 

00:03:40.260 --> 00:03:45.780
 malware é um driver legítimo, mas 

00:03:43.290 --> 00:03:48.750
 tem um bug nele mm-hmm que o levou a 

00:03:45.780 --> 00:03:50.310
 ser lembrado basicamente, mas o Windows 

00:03:48.750 --> 00:03:52.830
 sistema operacional, independentemente da versão 

00:03:50.310 --> 00:03:55.050
 você está correndo ainda confia no 

00:03:52.830 --> 00:03:58.620
 Instalador para esse driver devido ao 

00:03:55.050 --> 00:04:01.140
 certificado que é aplicado a ele e assim 

00:03:58.620 --> 00:04:03.000
 os hackers estão usando isso para ser 

00:04:01.140 --> 00:04:05.070
 capaz de elevar seus privilégios e fazer 

00:04:03.000 --> 00:04:07.620
 o que diabos eles querem e isso é 

00:04:05.070 --> 00:04:10.580
 o assustador, porque como você para 

00:04:07.620 --> 00:04:14.160
 que como você pode parar que eu 

00:04:10.580 --> 00:04:16.530
 acho que se resume a onde está o seu 

00:04:14.160 --> 00:04:17.880
 primeira linha de defesa eu acho que o único 

00:04:16.530 --> 00:04:20.220
 coisa que você tem que fazer que você pode olhar 

00:04:17.880 --> 00:04:22.440
 em é como eles entraram no primeiro 

00:04:20.220 --> 00:04:24.180
 lugar era um golpe de phishing era 

00:04:22.440 --> 00:04:25.650
 alguém clicou em um e-mail que tinha 

00:04:24.180 --> 00:04:26.790
 alguns arquivos este malware que permitiu 

00:04:25.650 --> 00:04:28.740
 alguém para executar algum 

00:04:26.790 --> 00:04:31.320
 residente em seu computador é que 

00:04:28.740 --> 00:04:33.330
 você tem a área de trabalho remota ligada em um 

00:04:31.320 --> 00:04:35.400
 dos seus computadores na sua rede e 

00:04:33.330 --> 00:04:37.440
 isso é realmente fácil de hackear agora eu não 

00:04:35.400 --> 00:04:40.110
 saber como os certificados funcionam apenas porque 

00:04:37.440 --> 00:04:42.510
 Eu não mergulhei nisso, mas cada um 

00:04:40.110 --> 00:04:46.260
 certificado em cada driver tem seu próprio 

00:04:42.510 --> 00:04:48.570
 como um identificador de certificado não o 

00:04:46.260 --> 00:04:50.760
 motorista não tem seu próprio certificado 

00:04:48.570 --> 00:04:54.750
 mas a empresa que fabrica o 

00:04:50.760 --> 00:04:59.810
 motorista faz para que o certificado diga sim 

00:04:54.750 --> 00:05:02.820
 para a Microsoft este é um driver de gigabyte 

00:04:59.810 --> 00:05:05.640
 fornecido por gigabyte porque contém 

00:05:02.820 --> 00:05:07.830
 o certificado que prova que isso é 

00:05:05.640 --> 00:05:09.870
 um driver legítimo de gigabyte para 

00:05:07.830 --> 00:05:12.000
 e se o sistema de certificação mudou 

00:05:09.870 --> 00:05:15.000
 de tal maneira que você tenha seu seu 

00:05:12.000 --> 00:05:16.590
 certificado principal gigabyte mais seguro, mas depois 

00:05:15.000 --> 00:05:20.730
 você tem seus sub certificados para cada 

00:05:16.590 --> 00:05:25.370
 desenrolar do driver para identificar 

00:05:20.730 --> 00:05:28.860
 este driver é esse subconjunto sim um 

00:05:25.370 --> 00:05:33.540
 desenvolvedor, sinto que é seu você 

00:05:28.860 --> 00:05:35.340
 me dando pesadelos agora Jeff gosta 

00:05:33.540 --> 00:05:37.410
 onde você está indo, mas parece 

00:05:35.340 --> 00:05:39.000
 como um pesadelo logístico, tanto quanto 

00:05:37.410 --> 00:05:41.510
 gerenciar esses certificados como ele 

00:05:39.000 --> 00:05:45.240
 poderia ser apenas um pesadelo, acho que talvez 

00:05:41.510 --> 00:05:47.910
 algum tipo de aristocrata é capaz de 

00:05:45.240 --> 00:05:50.700
 identificar talvez seja uma soma de verificação que 

00:05:47.910 --> 00:05:53.040
 identifica drivers defeituosos conhecidos ou 

00:05:50.700 --> 00:05:54.360
 drivers obsoletos para que o Windows pudesse 

00:05:53.040 --> 00:05:57.420
 diga sim, este é um certificado válido 

00:05:54.360 --> 00:06:01.490
 no entanto gigabyte marcou isso 

00:05:57.420 --> 00:06:03.450
 certificado lá este instalador tão ruim 

00:06:01.490 --> 00:06:05.850
 tem que ser algum tipo de 

00:06:03.450 --> 00:06:07.169
 identificador sim, é bom que vai ser 

00:06:05.850 --> 00:06:12.770
 interessante 

00:06:07.169 --> 00:06:12.770
 sim cara oh sim, essa é a resposta 

